ARM GAS  /tmp/ccJLHc1D.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32g4xx_hal_adc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.LL_ADC_SetChannelSamplingTime,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	LL_ADC_SetChannelSamplingTime:
  26              	.LVL0:
  27              	.LFB191:
  28              		.file 1 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h"
   1:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
   2:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   ******************************************************************************
   3:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @file    stm32g4xx_ll_adc.h
   4:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @author  MCD Application Team
   5:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief   Header file of ADC LL module.
   6:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   ******************************************************************************
   7:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @attention
   8:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
   9:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * All rights reserved.</center></h2>
  11:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
  12:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * the "License"; You may not use this file except in compliance with the
  14:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * License. You may obtain a copy of the License at:
  15:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
  17:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   ******************************************************************************
  18:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
  19:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
  20:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  21:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #ifndef STM32G4xx_LL_ADC_H
  22:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define STM32G4xx_LL_ADC_H
  23:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
  24:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #ifdef __cplusplus
  25:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** extern "C" {
  26:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif
  27:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
  28:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Includes ------------------------------------------------------------------*/
  29:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #include "stm32g4xx.h"
  30:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
ARM GAS  /tmp/ccJLHc1D.s 			page 2


  31:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @addtogroup STM32G4xx_LL_Driver
  32:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
  33:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
  34:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
  35:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined (ADC1) || defined (ADC2) || defined (ADC3) || defined (ADC4) || defined (ADC5)
  36:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
  37:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL ADC
  38:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
  39:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
  40:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
  41:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Private types -------------------------------------------------------------*/
  42:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Private variables ---------------------------------------------------------*/
  43:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
  44:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Private constants ---------------------------------------------------------*/
  45:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_Private_Constants ADC Private Constants
  46:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
  47:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
  48:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
  49:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Internal mask for ADC group regular sequencer:                             */
  50:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* To select into literal LL_ADC_REG_RANK_x the relevant bits for:            */
  51:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* - sequencer register offset                                                */
  52:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* - sequencer rank bits position into the selected register                  */
  53:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
  54:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Internal register offset for ADC group regular sequencer configuration */
  55:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* (offset placed into a spare area of literal definition) */
  56:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_SQR1_REGOFFSET                 (0x00000000UL)
  57:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_SQR2_REGOFFSET                 (0x00000100UL)
  58:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_SQR3_REGOFFSET                 (0x00000200UL)
  59:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_SQR4_REGOFFSET                 (0x00000300UL)
  60:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
  61:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_SQRX_REGOFFSET_MASK        (ADC_SQR1_REGOFFSET | ADC_SQR2_REGOFFSET | ADC_SQR3_REGO
  62:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_SQRX_REGOFFSET_POS             (8UL) /* Position of bits ADC_SQRx_REGOFFSET in ADC_REG_
  63:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_RANK_ID_SQRX_MASK          (ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0)
  64:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
  65:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Definition of ADC group regular sequencer bits information to be inserted  */
  66:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* into ADC group regular sequencer ranks literals definition.                */
  67:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_RANK_1_SQRX_BITOFFSET_POS  (ADC_SQR1_SQ1_Pos)
  68:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_RANK_2_SQRX_BITOFFSET_POS  (ADC_SQR1_SQ2_Pos)
  69:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_RANK_3_SQRX_BITOFFSET_POS  (ADC_SQR1_SQ3_Pos)
  70:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_RANK_4_SQRX_BITOFFSET_POS  (ADC_SQR1_SQ4_Pos)
  71:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_RANK_5_SQRX_BITOFFSET_POS  (ADC_SQR2_SQ5_Pos)
  72:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_RANK_6_SQRX_BITOFFSET_POS  (ADC_SQR2_SQ6_Pos)
  73:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_RANK_7_SQRX_BITOFFSET_POS  (ADC_SQR2_SQ7_Pos)
  74:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_RANK_8_SQRX_BITOFFSET_POS  (ADC_SQR2_SQ8_Pos)
  75:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_RANK_9_SQRX_BITOFFSET_POS  (ADC_SQR2_SQ9_Pos)
  76:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_RANK_10_SQRX_BITOFFSET_POS (ADC_SQR3_SQ10_Pos)
  77:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_RANK_11_SQRX_BITOFFSET_POS (ADC_SQR3_SQ11_Pos)
  78:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_RANK_12_SQRX_BITOFFSET_POS (ADC_SQR3_SQ12_Pos)
  79:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_RANK_13_SQRX_BITOFFSET_POS (ADC_SQR3_SQ13_Pos)
  80:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_RANK_14_SQRX_BITOFFSET_POS (ADC_SQR3_SQ14_Pos)
  81:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_RANK_15_SQRX_BITOFFSET_POS (ADC_SQR4_SQ15_Pos)
  82:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_RANK_16_SQRX_BITOFFSET_POS (ADC_SQR4_SQ16_Pos)
  83:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
  84:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
  85:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
  86:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Internal mask for ADC group injected sequencer:                            */
  87:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* To select into literal LL_ADC_INJ_RANK_x the relevant bits for:            */
ARM GAS  /tmp/ccJLHc1D.s 			page 3


  88:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* - data register offset                                                     */
  89:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* - sequencer rank bits position into the selected register                  */
  90:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
  91:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Internal register offset for ADC group injected data register */
  92:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* (offset placed into a spare area of literal definition) */
  93:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_JDR1_REGOFFSET                 (0x00000000UL)
  94:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_JDR2_REGOFFSET                 (0x00000100UL)
  95:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_JDR3_REGOFFSET                 (0x00000200UL)
  96:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_JDR4_REGOFFSET                 (0x00000300UL)
  97:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
  98:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_INJ_JDRX_REGOFFSET_MASK        (ADC_JDR1_REGOFFSET | ADC_JDR2_REGOFFSET | ADC_JDR3_REGO
  99:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_INJ_RANK_ID_JSQR_MASK          (ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0)
 100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_JDRX_REGOFFSET_POS             (8UL) /* Position of bits ADC_JDRx_REGOFFSET in ADC_INJ_
 101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Definition of ADC group injected sequencer bits information to be inserted */
 103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* into ADC group injected sequencer ranks literals definition.               */
 104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_INJ_RANK_1_JSQR_BITOFFSET_POS  (ADC_JSQR_JSQ1_Pos)
 105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_INJ_RANK_2_JSQR_BITOFFSET_POS  (ADC_JSQR_JSQ2_Pos)
 106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_INJ_RANK_3_JSQR_BITOFFSET_POS  (ADC_JSQR_JSQ3_Pos)
 107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_INJ_RANK_4_JSQR_BITOFFSET_POS  (ADC_JSQR_JSQ4_Pos)
 108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Internal mask for ADC group regular trigger:                               */
 112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* To select into literal LL_ADC_REG_TRIG_x the relevant bits for:            */
 113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* - regular trigger source                                                   */
 114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* - regular trigger edge                                                     */
 115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_TRIG_EXT_EDGE_DEFAULT       (ADC_CFGR_EXTEN_0) /* Trigger edge set to rising edge (
 116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Mask containing trigger source masks for each of possible                  */
 118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
 119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_TRIG_SOURCE_MASK            (((LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR_EXTSEL) << (4U *
 121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              ((ADC_CFGR_EXTSEL)                            << (4U *
 122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              ((ADC_CFGR_EXTSEL)                            << (4U *
 123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              ((ADC_CFGR_EXTSEL)                            << (4U *
 124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Mask containing trigger edge masks for each of possible                    */
 126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
 127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_TRIG_EDGE_MASK              (((LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR_EXTEN) << (4U * 
 129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)             << (4U * 
 130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)             << (4U * 
 131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)             << (4U * 
 132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Definition of ADC group regular trigger bits information.                  */
 134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_TRIG_EXTSEL_BITOFFSET_POS  (ADC_CFGR_EXTSEL_Pos)
 135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_TRIG_EXTEN_BITOFFSET_POS   (ADC_CFGR_EXTEN_Pos)
 136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Internal mask for ADC group injected trigger:                              */
 140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* To select into literal LL_ADC_INJ_TRIG_x the relevant bits for:            */
 141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* - injected trigger source                                                  */
 142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* - injected trigger edge                                                    */
 143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_INJ_TRIG_EXT_EDGE_DEFAULT      (ADC_JSQR_JEXTEN_0) /* Trigger edge set to rising edge (
 144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
ARM GAS  /tmp/ccJLHc1D.s 			page 4


 145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Mask containing trigger source masks for each of possible                  */
 146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
 147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_INJ_TRIG_SOURCE_MASK            (((LL_ADC_INJ_TRIG_SOFTWARE & ADC_JSQR_JEXTSEL)  << (4U
 149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              ((ADC_JSQR_JEXTSEL)                             << (4U
 150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              ((ADC_JSQR_JEXTSEL)                             << (4U
 151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              ((ADC_JSQR_JEXTSEL)                             << (4U
 152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Mask containing trigger edge masks for each of possible                    */
 154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
 155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_INJ_TRIG_EDGE_MASK              (((LL_ADC_INJ_TRIG_SOFTWARE & ADC_JSQR_JEXTEN) << (4U *
 157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              ((ADC_INJ_TRIG_EXT_EDGE_DEFAULT)              << (4U *
 158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              ((ADC_INJ_TRIG_EXT_EDGE_DEFAULT)              << (4U *
 159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              ((ADC_INJ_TRIG_EXT_EDGE_DEFAULT)              << (4U *
 160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Definition of ADC group injected trigger bits information.                 */
 162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_INJ_TRIG_EXTSEL_BITOFFSET_POS  (ADC_JSQR_JEXTSEL_Pos)
 163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_INJ_TRIG_EXTEN_BITOFFSET_POS   (ADC_JSQR_JEXTEN_Pos)
 164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Internal mask for ADC channel:                                             */
 171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* To select into literal LL_ADC_CHANNEL_x the relevant bits for:             */
 172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* - channel identifier defined by number                                     */
 173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* - channel identifier defined by bitfield                                   */
 174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* - channel differentiation between external channels (connected to          */
 175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*   GPIO pins) and internal channels (connected to internal paths)           */
 176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* - channel sampling time defined by SMPRx register offset                   */
 177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*   and SMPx bits positions into SMPRx register                              */
 178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK         (ADC_CFGR_AWD1CH)
 179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_ID_BITFIELD_MASK       (ADC_AWD2CR_AWD2CH)
 180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS (ADC_CFGR_AWD1CH_Pos)
 181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_ID_MASK                (ADC_CHANNEL_ID_NUMBER_MASK | ADC_CHANNEL_ID_BITFIELD_MA
 182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Equivalent mask of ADC_CHANNEL_NUMBER_MASK aligned on register LSB (bit 0) */
 183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 (ADC_SQR2_SQ5) /* Equivalent to shift: (ADC_CHANNEL_NUMB
 184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Channel differentiation between external and internal channels */
 186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH         (0x80000000UL) /* Marker of internal channel */
 187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH_2       (0x00080000UL) /* Marker of internal channel for other A
 188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH_MASK    (ADC_CHANNEL_ID_INTERNAL_CH | ADC_CHANNEL_ID_INTERNAL_CH
 189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Internal register offset for ADC channel sampling time configuration */
 191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* (offset placed into a spare area of literal definition) */
 192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_SMPR1_REGOFFSET                (0x00000000UL)
 193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_SMPR2_REGOFFSET                (0x02000000UL)
 194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_SMPRX_REGOFFSET_MASK   (ADC_SMPR1_REGOFFSET | ADC_SMPR2_REGOFFSET)
 195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_SMPRX_REGOFFSET_POS            (25UL) /* Position of bits ADC_SMPRx_REGOFFSET in ADC_CH
 196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_SMPx_BITOFFSET_MASK    (0x01F00000UL)
 198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_SMPx_BITOFFSET_POS     (20UL)           /* Value equivalent to bitfield "ADC_CH
 199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Definition of channels ID number information to be inserted into           */
 201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* channels literals definition.                                              */
ARM GAS  /tmp/ccJLHc1D.s 			page 5


 202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_0_NUMBER               (0x00000000UL)
 203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_1_NUMBER               (                                                       
 204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_2_NUMBER               (                                                       
 205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_3_NUMBER               (                                                       
 206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_4_NUMBER               (                                        ADC_CFGR_AWD1CH
 207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_5_NUMBER               (                                        ADC_CFGR_AWD1CH
 208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_6_NUMBER               (                                        ADC_CFGR_AWD1CH
 209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_7_NUMBER               (                                        ADC_CFGR_AWD1CH
 210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_8_NUMBER               (                    ADC_CFGR_AWD1CH_3                  
 211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_9_NUMBER               (                    ADC_CFGR_AWD1CH_3                  
 212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_10_NUMBER              (                    ADC_CFGR_AWD1CH_3                  
 213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_11_NUMBER              (                    ADC_CFGR_AWD1CH_3                  
 214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_12_NUMBER              (                    ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH
 215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_13_NUMBER              (                    ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH
 216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_14_NUMBER              (                    ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH
 217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_15_NUMBER              (                    ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH
 218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_16_NUMBER              (ADC_CFGR_AWD1CH_4                                      
 219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_17_NUMBER              (ADC_CFGR_AWD1CH_4                                      
 220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_18_NUMBER              (ADC_CFGR_AWD1CH_4                                      
 221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Definition of channels ID bitfield information to be inserted into         */
 223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* channels literals definition.                                              */
 224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_0_BITFIELD             (ADC_AWD2CR_AWD2CH_0)
 225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_1_BITFIELD             (ADC_AWD2CR_AWD2CH_1)
 226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_2_BITFIELD             (ADC_AWD2CR_AWD2CH_2)
 227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_3_BITFIELD             (ADC_AWD2CR_AWD2CH_3)
 228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_4_BITFIELD             (ADC_AWD2CR_AWD2CH_4)
 229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_5_BITFIELD             (ADC_AWD2CR_AWD2CH_5)
 230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_6_BITFIELD             (ADC_AWD2CR_AWD2CH_6)
 231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_7_BITFIELD             (ADC_AWD2CR_AWD2CH_7)
 232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_8_BITFIELD             (ADC_AWD2CR_AWD2CH_8)
 233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_9_BITFIELD             (ADC_AWD2CR_AWD2CH_9)
 234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_10_BITFIELD            (ADC_AWD2CR_AWD2CH_10)
 235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_11_BITFIELD            (ADC_AWD2CR_AWD2CH_11)
 236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_12_BITFIELD            (ADC_AWD2CR_AWD2CH_12)
 237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_13_BITFIELD            (ADC_AWD2CR_AWD2CH_13)
 238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_14_BITFIELD            (ADC_AWD2CR_AWD2CH_14)
 239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_15_BITFIELD            (ADC_AWD2CR_AWD2CH_15)
 240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_16_BITFIELD            (ADC_AWD2CR_AWD2CH_16)
 241:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_17_BITFIELD            (ADC_AWD2CR_AWD2CH_17)
 242:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_18_BITFIELD            (ADC_AWD2CR_AWD2CH_18)
 243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 244:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Definition of channels sampling time information to be inserted into       */
 245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* channels literals definition.                                              */
 246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_0_SMP                  (ADC_SMPR1_REGOFFSET | (( 0UL) << ADC_CHANNEL_SMPx_BITOF
 247:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_1_SMP                  (ADC_SMPR1_REGOFFSET | (( 3UL) << ADC_CHANNEL_SMPx_BITOF
 248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_2_SMP                  (ADC_SMPR1_REGOFFSET | (( 6UL) << ADC_CHANNEL_SMPx_BITOF
 249:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_3_SMP                  (ADC_SMPR1_REGOFFSET | (( 9UL) << ADC_CHANNEL_SMPx_BITOF
 250:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_4_SMP                  (ADC_SMPR1_REGOFFSET | ((12UL) << ADC_CHANNEL_SMPx_BITOF
 251:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_5_SMP                  (ADC_SMPR1_REGOFFSET | ((15UL) << ADC_CHANNEL_SMPx_BITOF
 252:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_6_SMP                  (ADC_SMPR1_REGOFFSET | ((18UL) << ADC_CHANNEL_SMPx_BITOF
 253:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_7_SMP                  (ADC_SMPR1_REGOFFSET | ((21UL) << ADC_CHANNEL_SMPx_BITOF
 254:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_8_SMP                  (ADC_SMPR1_REGOFFSET | ((24UL) << ADC_CHANNEL_SMPx_BITOF
 255:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_9_SMP                  (ADC_SMPR1_REGOFFSET | ((27UL) << ADC_CHANNEL_SMPx_BITOF
 256:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_10_SMP                 (ADC_SMPR2_REGOFFSET | (( 0UL) << ADC_CHANNEL_SMPx_BITOF
 257:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_11_SMP                 (ADC_SMPR2_REGOFFSET | (( 3UL) << ADC_CHANNEL_SMPx_BITOF
 258:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_12_SMP                 (ADC_SMPR2_REGOFFSET | (( 6UL) << ADC_CHANNEL_SMPx_BITOF
ARM GAS  /tmp/ccJLHc1D.s 			page 6


 259:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_13_SMP                 (ADC_SMPR2_REGOFFSET | (( 9UL) << ADC_CHANNEL_SMPx_BITOF
 260:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_14_SMP                 (ADC_SMPR2_REGOFFSET | ((12UL) << ADC_CHANNEL_SMPx_BITOF
 261:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_15_SMP                 (ADC_SMPR2_REGOFFSET | ((15UL) << ADC_CHANNEL_SMPx_BITOF
 262:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_16_SMP                 (ADC_SMPR2_REGOFFSET | ((18UL) << ADC_CHANNEL_SMPx_BITOF
 263:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_17_SMP                 (ADC_SMPR2_REGOFFSET | ((21UL) << ADC_CHANNEL_SMPx_BITOF
 264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_18_SMP                 (ADC_SMPR2_REGOFFSET | ((24UL) << ADC_CHANNEL_SMPx_BITOF
 265:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 267:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Internal mask for ADC mode single or differential ended:                   */
 268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* To select into literals LL_ADC_SINGLE_ENDED or LL_ADC_SINGLE_DIFFERENTIAL  */
 269:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* the relevant bits for:                                                     */
 270:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* (concatenation of multiple bits used in different registers)               */
 271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* - ADC calibration: calibration start, calibration factor get or set        */
 272:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* - ADC channels: set each ADC channel ending mode                           */
 273:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_START_MASK    (ADC_CR_ADCALDIF)
 274:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_FACTOR_MASK   (ADC_CALFACT_CALFACT_D | ADC_CALFACT_CALFACT_S)
 275:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CHANNEL_MASK        (ADC_CHANNEL_ID_BITFIELD_MASK) /* Equivalent to ADC_DIFS
 276:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CHANNEL_SHIFT_MASK  (ADC_CALFACT_CALFACT_S_4 | ADC_CALFACT_CALFACT_S_3) /* B
 277:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_F_BIT_D_MASK   (0x00010000UL)                           /* Selection o
 278:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_F_BIT_D_POS    (16UL)                                   /* Selection o
 279:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_F_BIT_D_SHIFT4 (ADC_SINGLEDIFF_CALIB_F_BIT_D_POS - 4UL) /* Shift of bi
 280:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 281:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Internal mask for ADC analog watchdog:                                     */
 282:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* To select into literals LL_ADC_AWD_CHANNELx_xxx the relevant bits for:     */
 283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* (concatenation of multiple bits used in different analog watchdogs,        */
 284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* (feature of several watchdogs not available on all STM32 families)).       */
 285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* - analog watchdog 1: monitored channel defined by number,                  */
 286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*   selection of ADC group (ADC groups regular and-or injected).             */
 287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* - analog watchdog 2 and 3: monitored channel defined by bitfield, no       */
 288:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*   selection on groups.                                                     */
 289:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 290:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Internal register offset for ADC analog watchdog channel configuration */
 291:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_AWD_CR1_REGOFFSET              (0x00000000UL)
 292:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_AWD_CR2_REGOFFSET              (0x00100000UL)
 293:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_AWD_CR3_REGOFFSET              (0x00200000UL)
 294:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 295:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Register offset gap between AWD1 and AWD2-AWD3 configuration registers */
 296:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* (Set separately as ADC_AWD_CRX_REGOFFSET to spare 32 bits space */
 297:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_AWD_CR12_REGOFFSETGAP_MASK     (ADC_AWD2CR_AWD2CH_0)
 298:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_AWD_CR12_REGOFFSETGAP_VAL      (0x00000024UL)
 299:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 300:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_AWD_CRX_REGOFFSET_MASK         (ADC_AWD_CR1_REGOFFSET | ADC_AWD_CR2_REGOFFSET | ADC_AWD
 301:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 302:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_AWD_CR1_CHANNEL_MASK           (ADC_CFGR_AWD1CH | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN | 
 303:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_AWD_CR23_CHANNEL_MASK          (ADC_AWD2CR_AWD2CH)
 304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_AWD_CR_ALL_CHANNEL_MASK        (ADC_AWD_CR1_CHANNEL_MASK | ADC_AWD_CR23_CHANNEL_MASK)
 305:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_AWD_CRX_REGOFFSET_POS          (20UL) /* Position of bits ADC_AWD_CRx_REGOFFSET in ADC_
 307:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Internal register offset for ADC analog watchdog threshold configuration */
 309:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_AWD_TR1_REGOFFSET              (ADC_AWD_CR1_REGOFFSET)
 310:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_AWD_TR2_REGOFFSET              (ADC_AWD_CR2_REGOFFSET)
 311:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_AWD_TR3_REGOFFSET              (ADC_AWD_CR3_REGOFFSET)
 312:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_AWD_TRX_REGOFFSET_MASK         (ADC_AWD_TR1_REGOFFSET | ADC_AWD_TR2_REGOFFSET | ADC_AWD
 313:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_AWD_TRX_REGOFFSET_POS          (ADC_AWD_CRX_REGOFFSET_POS)     /* Position of bits ADC_
 314:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_MASK          (0x00010000UL)                   /* Selection of 1 bit t
 315:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_POS           (16UL)                           /* Selection of 1 bit t
ARM GAS  /tmp/ccJLHc1D.s 			page 7


 316:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_SHIFT4        (ADC_AWD_TRX_BIT_HIGH_POS - 4UL) /* Shift of bit ADC_AWD
 317:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 318:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Internal mask for ADC offset:                                              */
 319:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Internal register offset for ADC offset number configuration */
 320:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_OFR1_REGOFFSET                 (0x00000000UL)
 321:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_OFR2_REGOFFSET                 (0x00000001UL)
 322:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_OFR3_REGOFFSET                 (0x00000002UL)
 323:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_OFR4_REGOFFSET                 (0x00000003UL)
 324:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_OFRx_REGOFFSET_MASK            (ADC_OFR1_REGOFFSET | ADC_OFR2_REGOFFSET | ADC_OFR3_REGO
 325:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 326:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 327:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* ADC registers bits positions */
 328:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CFGR_RES_BITOFFSET_POS         (ADC_CFGR_RES_Pos)
 329:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CFGR_AWD1SGL_BITOFFSET_POS     (ADC_CFGR_AWD1SGL_Pos)
 330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CFGR_AWD1EN_BITOFFSET_POS      (ADC_CFGR_AWD1EN_Pos)
 331:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CFGR_JAWD1EN_BITOFFSET_POS     (ADC_CFGR_JAWD1EN_Pos)
 332:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_TR1_HT1_BITOFFSET_POS          (ADC_TR1_HT1_Pos)
 333:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 334:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 335:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* ADC registers bits groups */
 336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CR_BITS_PROPERTY_RS            (ADC_CR_ADCAL | ADC_CR_JADSTP | ADC_CR_ADSTP | ADC_CR_JA
 337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* ADC internal channels related definitions */
 340:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Internal voltage reference VrefInt */
 341:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define VREFINT_CAL_ADDR                   ((uint16_t*) (0x1FFF75AAUL)) /* Internal voltage referen
 342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define VREFINT_CAL_VREF                   (3000UL)                     /* Analog voltage reference
 343:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Temperature sensor */
 344:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define TEMPSENSOR_CAL1_ADDR               ((uint16_t*) (0x1FFF75A8UL)) /* Internal temperature sen
 345:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define TEMPSENSOR_CAL2_ADDR               ((uint16_t*) (0x1FFF75CAUL)) /* Internal temperature sen
 346:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define TEMPSENSOR_CAL1_TEMP               (30L)                        /* Internal temperature sen
 347:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define TEMPSENSOR_CAL2_TEMP               (110L)                       /* Internal temperature sen
 348:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define TEMPSENSOR_CAL_VREFANALOG          (3000UL)                     /* Analog voltage reference
 349:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 350:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 351:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 352:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 353:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 354:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 355:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 356:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Private macros ------------------------------------------------------------*/
 357:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_Private_Macros ADC Private Macros
 358:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 359:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 360:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 361:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 362:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Driver macro reserved for internal use: set a pointer to
 363:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         a register from a register basis from which an offset
 364:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is applied.
 365:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __REG__ Register basis from which the offset is applied.
 366:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __REG_OFFFSET__ Offset to be applied (unit: number of registers).
 367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Pointer to register address
 368:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 369:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __ADC_PTR_REG_OFFSET(__REG__, __REG_OFFFSET__)                         \
 370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   ((__IO uint32_t *)((uint32_t) ((uint32_t)(&(__REG__)) + ((__REG_OFFFSET__) << 2UL))))
 371:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 372:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
ARM GAS  /tmp/ccJLHc1D.s 			page 8


 373:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 374:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 375:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 376:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 377:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Exported types ------------------------------------------------------------*/
 378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined(USE_FULL_LL_DRIVER)
 379:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_ES_INIT ADC Exported Init structure
 380:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 381:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 382:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 384:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC common parameters
 385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         and multimode
 386:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (all ADC instances belonging to the same ADC common instance).
 387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_CommonInit()
 388:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is conditioned to ADC instances state (all ADC instances
 389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         sharing the same ADC common instance):
 390:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         All ADC instances sharing the same ADC common instance must be
 391:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         disabled.
 392:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 393:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** typedef struct
 394:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 395:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t CommonClock;                 /*!< Set parameter common to several ADC: Clock source and 
 396:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_COMMON
 397:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              @note On this STM32 serie, if ADC group injected is us
 398:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    clock ratio constraints between ADC clock and AH
 399:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    must be respected. Refer to reference manual.
 400:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 401:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 402:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 403:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
 404:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t Multimode;                   /*!< Set ADC multimode configuration to operate in independ
 405:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_MULTI_
 406:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 407:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 408:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 409:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t MultiDMATransfer;            /*!< Set ADC multimode conversion data transfer: no transfe
 410:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_MULTI_
 411:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 412:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 413:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 414:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t MultiTwoSamplingDelay;       /*!< Set ADC multimode delay between 2 sampling phases.
 415:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_MULTI_
 416:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 417:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 418:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
 419:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 420:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** } LL_ADC_CommonInitTypeDef;
 421:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 422:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 423:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC instance.
 424:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC instance.
 425:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Affects both group regular and group injected (availability
 426:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         of ADC group injected depends on STM32 families).
 427:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 428:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Instance .
 429:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_Init()
ARM GAS  /tmp/ccJLHc1D.s 			page 9


 430:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is conditioned to ADC state:
 431:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC instance must be disabled.
 432:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 433:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         and compatibility over all STM32 families. However, the different
 434:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         features can be set under different ADC state conditions
 435:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 436:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 437:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 438:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 439:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         refer to description of each function for setting
 440:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         conditioned to ADC state.
 441:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 442:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** typedef struct
 443:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 444:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t Resolution;                  /*!< Set ADC resolution.
 445:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_RESOLU
 446:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 447:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 448:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 449:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t DataAlignment;               /*!< Set ADC conversion data alignment.
 450:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_DATA_A
 451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 452:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t LowPowerMode;                /*!< Set ADC low power mode.
 455:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_LP_MOD
 456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 458:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 459:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** } LL_ADC_InitTypeDef;
 460:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 461:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 462:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC group regular.
 463:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC group regular.
 464:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 465:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Group_Regular
 466:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (functions with prefix "REG").
 467:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_REG_Init()
 468:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is conditioned to ADC state:
 469:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC instance must be disabled.
 470:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 471:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         and compatibility over all STM32 families. However, the different
 472:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         features can be set under different ADC state conditions
 473:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 474:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 475:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 476:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 477:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         refer to description of each function for setting
 478:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         conditioned to ADC state.
 479:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 480:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** typedef struct
 481:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 482:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t TriggerSource;               /*!< Set ADC group regular conversion trigger source: inter
 483:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_TR
 484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              @note On this STM32 serie, setting trigger source to e
 485:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    (default setting for compatibility with some ADC
 486:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    In case of need to modify trigger edge, use func
ARM GAS  /tmp/ccJLHc1D.s 			page 10


 487:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 488:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 489:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 490:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t SequencerLength;             /*!< Set ADC group regular sequencer length.
 491:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_SE
 492:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 493:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 494:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 495:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t SequencerDiscont;            /*!< Set ADC group regular sequencer discontinuous mode: se
 496:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_SE
 497:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              @note This parameter has an effect only if group regul
 498:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    (scan length of 2 ranks or more).
 499:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 500:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 502:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t ContinuousMode;              /*!< Set ADC continuous conversion mode on ADC group regula
 503:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_CO
 504:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              Note: It is not possible to enable both ADC group regu
 505:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 506:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 507:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t DMATransfer;                 /*!< Set ADC group regular conversion data transfer: no tra
 509:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_DM
 510:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 511:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 512:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 513:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t Overrun;                     /*!< Set ADC group regular behavior in case of overrun:
 514:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              data preserved or overwritten.
 515:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_OV
 516:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 517:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 518:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 519:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** } LL_ADC_REG_InitTypeDef;
 520:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 521:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 522:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC group injected.
 523:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC group injected.
 524:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 525:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Group_Regular
 526:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (functions with prefix "INJ").
 527:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_INJ_Init()
 528:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is conditioned to ADC state:
 529:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC instance must be disabled.
 530:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 531:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         and compatibility over all STM32 families. However, the different
 532:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         features can be set under different ADC state conditions
 533:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 534:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 535:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 536:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 537:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         refer to description of each function for setting
 538:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         conditioned to ADC state.
 539:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 540:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** typedef struct
 541:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 542:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t TriggerSource;               /*!< Set ADC group injected conversion trigger source: inte
 543:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_TR
ARM GAS  /tmp/ccJLHc1D.s 			page 11


 544:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              @note On this STM32 serie, setting trigger source to e
 545:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    (default setting for compatibility with some ADC
 546:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    In case of need to modify trigger edge, use func
 547:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 548:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 549:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 550:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t SequencerLength;             /*!< Set ADC group injected sequencer length.
 551:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_SE
 552:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 553:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 554:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 555:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t SequencerDiscont;            /*!< Set ADC group injected sequencer discontinuous mode: s
 556:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_SE
 557:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              @note This parameter has an effect only if group injec
 558:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    (scan length of 2 ranks or more).
 559:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 560:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 561:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 562:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t TrigAuto;                    /*!< Set ADC group injected conversion trigger: independent
 563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_TR
 564:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              Note: This parameter must be set to set to independent
 565:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 566:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 567:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 568:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** } LL_ADC_INJ_InitTypeDef;
 569:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 570:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 571:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 572:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 573:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif /* USE_FULL_LL_DRIVER */
 574:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 575:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Exported constants --------------------------------------------------------*/
 576:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Constants ADC Exported Constants
 577:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 578:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 579:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 580:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_FLAG ADC flags
 581:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief    Flags defines which can be used with LL_ADC_ReadReg function
 582:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 583:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 584:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_ADRDY                  ADC_ISR_ADRDY      /*!< ADC flag ADC instance ready */
 585:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_EOC                    ADC_ISR_EOC        /*!< ADC flag ADC group regular end o
 586:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_EOS                    ADC_ISR_EOS        /*!< ADC flag ADC group regular end o
 587:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_OVR                    ADC_ISR_OVR        /*!< ADC flag ADC group regular overr
 588:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_EOSMP                  ADC_ISR_EOSMP      /*!< ADC flag ADC group regular end o
 589:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_JEOC                   ADC_ISR_JEOC       /*!< ADC flag ADC group injected end 
 590:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_JEOS                   ADC_ISR_JEOS       /*!< ADC flag ADC group injected end 
 591:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_JQOVF                  ADC_ISR_JQOVF      /*!< ADC flag ADC group injected cont
 592:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD1                   ADC_ISR_AWD1       /*!< ADC flag ADC analog watchdog 1 *
 593:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD2                   ADC_ISR_AWD2       /*!< ADC flag ADC analog watchdog 2 *
 594:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD3                   ADC_ISR_AWD3       /*!< ADC flag ADC analog watchdog 3 *
 595:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
 596:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_ADRDY_MST              ADC_CSR_ADRDY_MST  /*!< ADC flag ADC multimode master in
 597:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_ADRDY_SLV              ADC_CSR_ADRDY_SLV  /*!< ADC flag ADC multimode slave ins
 598:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_EOC_MST                ADC_CSR_EOC_MST    /*!< ADC flag ADC multimode master gr
 599:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_EOC_SLV                ADC_CSR_EOC_SLV    /*!< ADC flag ADC multimode slave gro
 600:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_EOS_MST                ADC_CSR_EOS_MST    /*!< ADC flag ADC multimode master gr
ARM GAS  /tmp/ccJLHc1D.s 			page 12


 601:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_EOS_SLV                ADC_CSR_EOS_SLV    /*!< ADC flag ADC multimode slave gro
 602:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_OVR_MST                ADC_CSR_OVR_MST    /*!< ADC flag ADC multimode master gr
 603:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_OVR_SLV                ADC_CSR_OVR_SLV    /*!< ADC flag ADC multimode slave gro
 604:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_EOSMP_MST              ADC_CSR_EOSMP_MST  /*!< ADC flag ADC multimode master gr
 605:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_EOSMP_SLV              ADC_CSR_EOSMP_SLV  /*!< ADC flag ADC multimode slave gro
 606:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_JEOC_MST               ADC_CSR_JEOC_MST   /*!< ADC flag ADC multimode master gr
 607:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_JEOC_SLV               ADC_CSR_JEOC_SLV   /*!< ADC flag ADC multimode slave gro
 608:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_JEOS_MST               ADC_CSR_JEOS_MST   /*!< ADC flag ADC multimode master gr
 609:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_JEOS_SLV               ADC_CSR_JEOS_SLV   /*!< ADC flag ADC multimode slave gro
 610:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_JQOVF_MST              ADC_CSR_JQOVF_MST  /*!< ADC flag ADC multimode master gr
 611:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_JQOVF_SLV              ADC_CSR_JQOVF_SLV  /*!< ADC flag ADC multimode slave gro
 612:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD1_MST               ADC_CSR_AWD1_MST   /*!< ADC flag ADC multimode master an
 613:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD1_SLV               ADC_CSR_AWD1_SLV   /*!< ADC flag ADC multimode slave ana
 614:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD2_MST               ADC_CSR_AWD2_MST   /*!< ADC flag ADC multimode master an
 615:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD2_SLV               ADC_CSR_AWD2_SLV   /*!< ADC flag ADC multimode slave ana
 616:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD3_MST               ADC_CSR_AWD3_MST   /*!< ADC flag ADC multimode master an
 617:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD3_SLV               ADC_CSR_AWD3_SLV   /*!< ADC flag ADC multimode slave ana
 618:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif
 619:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 620:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 622:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_IT ADC interruptions for configuration (interruption enable or disable)
 624:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief    IT defines which can be used with LL_ADC_ReadReg and  LL_ADC_WriteReg functions
 625:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 626:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 627:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_IT_ADRDY                    ADC_IER_ADRDYIE    /*!< ADC interruption ADC instance re
 628:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_IT_EOC                      ADC_IER_EOCIE      /*!< ADC interruption ADC group regul
 629:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_IT_EOS                      ADC_IER_EOSIE      /*!< ADC interruption ADC group regul
 630:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_IT_OVR                      ADC_IER_OVRIE      /*!< ADC interruption ADC group regul
 631:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_IT_EOSMP                    ADC_IER_EOSMPIE    /*!< ADC interruption ADC group regul
 632:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_IT_JEOC                     ADC_IER_JEOCIE     /*!< ADC interruption ADC group injec
 633:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_IT_JEOS                     ADC_IER_JEOSIE     /*!< ADC interruption ADC group injec
 634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_IT_JQOVF                    ADC_IER_JQOVFIE    /*!< ADC interruption ADC group injec
 635:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_IT_AWD1                     ADC_IER_AWD1IE     /*!< ADC interruption ADC analog watc
 636:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_IT_AWD2                     ADC_IER_AWD2IE     /*!< ADC interruption ADC analog watc
 637:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_IT_AWD3                     ADC_IER_AWD3IE     /*!< ADC interruption ADC analog watc
 638:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 639:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 640:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 641:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 642:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REGISTERS  ADC registers compliant with specific purpose
 643:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 644:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 645:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* List of ADC registers intended to be used (most commonly) with             */
 646:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* DMA transfer.                                                              */
 647:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Refer to function @ref LL_ADC_DMA_GetRegAddr().                            */
 648:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_DMA_REG_REGULAR_DATA          (0x00000000UL) /* ADC group regular conversion data re
 649:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
 650:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_DMA_REG_REGULAR_DATA_MULTI    (0x00000001UL) /* ADC group regular conversion data re
 651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif
 652:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 653:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 654:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 655:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 656:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_COMMON_CLOCK_SOURCE  ADC common - Clock source
 657:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
ARM GAS  /tmp/ccJLHc1D.s 			page 13


 658:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 659:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV1        (ADC_CCR_CKMODE_0)                                    /*
 660:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV2        (ADC_CCR_CKMODE_1                   )                 /*
 661:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV4        (ADC_CCR_CKMODE_1 | ADC_CCR_CKMODE_0)                 /*
 662:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV1            (0x00000000UL)                                        /*
 663:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV2            (ADC_CCR_PRESC_0)                                     /*
 664:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV4            (ADC_CCR_PRESC_1                  )                   /*
 665:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV6            (ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0)                   /*
 666:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV8            (ADC_CCR_PRESC_2                                    ) /*
 667:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV10           (ADC_CCR_PRESC_2                   | ADC_CCR_PRESC_0) /*
 668:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV12           (ADC_CCR_PRESC_2 | ADC_CCR_PRESC_1                  ) /*
 669:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV16           (ADC_CCR_PRESC_2 | ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0) /*
 670:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV32           (ADC_CCR_PRESC_3)                                     /*
 671:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV64           (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_0)                   /*
 672:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV128          (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_1)                   /*
 673:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV256          (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0) /*
 674:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 675:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 676:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 677:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 678:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_COMMON_PATH_INTERNAL  ADC common - Measurement path to internal channels
 679:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 680:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 681:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Note: Other measurement paths to internal channels may be available        */
 682:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       (connections to other peripherals).                                  */
 683:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       If they are not listed below, they do not require any specific       */
 684:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       path enable. In this case, Access to measurement path is done        */
 685:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       only by selecting the corresponding ADC internal channel.            */
 686:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_NONE          (0x00000000UL)         /*!< ADC measurement pathes all d
 687:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_VREFINT       (ADC_CCR_VREFEN)       /*!< ADC measurement path to inte
 688:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_TEMPSENSOR    (ADC_CCR_VSENSESEL)    /*!< ADC measurement path to inte
 689:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_VBAT          (ADC_CCR_VBATSEL)      /*!< ADC measurement path to inte
 690:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 691:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 692:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 693:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 694:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_RESOLUTION  ADC instance - Resolution
 695:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 696:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 697:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_RESOLUTION_12B              (0x00000000UL)                      /*!< ADC resolution 
 698:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_RESOLUTION_10B              (                 ADC_CFGR_RES_0)   /*!< ADC resolution 
 699:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_RESOLUTION_8B               (ADC_CFGR_RES_1                 )   /*!< ADC resolution 
 700:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_RESOLUTION_6B               (ADC_CFGR_RES_1 | ADC_CFGR_RES_0)   /*!< ADC resolution 
 701:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 702:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 703:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 704:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 705:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_DATA_ALIGN  ADC instance - Data alignment
 706:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 707:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 708:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_DATA_ALIGN_RIGHT            (0x00000000UL)         /*!< ADC conversion data alignmen
 709:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_DATA_ALIGN_LEFT             (ADC_CFGR_ALIGN)       /*!< ADC conversion data alignmen
 710:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 711:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 712:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 713:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 714:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_LP_MODE  ADC instance - Low power mode
ARM GAS  /tmp/ccJLHc1D.s 			page 14


 715:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 716:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 717:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_LP_MODE_NONE                (0x00000000UL)                      /*!< No ADC low powe
 718:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_LP_AUTOWAIT                 (ADC_CFGR_AUTDLY)                   /*!< ADC low power m
 719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 720:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OFFSET_NB  ADC instance - Offset number
 724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 725:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OFFSET_1                    ADC_OFR1_REGOFFSET /*!< ADC offset number 1: ADC channel
 727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OFFSET_2                    ADC_OFR2_REGOFFSET /*!< ADC offset number 2: ADC channel
 728:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OFFSET_3                    ADC_OFR3_REGOFFSET /*!< ADC offset number 3: ADC channel
 729:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OFFSET_4                    ADC_OFR4_REGOFFSET /*!< ADC offset number 4: ADC channel
 730:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 731:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 732:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 733:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 734:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OFFSET_STATE ADC instance - Offset state
 735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 736:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 737:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OFFSET_DISABLE              (0x00000000UL)         /*!< ADC offset disabled (among A
 738:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OFFSET_ENABLE               (ADC_OFR1_OFFSET1_EN)  /*!< ADC offset enabled (among AD
 739:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 740:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 741:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 742:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 743:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OFFSET_SIGN ADC instance - Offset sign
 744:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 745:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 746:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OFFSET_SIGN_NEGATIVE        (0x00000000UL)       /*!< ADC offset is negative (among 
 747:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OFFSET_SIGN_POSITIVE        (ADC_OFR1_OFFSETPOS) /*!< ADC offset is positive (among 
 748:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 749:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 751:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 752:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OFFSET_SATURATION ADC instance - Offset saturation mode
 753:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 754:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 755:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OFFSET_SATURATION_DISABLE   (0x00000000UL)          /*!< ADC offset saturation is di
 756:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OFFSET_SATURATION_ENABLE    (ADC_OFR1_SATEN)        /*!< ADC offset saturation is en
 757:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 758:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 759:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 760:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_GROUPS  ADC instance - Groups
 761:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 762:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 763:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_GROUP_REGULAR               (0x00000001UL) /*!< ADC group regular (available on all 
 764:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_GROUP_INJECTED              (0x00000002UL) /*!< ADC group injected (not available on
 765:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_GROUP_REGULAR_INJECTED      (0x00000003UL) /*!< ADC both groups regular and injected
 766:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 767:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 768:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 769:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 770:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL  ADC instance - Channel number
 771:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
ARM GAS  /tmp/ccJLHc1D.s 			page 15


 772:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 773:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_0                   (ADC_CHANNEL_0_NUMBER  | ADC_CHANNEL_0_SMP  | ADC_CHANNE
 774:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_1                   (ADC_CHANNEL_1_NUMBER  | ADC_CHANNEL_1_SMP  | ADC_CHANNE
 775:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_2                   (ADC_CHANNEL_2_NUMBER  | ADC_CHANNEL_2_SMP  | ADC_CHANNE
 776:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_3                   (ADC_CHANNEL_3_NUMBER  | ADC_CHANNEL_3_SMP  | ADC_CHANNE
 777:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_4                   (ADC_CHANNEL_4_NUMBER  | ADC_CHANNEL_4_SMP  | ADC_CHANNE
 778:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_5                   (ADC_CHANNEL_5_NUMBER  | ADC_CHANNEL_5_SMP  | ADC_CHANNE
 779:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_6                   (ADC_CHANNEL_6_NUMBER  | ADC_CHANNEL_6_SMP  | ADC_CHANNE
 780:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_7                   (ADC_CHANNEL_7_NUMBER  | ADC_CHANNEL_7_SMP  | ADC_CHANNE
 781:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_8                   (ADC_CHANNEL_8_NUMBER  | ADC_CHANNEL_8_SMP  | ADC_CHANNE
 782:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_9                   (ADC_CHANNEL_9_NUMBER  | ADC_CHANNEL_9_SMP  | ADC_CHANNE
 783:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_10                  (ADC_CHANNEL_10_NUMBER | ADC_CHANNEL_10_SMP | ADC_CHANNE
 784:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_11                  (ADC_CHANNEL_11_NUMBER | ADC_CHANNEL_11_SMP | ADC_CHANNE
 785:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_12                  (ADC_CHANNEL_12_NUMBER | ADC_CHANNEL_12_SMP | ADC_CHANNE
 786:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_13                  (ADC_CHANNEL_13_NUMBER | ADC_CHANNEL_13_SMP | ADC_CHANNE
 787:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_14                  (ADC_CHANNEL_14_NUMBER | ADC_CHANNEL_14_SMP | ADC_CHANNE
 788:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_15                  (ADC_CHANNEL_15_NUMBER | ADC_CHANNEL_15_SMP | ADC_CHANNE
 789:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_16                  (ADC_CHANNEL_16_NUMBER | ADC_CHANNEL_16_SMP | ADC_CHANNE
 790:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_17                  (ADC_CHANNEL_17_NUMBER | ADC_CHANNEL_17_SMP | ADC_CHANNE
 791:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_18                  (ADC_CHANNEL_18_NUMBER | ADC_CHANNEL_18_SMP | ADC_CHANNE
 792:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_VREFINT             (LL_ADC_CHANNEL_18 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 793:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_TEMPSENSOR_ADC1     (LL_ADC_CHANNEL_16 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 794:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_TEMPSENSOR_ADC5     (LL_ADC_CHANNEL_4  | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 795:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_VBAT                (LL_ADC_CHANNEL_17 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 796:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_VOPAMP1             (LL_ADC_CHANNEL_13 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 797:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_VOPAMP2             (LL_ADC_CHANNEL_16 | ADC_CHANNEL_ID_INTERNAL_CH | ADC_CH
 798:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_VOPAMP3_ADC2        (LL_ADC_CHANNEL_18 | ADC_CHANNEL_ID_INTERNAL_CH | ADC_CH
 799:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_VOPAMP3_ADC3        (LL_ADC_CHANNEL_13 | ADC_CHANNEL_ID_INTERNAL_CH | ADC_CH
 800:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_VOPAMP4             (LL_ADC_CHANNEL_5  | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 801:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_VOPAMP5             (LL_ADC_CHANNEL_3  | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 802:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_VOPAMP6             (LL_ADC_CHANNEL_17 | ADC_CHANNEL_ID_INTERNAL_CH | ADC_CH
 803:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 804:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 805:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 806:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 807:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_SOURCE  ADC group regular - Trigger source
 808:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 809:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 810:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_SOFTWARE           (0x00000000UL)                                          
 811:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger internal: SW start.
 812:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_TRGO      (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EX
 813:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 814:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_TRGO2     (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_1 | ADC_REG_TRIG_EX
 815:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 816:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CH1       (ADC_REG_TRIG_EXT_EDGE_DEFAULT)                         
 817:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 818:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 serie, this trigger is available onl
 819:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CH2       (ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)     
 820:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 821:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 serie, this trigger is available onl
 822:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CH3       (ADC_CFGR_EXTSEL_1 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)     
 823:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 824:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_TRGO      (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_1 | ADC_CFGR_EXTSEL
 825:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 826:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_CH1       (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL
 827:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 828:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 serie, this trigger is available onl
ARM GAS  /tmp/ccJLHc1D.s 			page 16


 829:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_CH2       (ADC_CFGR_EXTSEL_1 | ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EX
 830:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 831:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 serie, this trigger is available onl
 832:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_CH3       (ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)     
 833:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 834:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 serie, this trigger is available onl
 835:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM3_TRGO      (ADC_CFGR_EXTSEL_2 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)     
 836:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 837:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM3_CH1       (ADC_REG_TRIG_EXT_EDGE_DEFAULT)                         
 838:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 839:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 serie, this trigger is available onl
 840:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM3_CH4       (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL
 841:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 842:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 serie, this trigger is available onl
 843:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM4_TRGO      (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_2 | ADC_REG_TRIG_EX
 844:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 845:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM4_CH1       (ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_1 | ADC_REG_TRIG_EX
 846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 847:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 serie, this trigger is available onl
 848:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM4_CH4       (ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EX
 849:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 850:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 serie, this trigger is available onl
 851:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM6_TRGO      (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL
 852:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 853:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM7_TRGO      (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL
 854:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 855:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM8_TRGO      (ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_1 | ADC_CFGR_EXTSEL
 856:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 857:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM8_TRGO2     (ADC_CFGR_EXTSEL_3 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)     
 858:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 859:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM8_CH1       (ADC_CFGR_EXTSEL_1 | ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EX
 860:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 861:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 serie, this trigger is available onl
 862:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM15_TRGO     (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL
 863:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 864:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM20_TRGO     (ADC_CFGR_EXTSEL_4 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)     
 865:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 866:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 serie, TIM20 is not available on all
 867:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM20_TRGO2    (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EX
 868:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 869:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 serie, TIM20 is not available on all
 870:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM20_CH1      (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_1 | ADC_REG_TRIG_EX
 871:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 872:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 serie, TIM20 is not available on all
 873:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM20_CH2      (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_1 | ADC_CFGR_EXTSEL
 874:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 875:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 serie, this trigger is available onl
 876:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM20_CH3      (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_2 | ADC_REG_TRIG_EX
 877:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 878:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 serie, this trigger is available onl
 879:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_HRTIM_TRG1     (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL
 880:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 881:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 serie, HRTIM is not available on all
 882:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_HRTIM_TRG2     (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_1 | ADC_CFGR_EXTSEL
 883:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 884:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 serie, this trigger is available onl
 885:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_HRTIM_TRG3     (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL
ARM GAS  /tmp/ccJLHc1D.s 			page 17


 886:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 887:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 serie, HRTIM is not available on all
 888:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_HRTIM_TRG4     (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_2 | ADC_REG_TRIG_EX
 889:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 890:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 serie, this trigger is available onl
 891:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_HRTIM_TRG5     (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL
 892:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 893:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 serie, HRTIM is not available on all
 894:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_HRTIM_TRG6     (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_3 | ADC_REG_TRIG_EX
 895:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 896:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 serie, HRTIM is not available on all
 897:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_HRTIM_TRG7     (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL
 898:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 899:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 serie, HRTIM is not available on all
 900:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_HRTIM_TRG8     (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL
 901:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 902:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 serie, HRTIM is not available on all
 903:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_HRTIM_TRG9     (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL
 904:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 905:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 serie, HRTIM is not available on all
 906:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_HRTIM_TRG10    (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL
 907:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 908:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 serie, HRTIM is not available on all
 909:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_EXTI_LINE11    (ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_1 | ADC_REG_TRIG_EX
 910:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 911:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 serie, this trigger is available onl
 912:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_EXTI_LINE2     (ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EX
 913:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 914:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 serie, this trigger is available onl
 915:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_LPTIM_OUT      (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL
 916:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 917:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 918:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 919:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 920:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 921:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_EDGE  ADC group regular - Trigger edge
 922:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 923:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 924:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_RISING         (                   ADC_CFGR_EXTEN_0)   /*!< ADC group r
 925:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_FALLING        (ADC_CFGR_EXTEN_1                   )   /*!< ADC group r
 926:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_RISINGFALLING  (ADC_CFGR_EXTEN_1 | ADC_CFGR_EXTEN_0)   /*!< ADC group r
 927:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 928:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 929:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 930:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 931:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SAMPLING_MODE  ADC group regular - Sampling mode
 932:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 933:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 934:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SAMPLING_MODE_NORMAL               (0x00000000UL)       /*!< ADC conversions sam
 935:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SAMPLING_MODE_BULB                 (ADC_CFGR2_BULB)     /*!< ADC conversions sam
 936:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                                                 Note: First convers
 937:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SAMPLING_MODE_TRIGGER_CONTROLED    (ADC_CFGR2_SMPTRIG)  /*!< ADC conversions sam
 938:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                                                  Trigger rising edg
 939:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                                                  Trigger falling ed
 940:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 941:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 942:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
ARM GAS  /tmp/ccJLHc1D.s 			page 18


 943:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 944:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_CONTINUOUS_MODE  ADC group regular - Continuous mode
 945:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 946:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 947:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_CONV_SINGLE             (0x00000000UL)          /*!< ADC conversions are perform
 948:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_CONV_CONTINUOUS         (ADC_CFGR_CONT)         /*!< ADC conversions are perform
 949:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 950:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 951:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 952:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 953:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_DMA_TRANSFER  ADC group regular - DMA transfer of ADC conversion data
 954:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 955:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 956:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_NONE       (0x00000000UL)                        /*!< ADC conversio
 957:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_LIMITED    (                  ADC_CFGR_DMAEN)    /*!< ADC conversio
 958:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_UNLIMITED  (ADC_CFGR_DMACFG | ADC_CFGR_DMAEN)    /*!< ADC conversio
 959:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 960:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 961:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 962:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 963:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined(ADC_SMPR1_SMPPLUS)
 964:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_SAMPLINGTIME_COMMON_CONFIG ADC instance - ADC sampling time common configur
 965:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 966:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 967:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_COMMON_DEFAULT      (0x00000000UL)      /*!< ADC sampling time let to d
 968:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_COMMON_3C5_REPL_2C5 (ADC_SMPR1_SMPPLUS) /*!< ADC additional sampling ti
 969:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 970:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 971:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 972:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif
 973:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 974:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_OVR_DATA_BEHAVIOR  ADC group regular - Overrun behavior on conversion d
 975:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 976:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 977:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_OVR_DATA_PRESERVED      (0x00000000UL)         /*!< ADC group regular behavior i
 978:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_OVR_DATA_OVERWRITTEN    (ADC_CFGR_OVRMOD)      /*!< ADC group regular behavior i
 979:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 980:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 981:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 982:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 983:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_SCAN_LENGTH  ADC group regular - Sequencer scan length
 984:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 985:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 986:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_DISABLE        (0x00000000UL)                                          
 987:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS  (                                             ADC_SQR1_L
 988:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS  (                              ADC_SQR1_L_1             
 989:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS  (                              ADC_SQR1_L_1 | ADC_SQR1_L
 990:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS  (               ADC_SQR1_L_2                            
 991:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS  (               ADC_SQR1_L_2                | ADC_SQR1_L
 992:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS  (               ADC_SQR1_L_2 | ADC_SQR1_L_1             
 993:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS  (               ADC_SQR1_L_2 | ADC_SQR1_L_1 | ADC_SQR1_L
 994:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_9RANKS  (ADC_SQR1_L_3                                           
 995:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_10RANKS (ADC_SQR1_L_3                               | ADC_SQR1_L
 996:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_11RANKS (ADC_SQR1_L_3                | ADC_SQR1_L_1             
 997:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_12RANKS (ADC_SQR1_L_3                | ADC_SQR1_L_1 | ADC_SQR1_L
 998:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_13RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2                            
 999:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_14RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2                | ADC_SQR1_L
ARM GAS  /tmp/ccJLHc1D.s 			page 19


1000:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_15RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2 | ADC_SQR1_L_1             
1001:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_16RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2 | ADC_SQR1_L_1 | ADC_SQR1_L
1002:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1003:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1004:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1005:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1006:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_DISCONT_MODE  ADC group regular - Sequencer discontinuous mode
1007:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1008:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1009:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_DISABLE     (0x00000000UL)                                          
1010:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_1RANK       (                                                       
1011:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_2RANKS      (                                          ADC_CFGR_DISC
1012:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_3RANKS      (                     ADC_CFGR_DISCNUM_1                
1013:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_4RANKS      (                     ADC_CFGR_DISCNUM_1 | ADC_CFGR_DISC
1014:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_5RANKS      (ADC_CFGR_DISCNUM_2                                     
1015:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_6RANKS      (ADC_CFGR_DISCNUM_2                      | ADC_CFGR_DISC
1016:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_7RANKS      (ADC_CFGR_DISCNUM_2 | ADC_CFGR_DISCNUM_1                
1017:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_8RANKS      (ADC_CFGR_DISCNUM_2 | ADC_CFGR_DISCNUM_1 | ADC_CFGR_DISC
1018:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1019:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1020:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1021:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1022:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_RANKS  ADC group regular - Sequencer ranks
1023:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1024:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1025:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_RANK_1                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_1_SQRX_BITOFFSET_POS)
1026:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_RANK_2                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_2_SQRX_BITOFFSET_POS)
1027:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_RANK_3                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_3_SQRX_BITOFFSET_POS)
1028:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_RANK_4                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_4_SQRX_BITOFFSET_POS)
1029:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_RANK_5                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_5_SQRX_BITOFFSET_POS)
1030:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_RANK_6                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_6_SQRX_BITOFFSET_POS)
1031:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_RANK_7                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_7_SQRX_BITOFFSET_POS)
1032:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_RANK_8                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_8_SQRX_BITOFFSET_POS)
1033:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_RANK_9                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_9_SQRX_BITOFFSET_POS)
1034:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_RANK_10                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_10_SQRX_BITOFFSET_POS
1035:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_RANK_11                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_11_SQRX_BITOFFSET_POS
1036:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_RANK_12                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_12_SQRX_BITOFFSET_POS
1037:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_RANK_13                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_13_SQRX_BITOFFSET_POS
1038:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_RANK_14                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_14_SQRX_BITOFFSET_POS
1039:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_RANK_15                 (ADC_SQR4_REGOFFSET | ADC_REG_RANK_15_SQRX_BITOFFSET_POS
1040:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_RANK_16                 (ADC_SQR4_REGOFFSET | ADC_REG_RANK_16_SQRX_BITOFFSET_POS
1041:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1042:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1043:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1044:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1045:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_TRIGGER_SOURCE  ADC group injected - Trigger source
1046:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1047:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1048:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_SOFTWARE           (0x00000000UL)                                          
1049:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger internal: SW start
1050:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM1_TRGO      (ADC_INJ_TRIG_EXT_EDGE_DEFAULT)                         
1051:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1052:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2     (ADC_JSQR_JEXTSEL_3 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)    
1053:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1054:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM1_CH3       (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_1 | ADC_JSQR_JEXT
1055:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1056:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 serie, this trigger is available onl
ARM GAS  /tmp/ccJLHc1D.s 			page 20


1057:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM1_CH4       (ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)    
1058:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1059:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM2_TRGO      (ADC_JSQR_JEXTSEL_1 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)    
1060:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1061:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM2_CH1       (ADC_JSQR_JEXTSEL_1 | ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_
1062:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1063:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 serie, this trigger is available onl
1064:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_TRGO      (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_2 | ADC_INJ_TRIG_
1065:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1066:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_CH1       (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXT
1067:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1068:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 serie, this trigger is available onl
1069:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_CH3       (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_1 | ADC_JSQR_JEXT
1070:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1071:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 serie, this trigger is available onl
1072:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_CH4       (ADC_JSQR_JEXTSEL_2 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)    
1073:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1074:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 serie, this trigger is available onl
1075:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM4_TRGO      (ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_
1076:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1077:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM4_CH3       (ADC_JSQR_JEXTSEL_2 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)    
1078:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1079:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 serie, this trigger is available onl
1080:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM4_CH4       (ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXTSEL_1 | ADC_INJ_TRIG_
1081:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1082:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 serie, this trigger is available onl
1083:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM6_TRGO      (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXT
1084:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1085:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM7_TRGO      (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXT
1086:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1087:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM8_TRGO      (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_
1088:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1089:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM8_TRGO2     (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_1 | ADC_INJ_TRIG_
1090:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1091:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM8_CH2       (ADC_JSQR_JEXTSEL_1 | ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_
1092:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1093:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 serie, this trigger is available onl
1094:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM8_CH4       (ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXTSEL_1 | ADC_JSQR_JEXT
1095:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1096:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM15_TRGO     (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXT
1097:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1098:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM16_CH1      (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXT
1099:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 serie, this trigger is available onl
1101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM20_TRGO     (ADC_JSQR_JEXTSEL_4 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)    
1102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 serie, TIM20 is not available on all
1104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM20_TRGO2    (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_
1105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 serie, TIM20 is not available on all
1107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM20_CH2      (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_1 | ADC_INJ_TRIG_
1108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Trigger available only on ADC3/4/5 instances. On this ST
1110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM20_CH4      (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_1 | ADC_INJ_TRIG_
1111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Trigger available only on ADC1/2 instances. On this STM3
1113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_HRTIM_TRG1     (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXT
ARM GAS  /tmp/ccJLHc1D.s 			page 21


1114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 serie, this trigger is available onl
1116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_HRTIM_TRG2     (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_1 | ADC_JSQR_JEXT
1117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 serie, HRTIM is not available on all
1119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_HRTIM_TRG3     (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXT
1120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 serie, this trigger is available onl
1122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_HRTIM_TRG4     (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_2 | ADC_INJ_TRIG_
1123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 serie, HRTIM is not available on all
1125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_HRTIM_TRG5     (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXT
1126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 serie, HRTIM is not available on all
1128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_HRTIM_TRG6     (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXT
1129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 serie, HRTIM is not available on all
1131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_HRTIM_TRG7     (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXT
1132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 serie, HRTIM is not available on all
1134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_HRTIM_TRG8     (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_3 | ADC_INJ_TRIG_
1135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 serie, HRTIM is not available on all
1137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_HRTIM_TRG9     (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXT
1138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 serie, HRTIM is not available on all
1140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_HRTIM_TRG10    (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXT
1141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 serie, HRTIM is not available on all
1143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_EXTI_LINE3     (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXT
1144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 serie, this trigger is available onl
1146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_EXTI_LINE15    (ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXTSEL_1 | ADC_INJ_TRIG_
1147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 serie, this trigger is available onl
1149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_LPTIM_OUT      (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXT
1150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_TRIGGER_EDGE  ADC group injected - Trigger edge
1156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_RISING         (                    ADC_JSQR_JEXTEN_0) /*!< ADC group i
1159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_FALLING        (ADC_JSQR_JEXTEN_1                    ) /*!< ADC group i
1160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_RISINGFALLING  (ADC_JSQR_JEXTEN_1 | ADC_JSQR_JEXTEN_0) /*!< ADC group i
1161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_TRIG_AUTO  ADC group injected - Automatic trigger mode
1166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_INDEPENDENT        (0x00000000UL)         /*!< ADC group injected conversio
1169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_FROM_GRP_REGULAR   (ADC_CFGR_JAUTO)       /*!< ADC group injected conversio
1170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
ARM GAS  /tmp/ccJLHc1D.s 			page 22


1171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_CONTEXT_QUEUE  ADC group injected - Context queue mode
1175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_QUEUE_2CONTEXTS_LAST_ACTIVE (0x00000000UL)         /* Group injected sequence co
1178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_QUEUE_2CONTEXTS_END_EMPTY   (ADC_CFGR_JQM)         /* Group injected sequence co
1179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_QUEUE_DISABLE               (ADC_CFGR_JQDIS)       /* Group injected sequence co
1180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_SEQ_SCAN_LENGTH  ADC group injected - Sequencer scan length
1185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_DISABLE        (0x00000000UL)                  /*!< ADC group injected 
1188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS  (                ADC_JSQR_JL_0) /*!< ADC group injected 
1189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS  (ADC_JSQR_JL_1                ) /*!< ADC group injected 
1190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS  (ADC_JSQR_JL_1 | ADC_JSQR_JL_0) /*!< ADC group injected 
1191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_SEQ_DISCONT_MODE  ADC group injected - Sequencer discontinuous mode
1196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_DISCONT_DISABLE     (0x00000000UL)         /*!< ADC group injected sequencer
1199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_DISCONT_1RANK       (ADC_CFGR_JDISCEN)     /*!< ADC group injected sequencer
1200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_SEQ_RANKS  ADC group injected - Sequencer ranks
1205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_RANK_1                  (ADC_JDR1_REGOFFSET | ADC_INJ_RANK_1_JSQR_BITOFFSET_POS)
1208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_RANK_2                  (ADC_JDR2_REGOFFSET | ADC_INJ_RANK_2_JSQR_BITOFFSET_POS)
1209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_RANK_3                  (ADC_JDR3_REGOFFSET | ADC_INJ_RANK_3_JSQR_BITOFFSET_POS)
1210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_RANK_4                  (ADC_JDR4_REGOFFSET | ADC_INJ_RANK_4_JSQR_BITOFFSET_POS)
1211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL_SAMPLINGTIME  Channel - Sampling time
1216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_2CYCLES_5      (0x00000000UL)                                          
1219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_6CYCLES_5      (                                        ADC_SMPR2_SMP10
1220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_12CYCLES_5     (                    ADC_SMPR2_SMP10_1                  
1221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_24CYCLES_5     (                    ADC_SMPR2_SMP10_1 | ADC_SMPR2_SMP10
1222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_47CYCLES_5     (ADC_SMPR2_SMP10_2                                      
1223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_92CYCLES_5     (ADC_SMPR2_SMP10_2                     | ADC_SMPR2_SMP10
1224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_247CYCLES_5    (ADC_SMPR2_SMP10_2 | ADC_SMPR2_SMP10_1                  
1225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_640CYCLES_5    (ADC_SMPR2_SMP10_2 | ADC_SMPR2_SMP10_1 | ADC_SMPR2_SMP10
1226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
ARM GAS  /tmp/ccJLHc1D.s 			page 23


1228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL_SINGLE_DIFF_ENDING  Channel - Single or differential ending
1231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_SINGLE_ENDED                (                  ADC_CALFACT_CALFACT_S)         /*!< A
1234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_DIFFERENTIAL_ENDED          (ADC_CR_ADCALDIF | ADC_CALFACT_CALFACT_D)         /*!< A
1235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_BOTH_SINGLE_DIFF_ENDED      (LL_ADC_SINGLE_ENDED | LL_ADC_DIFFERENTIAL_ENDED) /*!< A
1236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_NUMBER Analog watchdog - Analog watchdog number
1241:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1242:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD1                        (ADC_AWD_CR1_CHANNEL_MASK  | ADC_AWD_CR1_REGOFFSET) /*!<
1244:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD2                        (ADC_AWD_CR23_CHANNEL_MASK | ADC_AWD_CR2_REGOFFSET) /*!<
1245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD3                        (ADC_AWD_CR23_CHANNEL_MASK | ADC_AWD_CR3_REGOFFSET) /*!<
1246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1247:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1249:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1250:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_CHANNELS  Analog watchdog - Monitored channels
1251:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1252:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1253:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_DISABLE                 (0x00000000UL)                                          
1254:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_REG        (ADC_AWD_CR23_CHANNEL_MASK                              
1255:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_INJ        (ADC_AWD_CR23_CHANNEL_MASK                 | ADC_CFGR_JA
1256:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_REG_INJ    (ADC_AWD_CR23_CHANNEL_MASK                 | ADC_CFGR_JA
1257:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_REG           ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK)              
1258:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_INJ           ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1259:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_REG_INJ       ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1260:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_REG           ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK)              
1261:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_INJ           ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1262:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_REG_INJ       ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1263:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_REG           ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK)              
1264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_INJ           ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1265:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_REG_INJ       ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_REG           ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK)              
1267:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_INJ           ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_REG_INJ       ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1269:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_REG           ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK)              
1270:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_INJ           ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_REG_INJ       ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1272:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_REG           ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK)              
1273:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_INJ           ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1274:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_REG_INJ       ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1275:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_REG           ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK)              
1276:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_INJ           ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1277:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_REG_INJ       ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1278:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_REG           ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK)              
1279:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_INJ           ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1280:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_REG_INJ       ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1281:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_REG           ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK)              
1282:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_INJ           ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_REG_INJ       ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_REG           ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK)              
ARM GAS  /tmp/ccJLHc1D.s 			page 24


1285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_INJ           ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_REG_INJ       ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_REG          ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK)              
1288:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_INJ          ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1289:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_REG_INJ      ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1290:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_REG          ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK)              
1291:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_INJ          ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1292:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_REG_INJ      ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1293:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_REG          ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK)              
1294:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_INJ          ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1295:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_REG_INJ      ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1296:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_REG          ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK)              
1297:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_INJ          ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1298:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_REG_INJ      ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1299:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_REG          ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK)              
1300:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_INJ          ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1301:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_REG_INJ      ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1302:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_REG          ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK)              
1303:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_INJ          ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_REG_INJ      ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1305:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_REG          ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK)              
1306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_INJ          ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1307:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_REG_INJ      ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_REG          ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK)              
1309:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_INJ          ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1310:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_REG_INJ      ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1311:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_18_REG          ((LL_ADC_CHANNEL_18 & ADC_CHANNEL_ID_MASK)              
1312:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_18_INJ          ((LL_ADC_CHANNEL_18 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1313:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_18_REG_INJ      ((LL_ADC_CHANNEL_18 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1314:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_REG          ((LL_ADC_CHANNEL_VREFINT       & ADC_CHANNEL_ID_MASK)   
1315:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_INJ          ((LL_ADC_CHANNEL_VREFINT       & ADC_CHANNEL_ID_MASK) | 
1316:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_REG_INJ      ((LL_ADC_CHANNEL_VREFINT       & ADC_CHANNEL_ID_MASK) | 
1317:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_ADC1_REG       ((LL_ADC_CHANNEL_TEMPSENSOR_ADC1 & ADC_CHANNEL_ID_M
1318:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_ADC1_INJ       ((LL_ADC_CHANNEL_TEMPSENSOR_ADC1 & ADC_CHANNEL_ID_M
1319:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_ADC1_REG_INJ   ((LL_ADC_CHANNEL_TEMPSENSOR_ADC1 & ADC_CHANNEL_ID_M
1320:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_ADC5_REG       ((LL_ADC_CHANNEL_TEMPSENSOR_ADC5 & ADC_CHANNEL_ID_M
1321:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_ADC5_INJ       ((LL_ADC_CHANNEL_TEMPSENSOR_ADC5 & ADC_CHANNEL_ID_M
1322:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_ADC5_REG_INJ   ((LL_ADC_CHANNEL_TEMPSENSOR_ADC5 & ADC_CHANNEL_ID_M
1323:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VBAT_REG             ((LL_ADC_CHANNEL_VBAT          & ADC_CHANNEL_ID_MASK)   
1324:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VBAT_INJ             ((LL_ADC_CHANNEL_VBAT          & ADC_CHANNEL_ID_MASK) | 
1325:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VBAT_REG_INJ         ((LL_ADC_CHANNEL_VBAT          & ADC_CHANNEL_ID_MASK) | 
1326:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP1_REG          ((LL_ADC_CHANNEL_VOPAMP1       & ADC_CHANNEL_ID_MASK)   
1327:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP1_INJ          ((LL_ADC_CHANNEL_VOPAMP1       & ADC_CHANNEL_ID_MASK) | 
1328:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP1_REG_INJ      ((LL_ADC_CHANNEL_VOPAMP1       & ADC_CHANNEL_ID_MASK) | 
1329:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP2_REG          ((LL_ADC_CHANNEL_VOPAMP2       & ADC_CHANNEL_ID_MASK)   
1330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP2_INJ          ((LL_ADC_CHANNEL_VOPAMP2       & ADC_CHANNEL_ID_MASK) | 
1331:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP2_REG_INJ      ((LL_ADC_CHANNEL_VOPAMP2       & ADC_CHANNEL_ID_MASK) | 
1332:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP3_ADC2_REG     ((LL_ADC_CHANNEL_VOPAMP3_ADC2  & ADC_CHANNEL_ID_MASK)   
1333:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP3_ADC2_INJ     ((LL_ADC_CHANNEL_VOPAMP3_ADC2  & ADC_CHANNEL_ID_MASK) | 
1334:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP3_ADC2_REG_INJ ((LL_ADC_CHANNEL_VOPAMP3_ADC2  & ADC_CHANNEL_ID_MASK) | 
1335:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP3_ADC3_REG     ((LL_ADC_CHANNEL_VOPAMP3_ADC3  & ADC_CHANNEL_ID_MASK)   
1336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP3_ADC3_INJ     ((LL_ADC_CHANNEL_VOPAMP3_ADC3  & ADC_CHANNEL_ID_MASK) | 
1337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP3_ADC3_REG_INJ ((LL_ADC_CHANNEL_VOPAMP3_ADC3  & ADC_CHANNEL_ID_MASK) | 
1338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP4_REG          ((LL_ADC_CHANNEL_VOPAMP4       & ADC_CHANNEL_ID_MASK)   
1339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP4_INJ          ((LL_ADC_CHANNEL_VOPAMP4       & ADC_CHANNEL_ID_MASK) | 
1340:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP4_REG_INJ      ((LL_ADC_CHANNEL_VOPAMP4       & ADC_CHANNEL_ID_MASK) | 
1341:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP5_REG          ((LL_ADC_CHANNEL_VOPAMP5       & ADC_CHANNEL_ID_MASK)   
ARM GAS  /tmp/ccJLHc1D.s 			page 25


1342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP5_INJ          ((LL_ADC_CHANNEL_VOPAMP5       & ADC_CHANNEL_ID_MASK) | 
1343:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP5_REG_INJ      ((LL_ADC_CHANNEL_VOPAMP5       & ADC_CHANNEL_ID_MASK) | 
1344:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP6_REG          ((LL_ADC_CHANNEL_VOPAMP6       & ADC_CHANNEL_ID_MASK)   
1345:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP6_INJ          ((LL_ADC_CHANNEL_VOPAMP6       & ADC_CHANNEL_ID_MASK) | 
1346:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP6_REG_INJ      ((LL_ADC_CHANNEL_VOPAMP6       & ADC_CHANNEL_ID_MASK) | 
1347:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1348:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1349:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1350:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1351:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_THRESHOLDS  Analog watchdog - Thresholds
1352:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1353:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1354:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLD_HIGH          (ADC_TR1_HT1              ) /*!< ADC analog watchdog thr
1355:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLD_LOW           (              ADC_TR1_LT1) /*!< ADC analog watchdog thr
1356:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLDS_HIGH_LOW     (ADC_TR1_HT1 | ADC_TR1_LT1) /*!< ADC analog watchdog bot
1357:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1358:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1359:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1360:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1361:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_FILTERING_CONFIG  Analog watchdog - filtering config
1362:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1363:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1364:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_FILTERING_NONE          (0x00000000UL)                                          
1365:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_FILTERING_2SAMPLES      (                                        ADC_TR1_AWDFILT
1366:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_FILTERING_3SAMPLES      (                    ADC_TR1_AWDFILT_1                  
1367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_FILTERING_4SAMPLES      (                    ADC_TR1_AWDFILT_1 | ADC_TR1_AWDFILT
1368:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_FILTERING_5SAMPLES      (ADC_TR1_AWDFILT_2                                      
1369:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_FILTERING_6SAMPLES      (ADC_TR1_AWDFILT_2 |                     ADC_TR1_AWDFILT
1370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_FILTERING_7SAMPLES      (ADC_TR1_AWDFILT_2 | ADC_TR1_AWDFILT_1                  
1371:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_FILTERING_8SAMPLES      (ADC_TR1_AWDFILT_2 | ADC_TR1_AWDFILT_1 | ADC_TR1_AWDFILT
1372:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1373:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1374:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1375:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1376:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_SCOPE  Oversampling - Oversampling scope
1377:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1379:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_DISABLE                 (0x00000000UL)                                        /*
1380:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_GRP_REGULAR_CONTINUED   (                                    ADC_CFGR2_ROVSE) /*
1381:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_GRP_REGULAR_RESUMED     (ADC_CFGR2_ROVSM |                   ADC_CFGR2_ROVSE) /*
1382:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_GRP_INJECTED            (                  ADC_CFGR2_JOVSE                  ) /*
1383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_GRP_INJ_REG_RESUMED     (                  ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSE) /*
1384:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1386:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1388:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_DISCONT_MODE  Oversampling - Discontinuous mode
1389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1390:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1391:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_REG_CONT                (0x00000000UL)         /*!< ADC oversampling discontinuo
1392:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_REG_DISCONT             (ADC_CFGR2_TROVS)      /*!< ADC oversampling discontinuo
1393:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1394:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1395:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1396:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1397:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_RATIO  Oversampling - Ratio
1398:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
ARM GAS  /tmp/ccJLHc1D.s 			page 26


1399:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1400:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_2                 (0x00000000UL)                                          
1401:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_4                 (                                      ADC_CFGR2_OVSR_0)
1402:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_8                 (                   ADC_CFGR2_OVSR_1                   )
1403:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_16                (                   ADC_CFGR2_OVSR_1 | ADC_CFGR2_OVSR_0)
1404:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_32                (ADC_CFGR2_OVSR_2                                      )
1405:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_64                (ADC_CFGR2_OVSR_2                    | ADC_CFGR2_OVSR_0)
1406:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_128               (ADC_CFGR2_OVSR_2 | ADC_CFGR2_OVSR_1                   )
1407:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_256               (ADC_CFGR2_OVSR_2 | ADC_CFGR2_OVSR_1 | ADC_CFGR2_OVSR_0)
1408:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1409:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1410:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1411:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1412:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_SHIFT  Oversampling - Data shift
1413:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1414:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1415:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_NONE              (0x00000000UL)                                          
1416:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_1           (                                                       
1417:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_2           (                                      ADC_CFGR2_OVSS_1 
1418:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_3           (                                      ADC_CFGR2_OVSS_1 
1419:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_4           (                   ADC_CFGR2_OVSS_2                    
1420:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_5           (                   ADC_CFGR2_OVSS_2                    
1421:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_6           (                   ADC_CFGR2_OVSS_2 | ADC_CFGR2_OVSS_1 
1422:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_7           (                   ADC_CFGR2_OVSS_2 | ADC_CFGR2_OVSS_1 
1423:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_8           (ADC_CFGR2_OVSS_3                                       
1424:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1425:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1426:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1427:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1428:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
1429:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_MULTI_MODE  Multimode - Mode
1430:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1431:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1432:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_INDEPENDENT           (0x00000000UL)                                          
1433:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_SIMULT       (                 ADC_CCR_DUAL_2 | ADC_CCR_DUAL_1       
1434:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_INTERL       (                 ADC_CCR_DUAL_2 | ADC_CCR_DUAL_1 | ADC_
1435:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_INJ_SIMULT       (                 ADC_CCR_DUAL_2                  | ADC_
1436:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_INJ_ALTERN       (ADC_CCR_DUAL_3                                   | ADC_
1437:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_SIM_INJ_SIM  (                                                   ADC_
1438:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_SIM_INJ_ALT  (                                  ADC_CCR_DUAL_1       
1439:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_INT_INJ_SIM  (                                  ADC_CCR_DUAL_1 | ADC_
1440:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1441:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1442:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1443:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1444:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_MULTI_DMA_TRANSFER  Multimode - DMA transfer
1445:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1446:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1447:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_EACH_ADC        (0x00000000UL)                                     /*!
1448:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_LIMIT_RES12_10B (                 ADC_CCR_MDMA_1                 ) /*!
1449:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_LIMIT_RES8_6B   (                 ADC_CCR_MDMA_1 | ADC_CCR_MDMA_0) /*!
1450:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_UNLMT_RES12_10B (ADC_CCR_DMACFG | ADC_CCR_MDMA_1                 ) /*!
1451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_UNLMT_RES8_6B   (ADC_CCR_DMACFG | ADC_CCR_MDMA_1 | ADC_CCR_MDMA_0) /*!
1452:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1455:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
ARM GAS  /tmp/ccJLHc1D.s 			page 27


1456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_MULTI_TWOSMP_DELAY  Multimode - Delay between two sampling phases
1457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1458:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1459:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_1CYCLE   (0x00000000UL)                                          
1460:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_2CYCLES  (                                                      A
1461:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_3CYCLES  (                                    ADC_CCR_DELAY_1    
1462:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_4CYCLES  (                                    ADC_CCR_DELAY_1 | A
1463:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_5CYCLES  (                  ADC_CCR_DELAY_2                      
1464:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_6CYCLES  (                  ADC_CCR_DELAY_2                   | A
1465:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_7CYCLES  (                  ADC_CCR_DELAY_2 | ADC_CCR_DELAY_1    
1466:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_8CYCLES  (                  ADC_CCR_DELAY_2 | ADC_CCR_DELAY_1 | A
1467:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_9CYCLES  (ADC_CCR_DELAY_3                                        
1468:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_10CYCLES (ADC_CCR_DELAY_3                                     | A
1469:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_11CYCLES (ADC_CCR_DELAY_3                   | ADC_CCR_DELAY_1    
1470:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_12CYCLES (ADC_CCR_DELAY_3                   | ADC_CCR_DELAY_1 | A
1471:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1472:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1473:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1474:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1475:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_MULTI_MASTER_SLAVE  Multimode - ADC master or slave
1476:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1477:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1478:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_MASTER                (                    ADC_CDR_RDATA_MST) /*!< In multimod
1479:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_SLAVE                 (ADC_CDR_RDATA_SLV                    ) /*!< In multimod
1480:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_MASTER_SLAVE          (ADC_CDR_RDATA_SLV | ADC_CDR_RDATA_MST) /*!< In multimod
1481:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1482:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1483:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1485:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
1486:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1487:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1488:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_HW_DELAYS  Definitions of ADC hardware constraints delays
1489:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Only ADC peripheral HW delays are defined in ADC LL driver driver,
1490:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         not timeout values.
1491:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         For details on delays values, refer to descriptions in source code
1492:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         above each literal definition.
1493:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1494:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1495:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1496:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Note: Only ADC peripheral HW delays are defined in ADC LL driver driver,   */
1497:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       not timeout values.                                                  */
1498:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       Timeout values for ADC operations are dependent to device clock      */
1499:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       configuration (system clock versus ADC clock),                       */
1500:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       and therefore must be defined in user application.                   */
1501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       Indications for estimation of ADC timeout delays, for this           */
1502:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       STM32 serie:                                                         */
1503:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       - ADC calibration time: maximum delay is 112/fADC.                   */
1504:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*         (refer to device datasheet, parameter "tCAL")                      */
1505:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       - ADC enable time: maximum delay is 1 conversion cycle.              */
1506:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*         (refer to device datasheet, parameter "tSTAB")                     */
1507:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       - ADC disable time: maximum delay should be a few ADC clock cycles   */
1508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       - ADC stop conversion time: maximum delay should be a few ADC clock  */
1509:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*         cycles                                                             */
1510:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       - ADC conversion time: duration depending on ADC clock and ADC       */
1511:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*         configuration.                                                     */
1512:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*         (refer to device reference manual, section "Timing")               */
ARM GAS  /tmp/ccJLHc1D.s 			page 28


1513:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1514:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Delay for ADC stabilization time (ADC voltage regulator start-up time)     */
1515:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Delay set to maximum value (refer to device datasheet,                     */
1516:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* parameter "tADCVREG_STUP").                                                */
1517:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Unit: us                                                                   */
1518:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_DELAY_INTERNAL_REGUL_STAB_US ( 10UL)  /*!< Delay for ADC stabilization time (ADC vol
1519:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1520:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Delay for internal voltage reference stabilization time.                   */
1521:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Delay set to maximum value (refer to device datasheet,                     */
1522:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* parameter "tstart_vrefint").                                               */
1523:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Unit: us                                                                   */
1524:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_DELAY_VREFINT_STAB_US       ( 12UL)  /*!< Delay for internal voltage reference stabi
1525:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1526:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Delay for temperature sensor stabilization time.                           */
1527:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Literal set to maximum value (refer to device datasheet,                   */
1528:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* parameter "tSTART").                                                       */
1529:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Unit: us                                                                   */
1530:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_DELAY_TEMPSENSOR_STAB_US    (120UL)  /*!< Delay for temperature sensor stabilization
1531:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1532:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Delay required between ADC end of calibration and ADC enable.              */
1533:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Note: On this STM32 serie, a minimum number of ADC clock cycles            */
1534:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       are required between ADC end of calibration and ADC enable.          */
1535:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       Wait time can be computed in user application by waiting for the     */
1536:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       equivalent number of CPU cycles, by taking into account              */
1537:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       ratio of CPU clock versus ADC clock prescalers.                      */
1538:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Unit: ADC clock cycles.                                                    */
1539:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_DELAY_CALIB_ENABLE_ADC_CYCLES (  4UL)  /*!< Delay required between ADC end of calibr
1540:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1541:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1542:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1543:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1544:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1545:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1546:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1547:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1548:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1549:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1550:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Exported macro ------------------------------------------------------------*/
1551:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Macros ADC Exported Macros
1552:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1553:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1554:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1555:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EM_WRITE_READ Common write and read registers Macros
1556:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1557:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1558:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1559:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1560:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Write a value in ADC register
1561:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __INSTANCE__ ADC Instance
1562:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __REG__ Register to be written
1563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __VALUE__ Value to be written in the register
1564:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
1565:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1566:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALUE
1567:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1568:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1569:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Read a value in ADC register
ARM GAS  /tmp/ccJLHc1D.s 			page 29


1570:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __INSTANCE__ ADC Instance
1571:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __REG__ Register to be read
1572:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Register value
1573:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1574:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
1575:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1576:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1577:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1578:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1579:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EM_HELPER_MACRO ADC helper macro
1580:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1581:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1582:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1583:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1584:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to get ADC channel number in decimal format
1585:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         from literals LL_ADC_CHANNEL_x.
1586:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Example:
1587:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           __LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_CHANNEL_4)
1588:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           will return decimal number "4".
1589:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   The input can be a value from functions where a channel
1590:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         number is returned, either defined with number
1591:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or with bitfield (only one bit must be set).
1592:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1593:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1594:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1                 (8)
1595:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2                 (8)
1596:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3                 (8)
1597:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4                 (8)
1598:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5                 (8)
1599:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1600:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1601:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1602:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1603:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1604:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1605:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1606:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1607:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1608:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1609:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1610:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1611:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1612:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT           (7)
1613:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC1   (1)
1614:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC5   (5)
1615:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT              (6)
1616:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP1           (1)
1617:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP2           (2)
1618:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC2      (2)
1619:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC3      (3)
1620:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP4           (5)
1621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP5           (5)
1622:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP6           (4)
1623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
1624:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
1625:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
1626:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
ARM GAS  /tmp/ccJLHc1D.s 			page 30


1627:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
1628:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
1629:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
1630:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
1631:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *          -  On this STM32 serie, all ADCx are not available on all devices. Refer to device dat
1632:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (8) On STM32G4, fast channel allows: 2.5 (sampling) + 12.5 (conversion) = 15 ADC clock 
1633:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Other channels are slow channels  allows: 6.5 (sampling) + 12.5 (conversion) = 19 A
1634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value between Min_Data=0 and Max_Data=18
1635:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1636:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_CHANNEL_TO_DECIMAL_NB(__CHANNEL__)                                        \
1637:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   ((((__CHANNEL__) & ADC_CHANNEL_ID_BITFIELD_MASK) == 0UL)                                 \
1638:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    ? (                                                                                     \
1639:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS \
1640:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****      )                                                                                     \
1641:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    :                                                                                       \
1642:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    (                                                                                       \
1643:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        (uint32_t)POSITION_VAL((__CHANNEL__))                                               \
1644:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    )                                                                                       \
1645:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   )
1646:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1647:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1648:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to get ADC channel in literal format LL_ADC_CHANNEL_x
1649:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         from number in decimal format.
1650:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Example:
1651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           __LL_ADC_DECIMAL_NB_TO_CHANNEL(4)
1652:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           will return a data equivalent to "LL_ADC_CHANNEL_4".
1653:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __DECIMAL_NB__ Value between Min_Data=0 and Max_Data=18
1654:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1655:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1656:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1                 (8)
1657:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2                 (8)
1658:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3                 (8)
1659:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4                 (8)
1660:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5                 (8)
1661:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1662:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1663:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1664:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1665:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1666:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1667:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1668:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1669:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1670:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1671:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1672:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1673:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1674:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT           (7)
1675:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC1   (1)
1676:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC5   (5)
1677:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT              (6)
1678:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP1           (1)
1679:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP2           (2)
1680:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC2      (2)
1681:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC3      (3)
1682:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP4           (5)
1683:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP5           (5)
ARM GAS  /tmp/ccJLHc1D.s 			page 31


1684:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP6           (4)
1685:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
1686:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
1687:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
1688:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
1689:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
1690:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
1691:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
1692:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
1693:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *          -  On this STM32 serie, all ADCx are not available on all devices. Refer to device dat
1694:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (8) On STM32G4, fast channel allows: 2.5 (sampling) + 12.5 (conversion) = 15 ADC clock 
1695:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Other channels are slow channels  allows: 6.5 (sampling) + 12.5 (conversion) = 19 A
1696:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1, 2, 3, 4, 5, 7) For ADC channel read back from ADC register,
1697:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                      comparison with internal channel parameter to be done
1698:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                      using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
1699:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1700:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_DECIMAL_NB_TO_CHANNEL(__DECIMAL_NB__)                                             
1701:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   (((__DECIMAL_NB__) <= 9UL)                                                                       
1702:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    ? (                                                                                             
1703:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__DECIMAL_NB__) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)                             |     
1704:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        (ADC_AWD2CR_AWD2CH_0 << (__DECIMAL_NB__))                                             |     
1705:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        (ADC_SMPR1_REGOFFSET | (((3UL * (__DECIMAL_NB__))) << ADC_CHANNEL_SMPx_BITOFFSET_POS))      
1706:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****      )                                                                                             
1707:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    :                                                                                               
1708:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    (                                                                                               
1709:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__DECIMAL_NB__) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)                                   
1710:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        (ADC_AWD2CR_AWD2CH_0 << (__DECIMAL_NB__))                                                   
1711:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        (ADC_SMPR2_REGOFFSET | (((3UL * ((__DECIMAL_NB__) - 10UL))) << ADC_CHANNEL_SMPx_BITOFFSET_PO
1712:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    )                                                                                               
1713:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   )
1714:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1715:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1716:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to determine whether the selected channel
1717:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         corresponds to literal definitions of driver.
1718:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   The different literal definitions of ADC channels are:
1719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC internal channel:
1720:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           LL_ADC_CHANNEL_VREFINT, LL_ADC_CHANNEL_TEMPSENSOR, ...
1721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC external channel (channel connected to a GPIO pin):
1722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...
1723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   The channel parameter must be a value defined from literal
1724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1725:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...),
1727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         must not be a value from functions where a channel number is
1728:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         returned from ADC registers,
1729:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         because internal and external channels share the same channel
1730:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         number in ADC registers. The differentiation is made only with
1731:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         parameters definitions of driver.
1732:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1733:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1734:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1                 (8)
1735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2                 (8)
1736:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3                 (8)
1737:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4                 (8)
1738:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5                 (8)
1739:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1740:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
ARM GAS  /tmp/ccJLHc1D.s 			page 32


1741:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1742:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1743:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1744:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1745:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1746:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1747:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1748:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1749:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1751:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1752:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT           (7)
1753:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC1   (1)
1754:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC5   (5)
1755:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT              (6)
1756:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP1           (1)
1757:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP2           (2)
1758:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC2      (2)
1759:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC3      (3)
1760:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP4           (5)
1761:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP5           (5)
1762:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP6           (4)
1763:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
1764:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
1765:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
1766:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
1767:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
1768:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
1769:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
1770:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
1771:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *          -  On this STM32 serie, all ADCx are not available on all devices. Refer to device dat
1772:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (8) On STM32G4, fast channel allows: 2.5 (sampling) + 12.5 (conversion) = 15 ADC clock 
1773:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Other channels are slow channels  allows: 6.5 (sampling) + 12.5 (conversion) = 19 A
1774:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value "0" if the channel corresponds to a parameter definition of a ADC external channe
1775:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Value "1" if the channel corresponds to a parameter definition of a ADC internal channe
1776:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1777:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL(__CHANNEL__)                              \
1778:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   (((__CHANNEL__) & ADC_CHANNEL_ID_INTERNAL_CH_MASK) != 0UL)
1779:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1780:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1781:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to convert a channel defined from parameter
1782:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1783:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1784:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         to its equivalent parameter definition of a ADC external channel
1785:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...).
1786:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   The channel parameter can be, additionally to a value
1787:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         defined from parameter definition of a ADC internal channel
1788:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (LL_ADC_CHANNEL_VREFINT, LL_ADC_CHANNEL_TEMPSENSOR, ...),
1789:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         a value defined from parameter definition of
1790:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...)
1791:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or a value from functions where a channel number is returned
1792:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         from ADC registers.
1793:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1794:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1795:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1                 (8)
1796:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2                 (8)
1797:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3                 (8)
ARM GAS  /tmp/ccJLHc1D.s 			page 33


1798:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4                 (8)
1799:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5                 (8)
1800:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1801:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1802:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1803:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1804:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1805:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1806:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1807:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1808:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1809:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1810:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1811:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1812:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1813:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT           (7)
1814:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC1   (1)
1815:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC5   (5)
1816:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT              (6)
1817:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP1           (1)
1818:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP2           (2)
1819:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC2      (2)
1820:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC3      (3)
1821:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP4           (5)
1822:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP5           (5)
1823:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP6           (4)
1824:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
1825:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
1826:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
1827:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
1828:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
1829:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
1830:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
1831:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
1832:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *          -  On this STM32 serie, all ADCx are not available on all devices. Refer to device dat
1833:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (8) On STM32G4, fast channel allows: 2.5 (sampling) + 12.5 (conversion) = 15 ADC clock 
1834:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Other channels are slow channels  allows: 6.5 (sampling) + 12.5 (conversion) = 19 A
1835:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1836:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1837:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1838:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1839:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1840:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1841:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
1842:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1843:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1844:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1845:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1847:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1848:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1849:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1850:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1851:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1852:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1853:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1854:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
ARM GAS  /tmp/ccJLHc1D.s 			page 34


1855:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1856:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL(__CHANNEL__)                     \
1857:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   ((__CHANNEL__) & ~ADC_CHANNEL_ID_INTERNAL_CH_MASK)
1858:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1859:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1860:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to determine whether the internal channel
1861:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         selected is available on the ADC instance selected.
1862:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   The channel parameter must be a value defined from parameter
1863:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1864:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1865:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         must not be a value defined from parameter definition of
1866:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...)
1867:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or a value from functions where a channel number is
1868:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         returned from ADC registers,
1869:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         because internal and external channels share the same channel
1870:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         number in ADC registers. The differentiation is made only with
1871:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         parameters definitions of driver.
1872:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __ADC_INSTANCE__ ADC instance
1873:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1874:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT           (7)
1875:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC1   (1)
1876:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC5   (5)
1877:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT              (6)
1878:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP1           (1)
1879:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP2           (2)
1880:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC2      (2)
1881:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC3      (3)
1882:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP4           (5)
1883:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP5           (5)
1884:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP6           (4)
1885:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
1886:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
1887:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
1888:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
1889:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
1890:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
1891:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
1892:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
1893:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *          -  On this STM32 serie, all ADCx are not available on all devices. Refer to device dat
1894:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value "0" if the internal channel selected is not available on the ADC instance selecte
1895:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Value "1" if the internal channel selected is available on the ADC instance selected.
1896:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1897:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined(STM32G474xx) || defined(STM32G484xx) || defined(STM32G473xx) || defined(STM32G483xx)
1898:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL_AVAILABLE(__ADC_INSTANCE__, __CHANNEL__)  \
1899:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   ((((__ADC_INSTANCE__) == ADC1)                                               \
1900:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     &&(                                                                        \
1901:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VOPAMP1)         ||                    \
1902:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR_ADC1) ||                    \
1903:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT)            ||                    \
1904:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)                               \
1905:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )                                                                        \
1906:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    )                                                                           \
1907:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    ||                                                                          \
1908:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    (((__ADC_INSTANCE__) == ADC2)                                               \
1909:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     &&(                                                                        \
1910:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VOPAMP2)         ||                    \
1911:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VOPAMP3_ADC2)                          \
ARM GAS  /tmp/ccJLHc1D.s 			page 35


1912:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )                                                                        \
1913:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    )                                                                           \
1914:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    ||                                                                          \
1915:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    (((__ADC_INSTANCE__) == ADC3)                                               \
1916:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     &&(                                                                        \
1917:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VOPAMP3_ADC3)    ||                    \
1918:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT)            ||                    \
1919:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)                               \
1920:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )                                                                        \
1921:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    )                                                                           \
1922:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    ||                                                                          \
1923:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    (((__ADC_INSTANCE__) == ADC4)                                               \
1924:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     &&(                                                                        \
1925:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VOPAMP6)         ||                    \
1926:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)                               \
1927:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )                                                                        \
1928:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    )                                                                           \
1929:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    ||                                                                          \
1930:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    (((__ADC_INSTANCE__) == ADC5)                                               \
1931:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     &&(                                                                        \
1932:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VOPAMP5)         ||                    \
1933:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR_ADC5) ||                    \
1934:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VOPAMP4)         ||                    \
1935:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT)            ||                    \
1936:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)                               \
1937:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )                                                                        \
1938:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    )                                                                           \
1939:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   )
1940:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #elif defined(STM32G471xx)
1941:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL_AVAILABLE(__ADC_INSTANCE__, __CHANNEL__)  \
1942:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   ((((__ADC_INSTANCE__) == ADC1)                                               \
1943:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     &&(                                                                        \
1944:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VOPAMP1)         ||                    \
1945:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR_ADC1) ||                    \
1946:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT)            ||                    \
1947:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)                               \
1948:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )                                                                        \
1949:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    )                                                                           \
1950:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    ||                                                                          \
1951:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    (((__ADC_INSTANCE__) == ADC2)                                               \
1952:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     &&(                                                                        \
1953:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VOPAMP2)         ||                    \
1954:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VOPAMP3_ADC2)                          \
1955:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )                                                                        \
1956:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    )                                                                           \
1957:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    ||                                                                          \
1958:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    (((__ADC_INSTANCE__) == ADC3)                                               \
1959:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     &&(                                                                        \
1960:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VOPAMP3_ADC3)    ||                    \
1961:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT)            ||                    \
1962:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)                               \
1963:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )                                                                        \
1964:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    )                                                                           \
1965:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   )
1966:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #elif defined(STM32GBK1CB) || defined(STM32G431xx) || defined(STM32G441xx)
1967:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL_AVAILABLE(__ADC_INSTANCE__, __CHANNEL__)  \
1968:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   ((((__ADC_INSTANCE__) == ADC1)                                               \
ARM GAS  /tmp/ccJLHc1D.s 			page 36


1969:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     &&(                                                                        \
1970:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VOPAMP1)         ||                    \
1971:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR_ADC1) ||                    \
1972:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT)            ||                    \
1973:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)                               \
1974:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )                                                                        \
1975:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    )                                                                           \
1976:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    ||                                                                          \
1977:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    (((__ADC_INSTANCE__) == ADC2)                                               \
1978:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     &&(                                                                        \
1979:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VOPAMP2)         ||                    \
1980:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VOPAMP3_ADC2)                          \
1981:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )                                                                        \
1982:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    )                                                                           \
1983:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   )
1984:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif
1985:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1986:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1987:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to define ADC analog watchdog parameter:
1988:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         define a single channel to monitor with analog watchdog
1989:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         from sequencer channel and groups definition.
1990:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_SetAnalogWDMonitChannels().
1991:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Example:
1992:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           LL_ADC_SetAnalogWDMonitChannels(
1993:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             ADC1, LL_ADC_AWD1,
1994:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             __LL_ADC_ANALOGWD_CHANNEL_GROUP(LL_ADC_CHANNEL4, LL_ADC_GROUP_REGULAR))
1995:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1996:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1997:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1                 (8)
1998:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2                 (8)
1999:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3                 (8)
2000:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4                 (8)
2001:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5                 (8)
2002:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2003:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2004:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2005:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2006:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2007:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2008:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2009:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2010:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2011:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
2012:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
2013:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
2014:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
2015:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT           (7)
2016:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC1   (1)
2017:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC5   (5)
2018:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT              (6)
2019:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP1           (1)
2020:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP2           (2)
2021:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC2      (2)
2022:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC3      (3)
2023:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP4           (5)
2024:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP5           (5)
2025:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP6           (4)
ARM GAS  /tmp/ccJLHc1D.s 			page 37


2026:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
2027:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
2028:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
2029:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
2030:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
2031:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
2032:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
2033:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
2034:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *          -  On this STM32 serie, all ADCx are not available on all devices. Refer to device dat
2035:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (8) On STM32G4, fast channel allows: 2.5 (sampling) + 12.5 (conversion) = 15 ADC clock 
2036:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Other channels are slow channels  allows: 6.5 (sampling) + 12.5 (conversion) = 19 A
2037:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1, 2, 3, 4, 5, 7) For ADC channel read back from ADC register,
2038:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                      comparison with internal channel parameter to be done
2039:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                      using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
2040:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __GROUP__ This parameter can be one of the following values:
2041:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_REGULAR
2042:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_INJECTED
2043:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_REGULAR_INJECTED
2044:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2045:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
2046:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG        (0)
2047:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_INJ        (0)
2048:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG_INJ
2049:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG           (0)
2050:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_INJ           (0)
2051:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG_INJ
2052:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG           (0)
2053:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_INJ           (0)
2054:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG_INJ
2055:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG           (0)
2056:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_INJ           (0)
2057:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG_INJ
2058:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG           (0)
2059:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_INJ           (0)
2060:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG_INJ
2061:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG           (0)
2062:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_INJ           (0)
2063:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG_INJ
2064:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG           (0)
2065:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_INJ           (0)
2066:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG_INJ
2067:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG           (0)
2068:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_INJ           (0)
2069:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG_INJ
2070:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG           (0)
2071:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_INJ           (0)
2072:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG_INJ
2073:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG           (0)
2074:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_INJ           (0)
2075:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG_INJ
2076:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG           (0)
2077:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_INJ           (0)
2078:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG_INJ
2079:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG          (0)
2080:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_INJ          (0)
2081:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG_INJ
2082:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG          (0)
ARM GAS  /tmp/ccJLHc1D.s 			page 38


2083:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_INJ          (0)
2084:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG_INJ
2085:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG          (0)
2086:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_INJ          (0)
2087:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG_INJ
2088:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG          (0)
2089:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_INJ          (0)
2090:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG_INJ
2091:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG          (0)
2092:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_INJ          (0)
2093:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG_INJ
2094:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG          (0)
2095:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_INJ          (0)
2096:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG_INJ
2097:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG          (0)
2098:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_INJ          (0)
2099:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG_INJ
2100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG          (0)
2101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_INJ          (0)
2102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG_INJ
2103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG          (0)
2104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_INJ          (0)
2105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG_INJ
2106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG          (0)
2107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_INJ          (0)
2108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG_INJ
2109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_ADC1_REG  (0)(1)
2110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_ADC1_INJ  (0)(1)
2111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_ADC1_REG_INJ (1)
2112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_ADC5_REG  (0)(5)
2113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_ADC5_INJ  (0)(5)
2114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_ADC5_REG_INJ (5)
2115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG             (0)(6)
2116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_INJ             (0)(6)
2117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG_INJ            (6)
2118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP1_REG          (0)(1)
2119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP1_INJ          (0)(1)
2120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP1_REG_INJ         (1)
2121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP2_REG          (0)(2)
2122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP2_INJ          (0)(2)
2123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP2_REG_INJ         (2)
2124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP3_ADC2_REG     (0)(2)
2125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP3_ADC2_INJ     (0)(2)
2126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP3_ADC2_REG_INJ    (2)
2127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP3_ADC3_REG     (0)(3)
2128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP3_ADC3_INJ     (0)(3)
2129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP3_ADC3_REG_INJ    (3)
2130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP4_REG          (0)(5)
2131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP4_INJ          (0)(5)
2132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP4_REG_INJ         (5)
2133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP5_REG          (0)(5)
2134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP5_INJ          (0)(5)
2135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP5_REG_INJ         (5)
2136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP6_REG          (0)(4)
2137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP6_INJ          (0)(4)
2138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP6_REG_INJ         (4)
2139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
ARM GAS  /tmp/ccJLHc1D.s 			page 39


2140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (0) On STM32G4, parameter available only on analog watchdog number: AWD1.\n
2141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
2142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
2143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
2144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
2145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
2146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
2147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
2148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *          -  On this STM32 serie, all ADCx are not available on all devices. Refer to device dat
2149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_CHANNEL_GROUP(__CHANNEL__, __GROUP__)                                    
2151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   (((__GROUP__) == LL_ADC_GROUP_REGULAR)                                                           
2152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    ? (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)                  
2153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    :                                                                                               
2154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    ((__GROUP__) == LL_ADC_GROUP_INJECTED)                                                          
2155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    ? (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)                 
2156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    :                                                                                               
2157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL) 
2158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   )
2159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to set the value of ADC analog watchdog threshold high
2162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or low in function of ADC resolution, when ADC resolution is
2163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         different of 12 bits.
2164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_ConfigAnalogWDThresholds()
2165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or @ref LL_ADC_SetAnalogWDThresholds().
2166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Example, with a ADC resolution of 8 bits, to set the value of
2167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         analog watchdog threshold high (on 8 bits):
2168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           LL_ADC_SetAnalogWDThresholds
2169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *            (< ADCx param >,
2170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION(LL_ADC_RESOLUTION_8B, <threshold_value_8
2171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *            );
2172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __AWD_THRESHOLD__ Value between Min_Data=0x000 and Max_Data=0xFFF
2178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
2179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION(__ADC_RESOLUTION__, __AWD_THRESHOLD__) \
2181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   ((__AWD_THRESHOLD__) << ((__ADC_RESOLUTION__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1U )))
2182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to get the value of ADC analog watchdog threshold high
2185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or low in function of ADC resolution, when ADC resolution is
2186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         different of 12 bits.
2187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_GetAnalogWDThresholds().
2188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Example, with a ADC resolution of 8 bits, to get the value of
2189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         analog watchdog threshold high (on 8 bits):
2190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           < threshold_value_6_bits > = __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION
2191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *            (LL_ADC_RESOLUTION_8B,
2192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             LL_ADC_GetAnalogWDThresholds(<ADCx param>, LL_ADC_AWD_THRESHOLD_HIGH)
2193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *            );
2194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
ARM GAS  /tmp/ccJLHc1D.s 			page 40


2197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __AWD_THRESHOLD_12_BITS__ Value between Min_Data=0x000 and Max_Data=0xFFF
2200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
2201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION(__ADC_RESOLUTION__, __AWD_THRESHOLD_12_BITS__) \
2203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   ((__AWD_THRESHOLD_12_BITS__) >> ((__ADC_RESOLUTION__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1U )))
2204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to get the ADC analog watchdog threshold high
2207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or low from raw value containing both thresholds concatenated.
2208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_GetAnalogWDThresholds().
2209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Example, to get analog watchdog threshold high from the register raw value:
2210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW(LL_ADC_AWD_THRESHOLD_HIGH, <raw_value_with_both
2211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __AWD_THRESHOLD_TYPE__ This parameter can be one of the following values:
2212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
2213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
2214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __AWD_THRESHOLDS__ Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
2215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
2216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW(__AWD_THRESHOLD_TYPE__, __AWD_THRESHOLDS__)       \
2218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   (((__AWD_THRESHOLDS__) >> (((__AWD_THRESHOLD_TYPE__) & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TRX_
2219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to set the ADC calibration value with both single ended
2222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         and differential modes calibration factors concatenated.
2223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_SetCalibrationFactor().
2224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Example, to set calibration factors single ended to 0x55
2225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         and differential ended to 0x2A:
2226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           LL_ADC_SetCalibrationFactor(
2227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             ADC1,
2228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             __LL_ADC_CALIB_FACTOR_SINGLE_DIFF(0x55, 0x2A))
2229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __CALIB_FACTOR_SINGLE_ENDED__ Value between Min_Data=0x00 and Max_Data=0x7F
2230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __CALIB_FACTOR_DIFFERENTIAL__ Value between Min_Data=0x00 and Max_Data=0x7F
2231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
2232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_CALIB_FACTOR_SINGLE_DIFF(__CALIB_FACTOR_SINGLE_ENDED__, __CALIB_FACTOR_DIFFERENTIA
2234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   (((__CALIB_FACTOR_DIFFERENTIAL__) << ADC_CALFACT_CALFACT_D_Pos) | (__CALIB_FACTOR_SINGLE_ENDED__)
2235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
2237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to get the ADC multimode conversion data of ADC master
2239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or ADC slave from raw value with both ADC conversion data concatenated.
2240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This macro is intended to be used when multimode transfer by DMA
2241:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is enabled: refer to function @ref LL_ADC_SetMultiDMATransfer().
2242:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         In this case the transferred data need to processed with this macro
2243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         to separate the conversion data of ADC master and ADC slave.
2244:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __ADC_MULTI_MASTER_SLAVE__ This parameter can be one of the following values:
2245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_MASTER
2246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_SLAVE
2247:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __ADC_MULTI_CONV_DATA__ Value between Min_Data=0x000 and Max_Data=0xFFF
2248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
2249:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2250:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_MULTI_CONV_DATA_MASTER_SLAVE(__ADC_MULTI_MASTER_SLAVE__, __ADC_MULTI_CONV_DATA__) 
2251:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   (((__ADC_MULTI_CONV_DATA__) >> ((ADC_CDR_RDATA_SLV_Pos) & ~(__ADC_MULTI_MASTER_SLAVE__))) & ADC_C
2252:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif
2253:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
ARM GAS  /tmp/ccJLHc1D.s 			page 41


2254:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
2255:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2256:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to select, from a ADC instance, to which ADC instance
2257:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         it has a dependence in multimode (ADC master of the corresponding
2258:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC common instance).
2259:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   In case of device with multimode available and a mix of
2260:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC instances compliant and not compliant with multimode feature,
2261:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC instances not compliant with multimode feature are
2262:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         considered as master instances (do not depend to
2263:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         any other ADC instance).
2264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __ADCx__ ADC instance
2265:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval __ADCx__ ADC instance master of the corresponding ADC common instance
2266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2267:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined(ADC5)
2268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_MULTI_INSTANCE_MASTER(__ADCx__) \
2269:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   ( ( ((__ADCx__) == ADC2)                                                     \
2270:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     )?                                                                         \
2271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     (ADC1)                                                                     \
2272:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     :                                                                          \
2273:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     ( ( ((__ADCx__) == ADC4)                                                   \
2274:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )?                                                                       \
2275:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       (ADC3)                                                                   \
2276:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       :                                                                        \
2277:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       (__ADCx__)                                                               \
2278:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     )                                                                          \
2279:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   )
2280:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #else
2281:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_MULTI_INSTANCE_MASTER(__ADCx__) \
2282:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   ( ( ((__ADCx__) == ADC2)                                                     \
2283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     )?                                                                         \
2284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     (ADC1)                                                                     \
2285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     :                                                                          \
2286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     (__ADCx__)                                                                 \
2287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   )
2288:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif
2289:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif
2290:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2291:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2292:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to select the ADC common instance
2293:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         to which is belonging the selected ADC instance.
2294:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   ADC common register instance can be used for:
2295:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Set parameters common to several ADC instances
2296:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Multimode (for devices with several ADC instances)
2297:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to functions having argument "ADCxy_COMMON" as parameter.
2298:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __ADCx__ ADC instance
2299:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval ADC common register instance
2300:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2301:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined(ADC345_COMMON)
2302:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_COMMON_INSTANCE(__ADCx__)                                     \
2303:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   ((((__ADCx__) == ADC1) || ((__ADCx__) == ADC2))                              \
2304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     ? (                                                                        \
2305:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        (ADC12_COMMON)                                                          \
2306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )                                                                        \
2307:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       :                                                                        \
2308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       (                                                                        \
2309:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        (ADC345_COMMON)                                                         \
2310:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )                                                                        \
ARM GAS  /tmp/ccJLHc1D.s 			page 42


2311:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   )
2312:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #else
2313:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_COMMON_INSTANCE(__ADCx__)  (ADC12_COMMON)
2314:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif
2315:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2316:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to check if all ADC instances sharing the same
2317:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC common instance are disabled.
2318:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This check is required by functions with setting conditioned to
2319:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
2320:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
2321:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to functions having argument "ADCxy_COMMON" as parameter.
2322:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On devices with only 1 ADC common instance, parameter of this macro
2323:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is useless and can be ignored (parameter kept for compatibility
2324:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         with devices featuring several ADC common instances).
2325:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __ADCXY_COMMON__ ADC common instance
2326:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2327:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value "0" if all ADC instances sharing the same ADC common instance
2328:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         are disabled.
2329:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Value "1" if at least one ADC instance sharing the same ADC common instance
2330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is enabled.
2331:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2332:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined(ADC345_COMMON)
2333:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined(ADC4) &&  defined(ADC5)
2334:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__ADCXY_COMMON__)              \
2335:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   (((__ADCXY_COMMON__) == ADC12_COMMON)                                        \
2336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     ? (                                                                        \
2337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        (LL_ADC_IsEnabled(ADC1) |                                               \
2338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****         LL_ADC_IsEnabled(ADC2)  )                                              \
2339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )                                                                        \
2340:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       :                                                                        \
2341:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       (                                                                        \
2342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        (LL_ADC_IsEnabled(ADC3) |                                               \
2343:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****         LL_ADC_IsEnabled(ADC4) |                                               \
2344:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****         LL_ADC_IsEnabled(ADC5)  )                                              \
2345:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )                                                                        \
2346:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   )
2347:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #else
2348:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__ADCXY_COMMON__)              \
2349:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   (((__ADCXY_COMMON__) == ADC12_COMMON)                                        \
2350:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     ? (                                                                        \
2351:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        (LL_ADC_IsEnabled(ADC1) |                                               \
2352:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****         LL_ADC_IsEnabled(ADC2)  )                                              \
2353:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )                                                                        \
2354:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       :                                                                        \
2355:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       (LL_ADC_IsEnabled(ADC3))                                                 \
2356:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   )
2357:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif /* ADC4 && ADC5 */
2358:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #else
2359:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__ADCXY_COMMON__)              \
2360:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   (LL_ADC_IsEnabled(ADC1) | LL_ADC_IsEnabled(ADC2))
2361:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif
2362:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2363:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2364:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to define the ADC conversion data full-scale digital
2365:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         value corresponding to the selected ADC resolution.
2366:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   ADC conversion data full-scale corresponds to voltage range
2367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         determined by analog voltage references Vref+ and Vref-
ARM GAS  /tmp/ccJLHc1D.s 			page 43


2368:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (refer to reference manual).
2369:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2371:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2372:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2373:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2374:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval ADC conversion data full-scale digital value (unit: digital value of ADC conversion dat
2375:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2376:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__)                             \
2377:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   (0xFFFUL >> ((__ADC_RESOLUTION__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL)))
2378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2379:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2380:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to convert the ADC conversion data from
2381:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         a resolution to another resolution.
2382:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __DATA__ ADC conversion data to be converted
2383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION_CURRENT__ Resolution of the data to be converted
2384:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         This parameter can be one of the following values:
2385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2386:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2388:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION_TARGET__ Resolution of the data after conversion
2390:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         This parameter can be one of the following values:
2391:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2392:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2393:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2394:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2395:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval ADC conversion data to the requested resolution
2396:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2397:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_CONVERT_DATA_RESOLUTION(__DATA__,\
2398:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                          __ADC_RESOLUTION_CURRENT__,\
2399:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                          __ADC_RESOLUTION_TARGET__)            \
2400:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   (((__DATA__)                                                                 \
2401:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     << ((__ADC_RESOLUTION_CURRENT__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL)))   \
2402:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    >> ((__ADC_RESOLUTION_TARGET__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL))      \
2403:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   )
2404:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2405:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2406:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to calculate the voltage (unit: mVolt)
2407:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         corresponding to a ADC conversion data (unit: digital value).
2408:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
2409:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
2410:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
2411:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__ Analog reference voltage (unit: mV)
2412:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __ADC_DATA__ ADC conversion data (resolution 12 bits)
2413:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                       (unit: digital value).
2414:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2415:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2416:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2417:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2418:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2419:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval ADC conversion data equivalent voltage value (unit: mVolt)
2420:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2421:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_CALC_DATA_TO_VOLTAGE(__VREFANALOG_VOLTAGE__,\
2422:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                       __ADC_DATA__,\
2423:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                       __ADC_RESOLUTION__)                      \
2424:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   ((__ADC_DATA__) * (__VREFANALOG_VOLTAGE__)                                   \
ARM GAS  /tmp/ccJLHc1D.s 			page 44


2425:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    / __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__)                                \
2426:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   )
2427:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2428:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2429:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to calculate analog reference voltage (Vref+)
2430:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (unit: mVolt) from ADC conversion data of internal voltage
2431:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         reference VrefInt.
2432:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Computation is using VrefInt calibration value
2433:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         stored in system memory for each device during production.
2434:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This voltage depends on user board environment: voltage level
2435:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         connected to pin Vref+.
2436:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         On devices with small package, the pin Vref+ is not present
2437:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         and internally bonded to pin Vdda.
2438:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 serie, calibration data of internal voltage reference
2439:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         VrefInt corresponds to a resolution of 12 bits,
2440:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         this is the recommended ADC resolution to convert voltage of
2441:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         internal voltage reference VrefInt.
2442:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Otherwise, this macro performs the processing to scale
2443:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC conversion data to 12 bits.
2444:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __VREFINT_ADC_DATA__ ADC conversion data (resolution 12 bits)
2445:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         of internal voltage reference VrefInt (unit: digital value).
2446:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2447:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2448:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2449:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2450:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Analog reference voltage (unit: mV)
2452:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_CALC_VREFANALOG_VOLTAGE(__VREFINT_ADC_DATA__,\
2454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                          __ADC_RESOLUTION__)                   \
2455:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   (((uint32_t)(*VREFINT_CAL_ADDR) * VREFINT_CAL_VREF)                          \
2456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    / __LL_ADC_CONVERT_DATA_RESOLUTION((__VREFINT_ADC_DATA__),                  \
2457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                       (__ADC_RESOLUTION__),                    \
2458:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                       LL_ADC_RESOLUTION_12B))
2459:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2460:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2461:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to calculate the temperature (unit: degree Celsius)
2462:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         from ADC conversion data of internal temperature sensor.
2463:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Computation is using temperature sensor calibration values
2464:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         stored in system memory for each device during production.
2465:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Calculation formula:
2466:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           Temperature = ((TS_ADC_DATA - TS_CAL1)
2467:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                           * (TS_CAL2_TEMP - TS_CAL1_TEMP))
2468:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                         / (TS_CAL2 - TS_CAL1) + TS_CAL1_TEMP
2469:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           with TS_ADC_DATA = temperature sensor raw data measured by ADC
2470:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                Avg_Slope = (TS_CAL2 - TS_CAL1)
2471:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                            / (TS_CAL2_TEMP - TS_CAL1_TEMP)
2472:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                TS_CAL1   = equivalent TS_ADC_DATA at temperature
2473:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                            TEMP_DEGC_CAL1 (calibrated in factory)
2474:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                TS_CAL2   = equivalent TS_ADC_DATA at temperature
2475:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                            TEMP_DEGC_CAL2 (calibrated in factory)
2476:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Caution: Calculation relevancy under reserve that calibration
2477:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                  parameters are correct (address and data).
2478:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                  To calculate temperature using temperature sensor
2479:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                  datasheet typical values (generic values less, therefore
2480:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                  less accurate than calibrated values),
2481:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                  use helper macro @ref __LL_ADC_CALC_TEMPERATURE_TYP_PARAMS().
ARM GAS  /tmp/ccJLHc1D.s 			page 45


2482:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   As calculation input, the analog reference voltage (Vref+) must be
2483:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         defined as it impacts the ADC LSB equivalent voltage.
2484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
2485:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
2486:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
2487:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 serie, calibration data of temperature sensor
2488:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         corresponds to a resolution of 12 bits,
2489:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         this is the recommended ADC resolution to convert voltage of
2490:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         temperature sensor.
2491:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Otherwise, this macro performs the processing to scale
2492:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC conversion data to 12 bits.
2493:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__  Analog reference voltage (unit: mV)
2494:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __TEMPSENSOR_ADC_DATA__ ADC conversion data of internal
2495:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                                 temperature sensor (unit: digital value).
2496:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__      ADC resolution at which internal temperature
2497:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                                 sensor voltage has been measured.
2498:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         This parameter can be one of the following values:
2499:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2500:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2502:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2503:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Temperature (unit: degree Celsius)
2504:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2505:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_CALC_TEMPERATURE(__VREFANALOG_VOLTAGE__,\
2506:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                   __TEMPSENSOR_ADC_DATA__,\
2507:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                   __ADC_RESOLUTION__)                              \
2508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   (((( ((int32_t)((__LL_ADC_CONVERT_DATA_RESOLUTION((__TEMPSENSOR_ADC_DATA__),     \
2509:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                     (__ADC_RESOLUTION__),          \
2510:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                     LL_ADC_RESOLUTION_12B)         \
2511:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                    * (__VREFANALOG_VOLTAGE__))                                     \
2512:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                   / TEMPSENSOR_CAL_VREFANALOG)                                     \
2513:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****         - (int32_t) *TEMPSENSOR_CAL1_ADDR)                                         \
2514:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****      ) * (int32_t)(TEMPSENSOR_CAL2_TEMP - TEMPSENSOR_CAL1_TEMP)                    \
2515:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     ) / (int32_t)((int32_t)*TEMPSENSOR_CAL2_ADDR - (int32_t)*TEMPSENSOR_CAL1_ADDR) \
2516:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    ) + TEMPSENSOR_CAL1_TEMP                                                        \
2517:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   )
2518:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2519:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2520:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to calculate the temperature (unit: degree Celsius)
2521:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         from ADC conversion data of internal temperature sensor.
2522:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Computation is using temperature sensor typical values
2523:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (refer to device datasheet).
2524:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Calculation formula:
2525:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           Temperature = (TS_TYP_CALx_VOLT(uV) - TS_ADC_DATA * Conversion_uV)
2526:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                         / Avg_Slope + CALx_TEMP
2527:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           with TS_ADC_DATA      = temperature sensor raw data measured by ADC
2528:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                                   (unit: digital value)
2529:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                Avg_Slope        = temperature sensor slope
2530:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                                   (unit: uV/Degree Celsius)
2531:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                TS_TYP_CALx_VOLT = temperature sensor digital value at
2532:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                                   temperature CALx_TEMP (unit: mV)
2533:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Caution: Calculation relevancy under reserve the temperature sensor
2534:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                  of the current device has characteristics in line with
2535:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                  datasheet typical values.
2536:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                  If temperature sensor calibration values are available on
2537:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                  on this device (presence of macro __LL_ADC_CALC_TEMPERATURE()),
2538:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                  temperature calculation will be more accurate using
ARM GAS  /tmp/ccJLHc1D.s 			page 46


2539:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                  helper macro @ref __LL_ADC_CALC_TEMPERATURE().
2540:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   As calculation input, the analog reference voltage (Vref+) must be
2541:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         defined as it impacts the ADC LSB equivalent voltage.
2542:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
2543:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
2544:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
2545:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   ADC measurement data must correspond to a resolution of 12 bits
2546:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (full scale digital value 4095). If not the case, the data must be
2547:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         preliminarily rescaled to an equivalent resolution of 12 bits.
2548:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __TEMPSENSOR_TYP_AVGSLOPE__   Device datasheet data: Temperature sensor slope typical v
2549:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                                       On STM32G4, refer to device datasheet parameter "Avg_Slop
2550:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __TEMPSENSOR_TYP_CALX_V__     Device datasheet data: Temperature sensor voltage typical
2551:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                                       On STM32G4, refer to device datasheet parameter "V30" (co
2552:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __TEMPSENSOR_CALX_TEMP__      Device datasheet data: Temperature at which temperature s
2553:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__        Analog voltage reference (Vref+) voltage (unit: mV)
2554:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __TEMPSENSOR_ADC_DATA__       ADC conversion data of internal temperature sensor (unit:
2555:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__            ADC resolution at which internal temperature sensor volta
2556:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         This parameter can be one of the following values:
2557:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2558:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2559:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2560:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2561:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Temperature (unit: degree Celsius)
2562:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_CALC_TEMPERATURE_TYP_PARAMS(__TEMPSENSOR_TYP_AVGSLOPE__,\
2564:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              __TEMPSENSOR_TYP_CALX_V__,\
2565:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              __TEMPSENSOR_CALX_TEMP__,\
2566:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              __VREFANALOG_VOLTAGE__,\
2567:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              __TEMPSENSOR_ADC_DATA__,\
2568:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              __ADC_RESOLUTION__)               \
2569:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   ((( (                                                                        \
2570:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        (int32_t)((((__TEMPSENSOR_ADC_DATA__) * (__VREFANALOG_VOLTAGE__))       \
2571:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                   / __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__))                \
2572:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                  * 1000UL)                                                     \
2573:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        -                                                                       \
2574:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        (int32_t)(((__TEMPSENSOR_TYP_CALX_V__))                                 \
2575:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                  * 1000UL)                                                     \
2576:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )                                                                        \
2577:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     ) / (int32_t)(__TEMPSENSOR_TYP_AVGSLOPE__)                                 \
2578:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    ) + (int32_t)(__TEMPSENSOR_CALX_TEMP__)                                     \
2579:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   )
2580:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2581:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2582:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
2583:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2584:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2585:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2586:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
2587:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2588:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2589:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2590:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Exported functions --------------------------------------------------------*/
2591:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Functions ADC Exported Functions
2592:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
2593:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2594:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2595:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_DMA_Management ADC DMA management
ARM GAS  /tmp/ccJLHc1D.s 			page 47


2596:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
2597:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2598:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Note: LL ADC functions to set DMA transfer are located into sections of    */
2599:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       configuration of ADC instance, groups and multimode (if available):  */
2600:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       @ref LL_ADC_REG_SetDMATransfer(), ...                                */
2601:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2602:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2603:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Function to help to configure DMA transfer from ADC: retrieve the
2604:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC register address from ADC instance and a list of ADC registers
2605:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         intended to be used (most commonly) with DMA transfer.
2606:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   These ADC registers are data registers:
2607:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         when ADC conversion data is available in ADC data registers,
2608:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC generates a DMA transfer request.
2609:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This macro is intended to be used with LL DMA driver, refer to
2610:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         function "LL_DMA_ConfigAddresses()".
2611:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Example:
2612:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           LL_DMA_ConfigAddresses(DMA1,
2613:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                                  LL_DMA_CHANNEL_1,
2614:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                                  LL_ADC_DMA_GetRegAddr(ADC1, LL_ADC_DMA_REG_REGULAR_DATA),
2615:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                                  (uint32_t)&< array or variable >,
2616:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                                  LL_DMA_DIRECTION_PERIPH_TO_MEMORY);
2617:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   For devices with several ADC: in multimode, some devices
2618:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         use a different data register outside of ADC instance scope
2619:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (common data register). This macro manages this register difference,
2620:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         only ADC instance has to be set as parameter.
2621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_DMA_GetRegAddr\n
2622:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CDR      RDATA_MST      LL_ADC_DMA_GetRegAddr\n
2623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CDR      RDATA_SLV      LL_ADC_DMA_GetRegAddr
2624:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
2625:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Register This parameter can be one of the following values:
2626:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DMA_REG_REGULAR_DATA
2627:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DMA_REG_REGULAR_DATA_MULTI (1)
2628:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
2629:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) Available on devices with several ADC instances.
2630:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval ADC register address
2631:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2632:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
2633:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_DMA_GetRegAddr(ADC_TypeDef *ADCx, uint32_t Register)
2634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
2635:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   register uint32_t data_reg_addr;
2636:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2637:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   if (Register == LL_ADC_DMA_REG_REGULAR_DATA)
2638:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   {
2639:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     /* Retrieve address of register DR */
2640:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     data_reg_addr = (uint32_t) &(ADCx->DR);
2641:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   }
2642:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   else /* (Register == LL_ADC_DMA_REG_REGULAR_DATA_MULTI) */
2643:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   {
2644:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     /* Retrieve address of register CDR */
2645:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     data_reg_addr = (uint32_t) &((__LL_ADC_COMMON_INSTANCE(ADCx))->CDR);
2646:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   }
2647:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2648:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return data_reg_addr;
2649:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
2650:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #else
2651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_DMA_GetRegAddr(ADC_TypeDef *ADCx, uint32_t Register)
2652:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
ARM GAS  /tmp/ccJLHc1D.s 			page 48


2653:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Prevent unused argument(s) compilation warning */
2654:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   (void)(Register);
2655:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2656:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Retrieve address of register DR */
2657:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t) &(ADCx->DR);
2658:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
2659:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif
2660:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2661:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2662:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
2663:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2664:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2665:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Common Configuration of ADC hierarchical scope: common to
2666:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
2667:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2668:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2669:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2670:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: Clock source and prescaler.
2671:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 serie, if ADC group injected is used, some
2672:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         clock ratio constraints between ADC clock and AHB clock
2673:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         must be respected.
2674:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to reference manual.
2675:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
2676:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
2677:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
2678:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
2679:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
2680:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
2681:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CCR      CKMODE         LL_ADC_SetCommonClock\n
2682:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CCR      PRESC          LL_ADC_SetCommonClock
2683:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2684:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2685:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  CommonClock This parameter can be one of the following values:
2686:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV1
2687:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV2
2688:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV4
2689:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV1
2690:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV2
2691:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV4
2692:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV6
2693:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV8
2694:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV10
2695:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV12
2696:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV16
2697:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV32
2698:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV64
2699:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV128
2700:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV256
2701:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
2702:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2703:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonClock(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t CommonClock)
2704:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
2705:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_CKMODE | ADC_CCR_PRESC, CommonClock);
2706:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
2707:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2708:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2709:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get parameter common to several ADC: Clock source and prescaler.
ARM GAS  /tmp/ccJLHc1D.s 			page 49


2710:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CCR      CKMODE         LL_ADC_GetCommonClock\n
2711:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CCR      PRESC          LL_ADC_GetCommonClock
2712:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2713:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2714:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2715:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV1
2716:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV2
2717:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV4
2718:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV1
2719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV2
2720:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV4
2721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV6
2722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV8
2723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV10
2724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV12
2725:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV16
2726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV32
2727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV64
2728:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV128
2729:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV256
2730:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2731:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCommonClock(ADC_Common_TypeDef *ADCxy_COMMON)
2732:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
2733:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_CKMODE | ADC_CCR_PRESC));
2734:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
2735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2736:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2737:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to internal
2738:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         channels (VrefInt, temperature sensor, ...).
2739:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   One or several values can be selected.
2740:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
2741:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
2742:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Stabilization time of measurement path to internal channel:
2743:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         After enabling internal paths, before starting ADC conversion,
2744:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         a delay is required for internal voltage reference and
2745:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         temperature sensor stabilization time.
2746:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to device datasheet.
2747:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_VREFINT_STAB_US.
2748:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_TEMPSENSOR_STAB_US.
2749:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   ADC internal channel sampling time constraint:
2750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         For ADC conversion of internal channels,
2751:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         a sampling time minimum value is required.
2752:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to device datasheet.
2753:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalCh\n
2754:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CCR      VSENSESEL      LL_ADC_SetCommonPathInternalCh\n
2755:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CCR      VBATSEL        LL_ADC_SetCommonPathInternalCh
2756:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2757:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2758:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
2759:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
2760:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
2761:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
2762:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
2763:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
2764:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2765:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalCh(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t Path
2766:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
ARM GAS  /tmp/ccJLHc1D.s 			page 50


2767:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_VSENSESEL | ADC_CCR_VBATSEL, PathInternal)
2768:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
2769:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2770:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2771:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get parameter common to several ADC: measurement path to internal
2772:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         channels (VrefInt, temperature sensor, ...).
2773:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   One or several values can be selected.
2774:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
2775:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
2776:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_GetCommonPathInternalCh\n
2777:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CCR      VSENSESEL      LL_ADC_GetCommonPathInternalCh\n
2778:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CCR      VBATSEL        LL_ADC_GetCommonPathInternalCh
2779:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2780:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2781:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be a combination of the following values:
2782:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
2783:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
2784:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
2785:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
2786:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2787:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCommonPathInternalCh(ADC_Common_TypeDef *ADCxy_COMMON)
2788:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
2789:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_VSENSESEL | ADC_CCR_VBATSE
2790:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
2791:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2792:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2793:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
2794:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2795:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2796:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Instance Configuration of ADC hierarchical scope: ADC ins
2797:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
2798:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2799:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2800:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2801:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC calibration factor in the mode single-ended
2802:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
2803:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This function is intended to set calibration parameters
2804:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         without having to perform a new calibration using
2805:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @ref LL_ADC_StartCalibration().
2806:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   For devices with differential mode available:
2807:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Calibration of offset is specific to each of
2808:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         single-ended and differential modes
2809:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (calibration factor must be specified for each of these
2810:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         differential modes, if used afterwards and if the application
2811:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         requires their calibration).
2812:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   In case of setting calibration factors of both modes single ended
2813:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         and differential (parameter LL_ADC_BOTH_SINGLE_DIFF_ENDED):
2814:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         both calibration factors must be concatenated.
2815:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         To perform this processing, use helper macro
2816:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @ref __LL_ADC_CALIB_FACTOR_SINGLE_DIFF().
2817:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
2818:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
2819:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be enabled, without calibration on going, without conversion
2820:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on going on group regular.
2821:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CALFACT  CALFACT_S      LL_ADC_SetCalibrationFactor\n
2822:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CALFACT  CALFACT_D      LL_ADC_SetCalibrationFactor
2823:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
ARM GAS  /tmp/ccJLHc1D.s 			page 51


2824:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  SingleDiff This parameter can be one of the following values:
2825:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
2826:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
2827:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_BOTH_SINGLE_DIFF_ENDED
2828:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  CalibrationFactor Value between Min_Data=0x00 and Max_Data=0x7F
2829:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
2830:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2831:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCalibrationFactor(ADC_TypeDef *ADCx, uint32_t SingleDiff, uint32_t C
2832:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
2833:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CALFACT,
2834:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              SingleDiff & ADC_SINGLEDIFF_CALIB_FACTOR_MASK,
2835:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              CalibrationFactor << (((SingleDiff & ADC_SINGLEDIFF_CALIB_F_BIT_D_MASK) >> ADC_SINGLED
2836:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
2837:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2838:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2839:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC calibration factor in the mode single-ended
2840:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
2841:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Calibration factors are set by hardware after performing
2842:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         a calibration run using function @ref LL_ADC_StartCalibration().
2843:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   For devices with differential mode available:
2844:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Calibration of offset is specific to each of
2845:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         single-ended and differential modes
2846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CALFACT  CALFACT_S      LL_ADC_GetCalibrationFactor\n
2847:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CALFACT  CALFACT_D      LL_ADC_GetCalibrationFactor
2848:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
2849:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  SingleDiff This parameter can be one of the following values:
2850:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
2851:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
2852:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x7F
2853:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2854:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCalibrationFactor(ADC_TypeDef *ADCx, uint32_t SingleDiff)
2855:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
2856:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Retrieve bits with position in register depending on parameter           */
2857:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* "SingleDiff".                                                            */
2858:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Parameter used with mask "ADC_SINGLEDIFF_CALIB_FACTOR_MASK" because      */
2859:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
2860:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CALFACT, (SingleDiff & ADC_SINGLEDIFF_CALIB_FACTOR_MASK)) >> ((S
2861:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
2862:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2863:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2864:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC resolution.
2865:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to reference manual for alignments formats
2866:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         dependencies to ADC resolutions.
2867:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
2868:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
2869:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2870:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
2871:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     RES            LL_ADC_SetResolution
2872:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
2873:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Resolution This parameter can be one of the following values:
2874:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2875:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2876:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2877:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2878:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
2879:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2880:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetResolution(ADC_TypeDef *ADCx, uint32_t Resolution)
ARM GAS  /tmp/ccJLHc1D.s 			page 52


2881:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
2882:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_RES, Resolution);
2883:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
2884:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2885:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2886:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC resolution.
2887:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to reference manual for alignments formats
2888:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         dependencies to ADC resolutions.
2889:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     RES            LL_ADC_GetResolution
2890:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
2891:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2892:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2893:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2894:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2895:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2896:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2897:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetResolution(ADC_TypeDef *ADCx)
2898:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
2899:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_RES));
2900:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
2901:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2902:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2903:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC conversion data alignment.
2904:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Refer to reference manual for alignments formats
2905:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         dependencies to ADC resolutions.
2906:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
2907:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
2908:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2909:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
2910:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     ALIGN          LL_ADC_SetDataAlignment
2911:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
2912:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  DataAlignment This parameter can be one of the following values:
2913:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_RIGHT
2914:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_LEFT
2915:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
2916:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2917:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetDataAlignment(ADC_TypeDef *ADCx, uint32_t DataAlignment)
2918:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
2919:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_ALIGN, DataAlignment);
2920:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
2921:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2922:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2923:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC conversion data alignment.
2924:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Refer to reference manual for alignments formats
2925:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         dependencies to ADC resolutions.
2926:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     ALIGN          LL_ADC_GetDataAlignment
2927:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
2928:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2929:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_RIGHT
2930:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_LEFT
2931:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2932:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetDataAlignment(ADC_TypeDef *ADCx)
2933:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
2934:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_ALIGN));
2935:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
2936:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2937:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
ARM GAS  /tmp/ccJLHc1D.s 			page 53


2938:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC low power mode.
2939:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Description of ADC low power modes:
2940:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC low power mode "auto wait": Dynamic low power mode,
2941:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           ADC conversions occurrences are limited to the minimum necessary
2942:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           in order to reduce power consumption.
2943:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           New ADC conversion starts only when the previous
2944:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           unitary conversion data (for ADC group regular)
2945:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           or previous sequence conversions data (for ADC group injected)
2946:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           has been retrieved by user software.
2947:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           In the meantime, ADC remains idle: does not performs any
2948:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           other conversion.
2949:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           This mode allows to automatically adapt the ADC conversions
2950:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           triggers to the speed of the software that reads the data.
2951:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           Moreover, this avoids risk of overrun for low frequency
2952:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           applications.
2953:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           How to use this low power mode:
2954:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - Do not use with interruption or DMA since these modes
2955:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             have to clear immediately the EOC flag to free the
2956:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             IRQ vector sequencer.
2957:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - Do use with polling: 1. Start conversion,
2958:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             2. Later on, when conversion data is needed: poll for end of
2959:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             conversion  to ensure that conversion is completed and
2960:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             retrieve ADC conversion data. This will trig another
2961:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             ADC conversion start.
2962:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC low power mode "auto power-off" (feature available on
2963:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           this device if parameter LL_ADC_LP_AUTOPOWEROFF is available):
2964:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           the ADC automatically powers-off after a conversion and
2965:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           automatically wakes up when a new conversion is triggered
2966:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           (with startup time between trigger and start of sampling).
2967:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           This feature can be combined with low power mode "auto wait".
2968:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   With ADC low power mode "auto wait", the ADC conversion data read
2969:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is corresponding to previous ADC conversion start, independently
2970:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         of delay during which ADC was idle.
2971:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Therefore, the ADC conversion data may be outdated: does not
2972:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         correspond to the current voltage level on the selected
2973:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC channel.
2974:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
2975:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
2976:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2977:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
2978:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     AUTDLY         LL_ADC_SetLowPowerMode
2979:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
2980:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  LowPowerMode This parameter can be one of the following values:
2981:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_MODE_NONE
2982:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT
2983:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
2984:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2985:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetLowPowerMode(ADC_TypeDef *ADCx, uint32_t LowPowerMode)
2986:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
2987:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_AUTDLY, LowPowerMode);
2988:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
2989:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2990:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2991:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC low power mode:
2992:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Description of ADC low power modes:
2993:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC low power mode "auto wait": Dynamic low power mode,
2994:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           ADC conversions occurrences are limited to the minimum necessary
ARM GAS  /tmp/ccJLHc1D.s 			page 54


2995:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           in order to reduce power consumption.
2996:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           New ADC conversion starts only when the previous
2997:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           unitary conversion data (for ADC group regular)
2998:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           or previous sequence conversions data (for ADC group injected)
2999:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           has been retrieved by user software.
3000:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           In the meantime, ADC remains idle: does not performs any
3001:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           other conversion.
3002:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           This mode allows to automatically adapt the ADC conversions
3003:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           triggers to the speed of the software that reads the data.
3004:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           Moreover, this avoids risk of overrun for low frequency
3005:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           applications.
3006:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           How to use this low power mode:
3007:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - Do not use with interruption or DMA since these modes
3008:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             have to clear immediately the EOC flag to free the
3009:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             IRQ vector sequencer.
3010:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - Do use with polling: 1. Start conversion,
3011:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             2. Later on, when conversion data is needed: poll for end of
3012:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             conversion  to ensure that conversion is completed and
3013:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             retrieve ADC conversion data. This will trig another
3014:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             ADC conversion start.
3015:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC low power mode "auto power-off" (feature available on
3016:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           this device if parameter LL_ADC_LP_AUTOPOWEROFF is available):
3017:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           the ADC automatically powers-off after a conversion and
3018:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           automatically wakes up when a new conversion is triggered
3019:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           (with startup time between trigger and start of sampling).
3020:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           This feature can be combined with low power mode "auto wait".
3021:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   With ADC low power mode "auto wait", the ADC conversion data read
3022:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is corresponding to previous ADC conversion start, independently
3023:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         of delay during which ADC was idle.
3024:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Therefore, the ADC conversion data may be outdated: does not
3025:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         correspond to the current voltage level on the selected
3026:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC channel.
3027:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     AUTDLY         LL_ADC_GetLowPowerMode
3028:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3029:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3030:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_MODE_NONE
3031:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT
3032:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3033:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetLowPowerMode(ADC_TypeDef *ADCx)
3034:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3035:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_AUTDLY));
3036:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3037:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3038:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3039:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC selected offset number 1, 2, 3 or 4.
3040:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This function set the 2 items of offset configuration:
3041:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC channel to which the offset programmed will be applied
3042:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           (independently of channel mapped on ADC group regular
3043:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           or group injected)
3044:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Offset level (offset to be subtracted from the raw
3045:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           converted data).
3046:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Caution: Offset format is dependent to ADC resolution:
3047:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         offset has to be left-aligned on bit 11, the LSB (right bits)
3048:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         are set to 0.
3049:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This function enables the offset, by default. It can be forced
3050:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         to disable state using function LL_ADC_SetOffsetState().
3051:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If a channel is mapped on several offsets numbers, only the offset
ARM GAS  /tmp/ccJLHc1D.s 			page 55


3052:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         with the lowest value is considered for the subtraction.
3053:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
3054:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
3055:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3056:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
3057:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On STM32G4, some fast channels are available: fast analog inputs
3058:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN1..5).
3059:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_CH     LL_ADC_SetOffset\n
3060:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR1     OFFSET1        LL_ADC_SetOffset\n
3061:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR1     OFFSET1_EN     LL_ADC_SetOffset\n
3062:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR2     OFFSET2_CH     LL_ADC_SetOffset\n
3063:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR2     OFFSET2        LL_ADC_SetOffset\n
3064:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR2     OFFSET2_EN     LL_ADC_SetOffset\n
3065:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR3     OFFSET3_CH     LL_ADC_SetOffset\n
3066:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR3     OFFSET3        LL_ADC_SetOffset\n
3067:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR3     OFFSET3_EN     LL_ADC_SetOffset\n
3068:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR4     OFFSET4_CH     LL_ADC_SetOffset\n
3069:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR4     OFFSET4        LL_ADC_SetOffset\n
3070:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR4     OFFSET4_EN     LL_ADC_SetOffset
3071:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3072:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3073:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3074:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3075:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3076:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3077:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
3078:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
3079:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1                 (8)
3080:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2                 (8)
3081:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3                 (8)
3082:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4                 (8)
3083:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5                 (8)
3084:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3085:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3086:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3087:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3088:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3089:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3090:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3091:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3092:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3093:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
3094:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
3095:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
3096:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
3097:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT           (7)
3098:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC1   (1)
3099:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC5   (5)
3100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT              (6)
3101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP1           (1)
3102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP2           (2)
3103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC2      (2)
3104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC3      (3)
3105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP4           (5)
3106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP5           (5)
3107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP6           (4)
3108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
ARM GAS  /tmp/ccJLHc1D.s 			page 56


3109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
3110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
3111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
3112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
3113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
3114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
3115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
3116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *          -  On this STM32 serie, all ADCx are not available on all devices. Refer to device dat
3117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (8) On STM32G4, fast channel allows: 2.5 (sampling) + 12.5 (conversion) = 15 ADC clock 
3118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Other channels are slow channels  allows: 6.5 (sampling) + 12.5 (conversion) = 19 A
3119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  OffsetLevel Value between Min_Data=0x000 and Max_Data=0xFFF
3120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
3121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOffset(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t Channel, uint32
3123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   register __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(*preg,
3127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
3128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN | (Channel & ADC_CHANNEL_ID_NUMBER_MASK) | OffsetLevel);
3129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get for the ADC selected offset number 1, 2, 3 or 4:
3133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Channel to which the offset programmed will be applied
3134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (independently of channel mapped on ADC group regular
3135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or group injected)
3136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Usage of the returned channel number:
3137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
3138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
3139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
3140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
3141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
3142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
3143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           as parameter for another function.
3144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - To get the channel number in decimal format:
3145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           process the returned value with the helper macro
3146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
3147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On STM32G4, some fast channels are available: fast analog inputs
3148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN1..5).
3149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_CH     LL_ADC_GetOffsetChannel\n
3150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR2     OFFSET2_CH     LL_ADC_GetOffsetChannel\n
3151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR3     OFFSET3_CH     LL_ADC_GetOffsetChannel\n
3152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR4     OFFSET4_CH     LL_ADC_GetOffsetChannel
3153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
3161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1                 (8)
3162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2                 (8)
3163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3                 (8)
3164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4                 (8)
3165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5                 (8)
ARM GAS  /tmp/ccJLHc1D.s 			page 57


3166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
3176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
3177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
3178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
3179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT           (7)
3180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC1   (1)
3181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC5   (5)
3182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT              (6)
3183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP1           (1)
3184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP2           (2)
3185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC2      (2)
3186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC3      (3)
3187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP4           (5)
3188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP5           (5)
3189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP6           (4)
3190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
3191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
3192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
3193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
3194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
3195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
3196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
3197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
3198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *          -  On this STM32 serie, all ADCx are not available on all devices. Refer to device dat
3199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (8) On STM32G4, fast channel allows: 2.5 (sampling) + 12.5 (conversion) = 15 ADC clock 
3200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Other channels are slow channels  allows: 6.5 (sampling) + 12.5 (conversion) = 19 A
3201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1, 2, 3, 4, 5, 7) For ADC channel read back from ADC register,
3202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                      comparison with internal channel parameter to be done
3203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                      using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
3204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetChannel(ADC_TypeDef *ADCx, uint32_t Offsety)
3206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   register const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t) READ_BIT(*preg, ADC_OFR1_OFFSET1_CH);
3210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get for the ADC selected offset number 1, 2, 3 or 4:
3214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Offset level (offset to be subtracted from the raw
3215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         converted data).
3216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Caution: Offset format is dependent to ADC resolution:
3217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         offset has to be left-aligned on bit 11, the LSB (right bits)
3218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         are set to 0.
3219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1        LL_ADC_GetOffsetLevel\n
3220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR2     OFFSET2        LL_ADC_GetOffsetLevel\n
3221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR3     OFFSET3        LL_ADC_GetOffsetLevel\n
3222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR4     OFFSET4        LL_ADC_GetOffsetLevel
ARM GAS  /tmp/ccJLHc1D.s 			page 58


3223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
3230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetLevel(ADC_TypeDef *ADCx, uint32_t Offsety)
3232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   register const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t) READ_BIT(*preg, ADC_OFR1_OFFSET1);
3236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set for the ADC selected offset number 1, 2, 3 or 4:
3240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         force offset state disable or enable
3241:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         without modifying offset channel or offset value.
3242:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This function should be needed only in case of offset to be
3243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         enabled-disabled dynamically, and should not be needed in other cases:
3244:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         function LL_ADC_SetOffset() automatically enables the offset.
3245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
3246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
3247:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
3249:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_EN     LL_ADC_SetOffsetState\n
3250:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR2     OFFSET2_EN     LL_ADC_SetOffsetState\n
3251:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR3     OFFSET3_EN     LL_ADC_SetOffsetState\n
3252:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR4     OFFSET4_EN     LL_ADC_SetOffsetState
3253:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3254:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3255:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3256:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3257:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3258:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3259:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  OffsetState This parameter can be one of the following values:
3260:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_DISABLE
3261:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_ENABLE
3262:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
3263:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOffsetState(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t OffsetStat
3265:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   register __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3267:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(*preg,
3269:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN,
3270:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              OffsetState);
3271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3272:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3273:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3274:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get for the ADC selected offset number 1, 2, 3 or 4:
3275:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         offset state disabled or enabled.
3276:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_EN     LL_ADC_GetOffsetState\n
3277:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR2     OFFSET2_EN     LL_ADC_GetOffsetState\n
3278:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR3     OFFSET3_EN     LL_ADC_GetOffsetState\n
3279:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR4     OFFSET4_EN     LL_ADC_GetOffsetState
ARM GAS  /tmp/ccJLHc1D.s 			page 59


3280:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3281:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3282:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_DISABLE
3288:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_ENABLE
3289:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3290:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetState(ADC_TypeDef *ADCx, uint32_t Offsety)
3291:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3292:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   register const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3293:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3294:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t) READ_BIT(*preg, ADC_OFR1_OFFSET1_EN);
3295:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3296:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3297:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3298:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set for the ADC selected offset number 1, 2, 3 or 4:
3299:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         choose offset sign.
3300:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
3301:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
3302:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3303:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
3304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll OFR1     OFFSETPOS      LL_ADC_SetOffsetSign\n
3305:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR2     OFFSETPOS      LL_ADC_SetOffsetSign\n
3306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR3     OFFSETPOS      LL_ADC_SetOffsetSign\n
3307:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR4     OFFSETPOS      LL_ADC_SetOffsetSign
3308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3309:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3310:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3311:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3312:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3313:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3314:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  OffsetSign This parameter can be one of the following values:
3315:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SIGN_NEGATIVE
3316:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SIGN_POSITIVE
3317:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
3318:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3319:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOffsetSign(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t OffsetSign)
3320:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3321:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   register __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3322:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3323:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(*preg,
3324:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_OFR1_OFFSETPOS,
3325:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              OffsetSign);
3326:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3327:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3328:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3329:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get for the ADC selected offset number 1, 2, 3 or 4:
3330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         offset sign if positive or negative.
3331:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll OFR1     OFFSETPOS      LL_ADC_GetOffsetSign\n
3332:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR2     OFFSETPOS      LL_ADC_GetOffsetSign\n
3333:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR3     OFFSETPOS      LL_ADC_GetOffsetSign\n
3334:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR4     OFFSETPOS      LL_ADC_GetOffsetSign
3335:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
ARM GAS  /tmp/ccJLHc1D.s 			page 60


3337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3340:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3341:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SIGN_NEGATIVE
3343:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SIGN_POSITIVE
3344:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3345:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetSign(ADC_TypeDef *ADCx, uint32_t Offsety)
3346:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3347:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   register const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3348:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3349:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t) READ_BIT(*preg, ADC_OFR1_OFFSETPOS);
3350:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3351:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3352:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3353:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set for the ADC selected offset number 1, 2, 3 or 4:
3354:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         choose offset saturation mode.
3355:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
3356:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
3357:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3358:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
3359:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll OFR1     SATEN          LL_ADC_SetOffsetSaturation\n
3360:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR2     SATEN          LL_ADC_SetOffsetSaturation\n
3361:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR3     SATEN          LL_ADC_SetOffsetSaturation\n
3362:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR4     SATEN          LL_ADC_SetOffsetSaturation
3363:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3364:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3365:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3366:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3368:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3369:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  OffsetSaturation This parameter can be one of the following values:
3370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SATURATION_ENABLE
3371:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SATURATION_DISABLE
3372:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
3373:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3374:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOffsetSaturation(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t Offse
3375:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3376:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   register __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3377:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(*preg,
3379:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_OFR1_SATEN,
3380:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              OffsetSaturation);
3381:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3382:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3384:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get for the ADC selected offset number 1, 2, 3 or 4:
3385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         offset saturation if enabled or disabled.
3386:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll OFR1     SATEN          LL_ADC_GetOffsetSaturation\n
3387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR2     SATEN          LL_ADC_GetOffsetSaturation\n
3388:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR3     SATEN          LL_ADC_GetOffsetSaturation\n
3389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR4     SATEN          LL_ADC_GetOffsetSaturation
3390:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3391:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3392:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3393:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
ARM GAS  /tmp/ccJLHc1D.s 			page 61


3394:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3395:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3396:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3397:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SATURATION_ENABLE
3398:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SATURATION_DISABLE
3399:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3400:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetSaturation(ADC_TypeDef *ADCx, uint32_t Offsety)
3401:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3402:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   register const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3403:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3404:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t) READ_BIT(*preg, ADC_OFR1_SATEN);
3405:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3406:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3407:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3408:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC gain compensation.
3409:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This function set the gain compensation coefficient
3410:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         that is applied to raw converted data using the formula:
3411:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           DATA = DATA(raw) * (gain compensation coef) / 4096
3412:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This function enables the gain compensation if given
3413:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         coefficient is above 0, otherwise it disables it.
3414:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Gain compensation when enabled is appied to all channels.
3415:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
3416:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
3417:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3418:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
3419:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll GCOMP    GCOMPCOEFF     LL_ADC_SetGainCompensation\n
3420:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR2    GCOMP          LL_ADC_SetGainCompensation
3421:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3422:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  GainCompensation This parameter can be:
3423:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         0           Gain compensation will be disabled and value set to 0
3424:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         1 -> 16393  Gain compensation will be enabled with specified value
3425:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
3426:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3427:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetGainCompensation(ADC_TypeDef *ADCx, uint32_t GainCompensation)
3428:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3429:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->GCOMP, ADC_GCOMP_GCOMPCOEFF, GainCompensation);
3430:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_GCOMP, ((GainCompensation == 0UL) ? 0UL : 1UL) << ADC_CFGR2_GCO
3431:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3432:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3433:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3434:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get the ADC gain compensation value
3435:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll GCOMP    GCOMPCOEFF     LL_ADC_GetGainCompensation\n
3436:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR2    GCOMP          LL_ADC_GetGainCompensation
3437:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3438:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be:
3439:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         0           Gain compensation is disabled
3440:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         1 -> 16393  Gain compensation is enabled with returned value
3441:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3442:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetGainCompensation(ADC_TypeDef *ADCx)
3443:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3444:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CFGR2, ADC_CFGR2_GCOMP) == ADC_CFGR2_GCOMP) ? READ_BIT(ADCx->GCOMP, ADC_G
3445:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3446:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3447:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined(ADC_SMPR1_SMPPLUS)
3448:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3449:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC sampling time common configuration impacting
3450:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         settings of sampling time channel wise.
ARM GAS  /tmp/ccJLHc1D.s 			page 62


3451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
3452:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
3453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
3455:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll SMPR1    SMPPLUS        LL_ADC_SetSamplingTimeCommonConfig
3456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  SamplingTimeCommonConfig This parameter can be one of the following values:
3458:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_DEFAULT
3459:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_3C5_REPL_2C5
3460:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
3461:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3462:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetSamplingTimeCommonConfig(ADC_TypeDef *ADCx, uint32_t SamplingTimeCom
3463:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3464:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->SMPR1, ADC_SMPR1_SMPPLUS, SamplingTimeCommonConfig);
3465:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3466:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3467:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3468:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC sampling time common configuration impacting
3469:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         settings of sampling time channel wise.
3470:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll SMPR1    SMPPLUS        LL_ADC_GetSamplingTimeCommonConfig
3471:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3472:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3473:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_DEFAULT
3474:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_3C5_REPL_2C5
3475:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3476:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetSamplingTimeCommonConfig(ADC_TypeDef *ADCx)
3477:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3478:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->SMPR1, ADC_SMPR1_SMPPLUS));
3479:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3480:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif /* ADC_SMPR1_SMPPLUS */
3481:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3482:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3483:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
3484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3485:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3486:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Group_Regular Configuration of ADC hierarchical scope: gr
3487:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
3488:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3489:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3490:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3491:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC group regular conversion trigger source:
3492:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
3493:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         external interrupt line).
3494:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 serie, setting trigger source to external trigger
3495:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         also set trigger polarity to rising edge
3496:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (default setting for compatibility with some ADC on other
3497:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         STM32 families having this setting set by HW default value).
3498:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         In case of need to modify trigger edge, use
3499:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetTriggerEdge().
3500:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
3501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         depends on timers availability on the selected device.
3502:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
3503:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
3504:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3505:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on group regular.
3506:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     EXTSEL         LL_ADC_REG_SetTriggerSource\n
3507:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR     EXTEN          LL_ADC_REG_SetTriggerSource
ARM GAS  /tmp/ccJLHc1D.s 			page 63


3508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3509:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  TriggerSource This parameter can be one of the following values:
3510:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_SOFTWARE
3511:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO
3512:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO2
3513:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH1        (1)
3514:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH2        (1)
3515:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH3
3516:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_TRGO
3517:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH1        (2)
3518:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH2        (1)
3519:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH3        (2)
3520:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_TRGO
3521:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_CH1        (2)
3522:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_CH4        (1)
3523:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_TRGO
3524:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_CH1        (2)
3525:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_CH4        (1)
3526:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM6_TRGO
3527:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM7_TRGO
3528:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO
3529:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO2
3530:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_CH1        (2)
3531:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM15_TRGO
3532:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM20_TRGO
3533:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM20_TRGO2
3534:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM20_CH1
3535:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM20_CH2       (1)
3536:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM20_CH3       (1)
3537:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG1
3538:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG2      (2)
3539:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG3
3540:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG4      (2)
3541:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG5
3542:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG6
3543:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG7
3544:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG8
3545:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG9
3546:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG10
3547:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE11     (1)
3548:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE2      (2)
3549:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_LPTIM_OUT
3550:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
3551:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4 serie, parameter not available on all ADC instances: ADC1, ADC2.\n
3552:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4 serie, parameter not available on all ADC instances: ADC3, ADC4, ADC5.
3553:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             On this STM32 serie, all ADCx are not available on all devices. Refer to device dat
3554:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
3555:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3556:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetTriggerSource(ADC_TypeDef *ADCx, uint32_t TriggerSource)
3557:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3558:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_EXTEN | ADC_CFGR_EXTSEL, TriggerSource);
3559:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3560:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3561:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3562:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger source:
3563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
3564:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         external interrupt line).
ARM GAS  /tmp/ccJLHc1D.s 			page 64


3565:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   To determine whether group regular trigger source is
3566:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         internal (SW start) or external, without detail
3567:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         of which peripheral is selected as external trigger,
3568:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (equivalent to
3569:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         "if(LL_ADC_REG_GetTriggerSource(ADC1) == LL_ADC_REG_TRIG_SOFTWARE)")
3570:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         use function @ref LL_ADC_REG_IsTriggerSourceSWStart.
3571:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
3572:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         depends on timers availability on the selected device.
3573:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     EXTSEL         LL_ADC_REG_GetTriggerSource\n
3574:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR     EXTEN          LL_ADC_REG_GetTriggerSource
3575:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3576:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3577:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_SOFTWARE
3578:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO
3579:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO2
3580:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH1        (1)
3581:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH2        (1)
3582:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH3
3583:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_TRGO
3584:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH1        (2)
3585:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH2        (1)
3586:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH3        (2)
3587:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_TRGO
3588:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_CH1        (2)
3589:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_CH4        (1)
3590:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_TRGO
3591:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_CH1        (2)
3592:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_CH4        (1)
3593:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM6_TRGO
3594:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM7_TRGO
3595:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO
3596:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO2
3597:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_CH1        (2)
3598:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM15_TRGO
3599:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM20_TRGO
3600:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM20_TRGO2
3601:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM20_CH1
3602:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM20_CH2       (1)
3603:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM20_CH3       (1)
3604:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG1
3605:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG2      (2)
3606:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG3
3607:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG4      (2)
3608:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG5
3609:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG6
3610:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG7
3611:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG8
3612:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG9
3613:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG10
3614:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE11     (1)
3615:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE2      (2)
3616:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_LPTIM_OUT
3617:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
3618:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4 serie, parameter not available on all ADC instances: ADC1, ADC2.\n
3619:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4 serie, parameter not available on all ADC instances: ADC3, ADC4, ADC5.
3620:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             On this STM32 serie, all ADCx are not available on all devices. Refer to device dat
3621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
ARM GAS  /tmp/ccJLHc1D.s 			page 65


3622:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetTriggerSource(ADC_TypeDef *ADCx)
3623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3624:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   register __IO uint32_t TriggerSource = READ_BIT(ADCx->CFGR, ADC_CFGR_EXTSEL | ADC_CFGR_EXTEN);
3625:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3626:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Value for shift of {0; 4; 8; 12} depending on value of bitfield          */
3627:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* corresponding to ADC_CFGR_EXTEN {0; 1; 2; 3}.                            */
3628:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   register uint32_t ShiftExten = ((TriggerSource & ADC_CFGR_EXTEN) >> (ADC_REG_TRIG_EXTEN_BITOFFSET
3629:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3630:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Set bitfield corresponding to ADC_CFGR_EXTEN and ADC_CFGR_EXTSEL         */
3631:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* to match with triggers literals definition.                              */
3632:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((TriggerSource
3633:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****            & (ADC_REG_TRIG_SOURCE_MASK >> ShiftExten) & ADC_CFGR_EXTSEL)
3634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****           | ((ADC_REG_TRIG_EDGE_MASK >> ShiftExten) & ADC_CFGR_EXTEN)
3635:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****          );
3636:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3637:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3638:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3639:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger source internal (SW start)
3640:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or external.
3641:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   In case of group regular trigger source set to external trigger,
3642:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         to determine which peripheral is selected as external trigger,
3643:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         use function @ref LL_ADC_REG_GetTriggerSource().
3644:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     EXTEN          LL_ADC_REG_IsTriggerSourceSWStart
3645:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3646:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value "0" if trigger source external trigger
3647:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Value "1" if trigger source SW start.
3648:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3649:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsTriggerSourceSWStart(ADC_TypeDef *ADCx)
3650:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CFGR, ADC_CFGR_EXTEN) == (LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR_EXTEN)) ? 1
3652:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3653:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3654:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3655:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC group regular conversion trigger polarity.
3656:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Applicable only for trigger source set to external trigger.
3657:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
3658:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
3659:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3660:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on group regular.
3661:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     EXTEN          LL_ADC_REG_SetTriggerEdge
3662:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3663:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ExternalTriggerEdge This parameter can be one of the following values:
3664:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISING
3665:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_FALLING
3666:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISINGFALLING
3667:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
3668:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3669:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetTriggerEdge(ADC_TypeDef *ADCx, uint32_t ExternalTriggerEdge)
3670:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3671:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_EXTEN, ExternalTriggerEdge);
3672:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3673:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3674:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3675:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger polarity.
3676:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Applicable only for trigger source set to external trigger.
3677:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     EXTEN          LL_ADC_REG_GetTriggerEdge
3678:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
ARM GAS  /tmp/ccJLHc1D.s 			page 66


3679:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3680:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISING
3681:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_FALLING
3682:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISINGFALLING
3683:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3684:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetTriggerEdge(ADC_TypeDef *ADCx)
3685:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3686:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_EXTEN));
3687:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3688:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3689:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3690:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC sampling mode.
3691:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This function set the ADC conversion sampling mode
3692:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This mode applies to regular group only.
3693:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Set sampling mode is appied to all conversion of regular group.
3694:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
3695:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
3696:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3697:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on group regular.
3698:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR2    BULB           LL_ADC_REG_SetSamplingMode\n
3699:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR2    SMPTRIG        LL_ADC_REG_SetSamplingMode
3700:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3701:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  SamplingMode This parameter can be one of the following values:
3702:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SAMPLING_MODE_NORMAL
3703:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SAMPLING_MODE_BULB
3704:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SAMPLING_MODE_TRIGGER_CONTROLED
3705:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
3706:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3707:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSamplingMode(ADC_TypeDef *ADCx, uint32_t SamplingMode)
3708:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3709:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_BULB | ADC_CFGR2_SMPTRIG, SamplingMode);
3710:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3711:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3712:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3713:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get the ADC sampling mode
3714:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR2    BULB           LL_ADC_REG_GetSamplingMode\n
3715:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR2    SMPTRIG        LL_ADC_REG_GetSamplingMode
3716:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3717:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3718:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SAMPLING_MODE_NORMAL
3719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SAMPLING_MODE_BULB
3720:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SAMPLING_MODE_TRIGGER_CONTROLED
3721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSamplingMode(ADC_TypeDef *ADCx)
3723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_BULB | ADC_CFGR2_SMPTRIG));
3725:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3728:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC group regular sequencer length and scan direction.
3729:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Description of ADC group regular sequencer features:
3730:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - For devices with sequencer fully configurable
3731:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerRanks()" available):
3732:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
3733:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           are configurable.
3734:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           This function performs configuration of:
3735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence.
ARM GAS  /tmp/ccJLHc1D.s 			page 67


3736:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
3737:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             scan direction is forward (from rank 1 to rank n).
3738:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           Sequencer ranks are selected using
3739:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerRanks()".
3740:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - For devices with sequencer not fully configurable
3741:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerChannels()" available):
3742:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
3743:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           are defined by channel number.
3744:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           This function performs configuration of:
3745:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence is
3746:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             defined by number of channels set in the sequence,
3747:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             rank of each channel is fixed by channel HW number.
3748:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
3749:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
3750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             scan direction is forward (from lowest channel number to
3751:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             highest channel number).
3752:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           Sequencer ranks are selected using
3753:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerChannels()".
3754:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
3755:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
3756:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
3757:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
3758:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3759:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on group regular.
3760:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll SQR1     L              LL_ADC_REG_SetSequencerLength
3761:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3762:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  SequencerNbRanks This parameter can be one of the following values:
3763:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DISABLE
3764:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS
3765:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS
3766:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS
3767:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS
3768:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS
3769:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS
3770:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS
3771:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_9RANKS
3772:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_10RANKS
3773:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_11RANKS
3774:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_12RANKS
3775:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_13RANKS
3776:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_14RANKS
3777:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_15RANKS
3778:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_16RANKS
3779:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
3780:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3781:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerLength(ADC_TypeDef *ADCx, uint32_t SequencerNbRanks)
3782:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3783:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->SQR1, ADC_SQR1_L, SequencerNbRanks);
3784:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3785:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3786:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3787:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group regular sequencer length and scan direction.
3788:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Description of ADC group regular sequencer features:
3789:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - For devices with sequencer fully configurable
3790:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerRanks()" available):
3791:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
3792:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           are configurable.
ARM GAS  /tmp/ccJLHc1D.s 			page 68


3793:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           This function retrieves:
3794:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence.
3795:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
3796:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             scan direction is forward (from rank 1 to rank n).
3797:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           Sequencer ranks are selected using
3798:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerRanks()".
3799:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - For devices with sequencer not fully configurable
3800:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerChannels()" available):
3801:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
3802:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           are defined by channel number.
3803:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           This function retrieves:
3804:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence is
3805:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             defined by number of channels set in the sequence,
3806:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             rank of each channel is fixed by channel HW number.
3807:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
3808:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
3809:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             scan direction is forward (from lowest channel number to
3810:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             highest channel number).
3811:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           Sequencer ranks are selected using
3812:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerChannels()".
3813:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
3814:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
3815:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll SQR1     L              LL_ADC_REG_GetSequencerLength
3816:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3817:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3818:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DISABLE
3819:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS
3820:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS
3821:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS
3822:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS
3823:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS
3824:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS
3825:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS
3826:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_9RANKS
3827:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_10RANKS
3828:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_11RANKS
3829:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_12RANKS
3830:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_13RANKS
3831:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_14RANKS
3832:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_15RANKS
3833:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_16RANKS
3834:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3835:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerLength(ADC_TypeDef *ADCx)
3836:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3837:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->SQR1, ADC_SQR1_L));
3838:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3839:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3840:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3841:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC group regular sequencer discontinuous mode:
3842:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
3843:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         number of ranks.
3844:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group regular
3845:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         continuous mode and sequencer discontinuous mode.
3846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   It is not possible to enable both ADC auto-injected mode
3847:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         and ADC group regular sequencer discontinuous mode.
3848:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
3849:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
ARM GAS  /tmp/ccJLHc1D.s 			page 69


3850:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3851:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on group regular.
3852:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     DISCEN         LL_ADC_REG_SetSequencerDiscont\n
3853:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR     DISCNUM        LL_ADC_REG_SetSequencerDiscont
3854:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3855:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  SeqDiscont This parameter can be one of the following values:
3856:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_DISABLE
3857:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_1RANK
3858:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_2RANKS
3859:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_3RANKS
3860:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_4RANKS
3861:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_5RANKS
3862:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_6RANKS
3863:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_7RANKS
3864:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_8RANKS
3865:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
3866:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3867:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerDiscont(ADC_TypeDef *ADCx, uint32_t SeqDiscont)
3868:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3869:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_DISCEN | ADC_CFGR_DISCNUM, SeqDiscont);
3870:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3871:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3872:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3873:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group regular sequencer discontinuous mode:
3874:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
3875:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         number of ranks.
3876:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     DISCEN         LL_ADC_REG_GetSequencerDiscont\n
3877:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR     DISCNUM        LL_ADC_REG_GetSequencerDiscont
3878:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3879:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3880:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_DISABLE
3881:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_1RANK
3882:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_2RANKS
3883:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_3RANKS
3884:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_4RANKS
3885:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_5RANKS
3886:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_6RANKS
3887:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_7RANKS
3888:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_8RANKS
3889:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3890:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerDiscont(ADC_TypeDef *ADCx)
3891:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3892:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_DISCEN | ADC_CFGR_DISCNUM));
3893:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3894:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3895:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3896:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC group regular sequence: channel on the selected
3897:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         scan sequence rank.
3898:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This function performs configuration of:
3899:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Channels ordering into each rank of scan sequence:
3900:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           whatever channel can be placed into whatever rank.
3901:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 serie, ADC group regular sequencer is
3902:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         fully configurable: sequencer length and each rank
3903:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         affectation to a channel are configurable.
3904:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to description of function @ref LL_ADC_REG_SetSequencerLength().
3905:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
3906:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
ARM GAS  /tmp/ccJLHc1D.s 			page 70


3907:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 serie, to measure internal channels (VrefInt,
3908:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
3909:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         enabled separately.
3910:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
3911:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
3912:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
3913:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3914:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on group regular.
3915:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll SQR1     SQ1            LL_ADC_REG_SetSequencerRanks\n
3916:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR1     SQ2            LL_ADC_REG_SetSequencerRanks\n
3917:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR1     SQ3            LL_ADC_REG_SetSequencerRanks\n
3918:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR1     SQ4            LL_ADC_REG_SetSequencerRanks\n
3919:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR2     SQ5            LL_ADC_REG_SetSequencerRanks\n
3920:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR2     SQ6            LL_ADC_REG_SetSequencerRanks\n
3921:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR2     SQ7            LL_ADC_REG_SetSequencerRanks\n
3922:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR2     SQ8            LL_ADC_REG_SetSequencerRanks\n
3923:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR2     SQ9            LL_ADC_REG_SetSequencerRanks\n
3924:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR3     SQ10           LL_ADC_REG_SetSequencerRanks\n
3925:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR3     SQ11           LL_ADC_REG_SetSequencerRanks\n
3926:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR3     SQ12           LL_ADC_REG_SetSequencerRanks\n
3927:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR3     SQ13           LL_ADC_REG_SetSequencerRanks\n
3928:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR3     SQ14           LL_ADC_REG_SetSequencerRanks\n
3929:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR4     SQ15           LL_ADC_REG_SetSequencerRanks\n
3930:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR4     SQ16           LL_ADC_REG_SetSequencerRanks
3931:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3932:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
3933:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_1
3934:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_2
3935:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_3
3936:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_4
3937:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_5
3938:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_6
3939:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_7
3940:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_8
3941:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_9
3942:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_10
3943:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_11
3944:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_12
3945:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_13
3946:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_14
3947:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_15
3948:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_16
3949:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
3950:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
3951:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1                 (8)
3952:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2                 (8)
3953:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3                 (8)
3954:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4                 (8)
3955:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5                 (8)
3956:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3957:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3958:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3959:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3960:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3961:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3962:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3963:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
ARM GAS  /tmp/ccJLHc1D.s 			page 71


3964:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3965:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
3966:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
3967:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
3968:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
3969:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT           (7)
3970:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC1   (1)
3971:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC5   (5)
3972:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT              (6)
3973:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP1           (1)
3974:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP2           (2)
3975:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC2      (2)
3976:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC3      (3)
3977:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP4           (5)
3978:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP5           (5)
3979:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP6           (4)
3980:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
3981:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
3982:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
3983:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
3984:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
3985:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
3986:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
3987:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
3988:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *          -  On this STM32 serie, all ADCx are not available on all devices. Refer to device dat
3989:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (8) On STM32G4, fast channel allows: 2.5 (sampling) + 12.5 (conversion) = 15 ADC clock 
3990:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Other channels are slow channels  allows: 6.5 (sampling) + 12.5 (conversion) = 19 A
3991:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
3992:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3993:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank, uint32_t Channe
3994:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3995:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Set bits with content of parameter "Channel" with bits position          */
3996:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* in register and register position depending on parameter "Rank".         */
3997:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Parameters "Rank" and "Channel" are used with masks because containing   */
3998:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
3999:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   register __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SQR1, ((Rank & ADC_REG_SQRX_REGOFFSET_M
4000:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4001:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(*preg,
4002:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
4003:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ((Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) << (Ra
4004:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4005:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4006:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4007:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group regular sequence: channel on the selected
4008:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         scan sequence rank.
4009:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 serie, ADC group regular sequencer is
4010:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         fully configurable: sequencer length and each rank
4011:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         affectation to a channel are configurable.
4012:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to description of function @ref LL_ADC_REG_SetSequencerLength().
4013:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
4014:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
4015:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Usage of the returned channel number:
4016:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
4017:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
4018:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
4019:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
4020:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
ARM GAS  /tmp/ccJLHc1D.s 			page 72


4021:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
4022:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           as parameter for another function.
4023:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - To get the channel number in decimal format:
4024:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           process the returned value with the helper macro
4025:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
4026:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll SQR1     SQ1            LL_ADC_REG_GetSequencerRanks\n
4027:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR1     SQ2            LL_ADC_REG_GetSequencerRanks\n
4028:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR1     SQ3            LL_ADC_REG_GetSequencerRanks\n
4029:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR1     SQ4            LL_ADC_REG_GetSequencerRanks\n
4030:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR2     SQ5            LL_ADC_REG_GetSequencerRanks\n
4031:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR2     SQ6            LL_ADC_REG_GetSequencerRanks\n
4032:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR2     SQ7            LL_ADC_REG_GetSequencerRanks\n
4033:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR2     SQ8            LL_ADC_REG_GetSequencerRanks\n
4034:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR2     SQ9            LL_ADC_REG_GetSequencerRanks\n
4035:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR3     SQ10           LL_ADC_REG_GetSequencerRanks\n
4036:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR3     SQ11           LL_ADC_REG_GetSequencerRanks\n
4037:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR3     SQ12           LL_ADC_REG_GetSequencerRanks\n
4038:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR3     SQ13           LL_ADC_REG_GetSequencerRanks\n
4039:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR3     SQ14           LL_ADC_REG_GetSequencerRanks\n
4040:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR4     SQ15           LL_ADC_REG_GetSequencerRanks\n
4041:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR4     SQ16           LL_ADC_REG_GetSequencerRanks
4042:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4043:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
4044:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_1
4045:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_2
4046:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_3
4047:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_4
4048:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_5
4049:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_6
4050:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_7
4051:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_8
4052:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_9
4053:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_10
4054:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_11
4055:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_12
4056:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_13
4057:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_14
4058:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_15
4059:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_16
4060:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4061:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4062:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1                 (8)
4063:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2                 (8)
4064:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3                 (8)
4065:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4                 (8)
4066:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5                 (8)
4067:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4068:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4069:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4070:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4071:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4072:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4073:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4074:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4075:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4076:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4077:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
ARM GAS  /tmp/ccJLHc1D.s 			page 73


4078:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4079:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4080:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT           (7)
4081:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC1   (1)
4082:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC5   (5)
4083:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT              (6)
4084:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP1           (1)
4085:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP2           (2)
4086:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC2      (2)
4087:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC3      (3)
4088:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP4           (5)
4089:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP5           (5)
4090:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP6           (4)
4091:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
4092:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
4093:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
4094:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
4095:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
4096:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
4097:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
4098:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
4099:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *          -  On this STM32 serie, all ADCx are not available on all devices. Refer to device dat
4100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (8) On STM32G4, fast channel allows: 2.5 (sampling) + 12.5 (conversion) = 15 ADC clock 
4101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Other channels are slow channels  allows: 6.5 (sampling) + 12.5 (conversion) = 19 A
4102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1, 2, 3, 4, 5, 7) For ADC channel read back from ADC register,
4103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                      comparison with internal channel parameter to be done
4104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                      using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
4105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank)
4107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   register const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SQR1, ((Rank & ADC_REG_SQRX_REGOF
4109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)((READ_BIT(*preg,
4111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                               ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 << (Rank & ADC_REG_RANK_ID_SQRX_MA
4112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                      >> (Rank & ADC_REG_RANK_ID_SQRX_MASK)) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS
4113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                    );
4114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC continuous conversion mode on ADC group regular.
4118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Description of ADC continuous conversion mode:
4119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - single mode: one conversion per trigger
4120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - continuous mode: after the first trigger, following
4121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           conversions launched successively automatically.
4122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group regular
4123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         continuous mode and sequencer discontinuous mode.
4124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
4125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
4126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on group regular.
4128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     CONT           LL_ADC_REG_SetContinuousMode
4129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Continuous This parameter can be one of the following values:
4131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_SINGLE
4132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_CONTINUOUS
4133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
4134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
ARM GAS  /tmp/ccJLHc1D.s 			page 74


4135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetContinuousMode(ADC_TypeDef *ADCx, uint32_t Continuous)
4136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_CONT, Continuous);
4138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC continuous conversion mode on ADC group regular.
4142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Description of ADC continuous conversion mode:
4143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - single mode: one conversion per trigger
4144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - continuous mode: after the first trigger, following
4145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           conversions launched successively automatically.
4146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     CONT           LL_ADC_REG_GetContinuousMode
4147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_SINGLE
4150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_CONTINUOUS
4151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetContinuousMode(ADC_TypeDef *ADCx)
4153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_CONT));
4155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC group regular conversion data transfer: no transfer or
4159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         transfer by DMA, and DMA requests mode.
4160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If transfer by DMA selected, specifies the DMA requests
4161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         mode:
4162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
4163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           when number of DMA data transfers (number of
4164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           ADC conversions) is reached.
4165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
4166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
4167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
4168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           ADC conversions).
4169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
4170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
4171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         mode non-circular:
4172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
4173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
4174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *        (overrun flag and interruption if enabled).
4175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   For devices with several ADC instances: ADC multimode DMA
4176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         settings are available using function @ref LL_ADC_SetMultiDMATransfer().
4177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   To configure DMA source address (peripheral address),
4178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         use function @ref LL_ADC_DMA_GetRegAddr().
4179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
4180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
4181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
4183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     DMAEN          LL_ADC_REG_SetDMATransfer\n
4184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR     DMACFG         LL_ADC_REG_SetDMATransfer
4185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  DMATransfer This parameter can be one of the following values:
4187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_NONE
4188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_LIMITED
4189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_UNLIMITED
4190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
4191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
ARM GAS  /tmp/ccJLHc1D.s 			page 75


4192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetDMATransfer(ADC_TypeDef *ADCx, uint32_t DMATransfer)
4193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_DMAEN | ADC_CFGR_DMACFG, DMATransfer);
4195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data transfer: no transfer or
4199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         transfer by DMA, and DMA requests mode.
4200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If transfer by DMA selected, specifies the DMA requests
4201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         mode:
4202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
4203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           when number of DMA data transfers (number of
4204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           ADC conversions) is reached.
4205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
4206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
4207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
4208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           ADC conversions).
4209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
4210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
4211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         mode non-circular:
4212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
4213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
4214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (overrun flag and interruption if enabled).
4215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   For devices with several ADC instances: ADC multimode DMA
4216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         settings are available using function @ref LL_ADC_GetMultiDMATransfer().
4217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   To configure DMA source address (peripheral address),
4218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         use function @ref LL_ADC_DMA_GetRegAddr().
4219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     DMAEN          LL_ADC_REG_GetDMATransfer\n
4220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR     DMACFG         LL_ADC_REG_GetDMATransfer
4221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_NONE
4224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_LIMITED
4225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_UNLIMITED
4226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetDMATransfer(ADC_TypeDef *ADCx)
4228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_DMAEN | ADC_CFGR_DMACFG));
4230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC group regular behavior in case of overrun:
4234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         data preserved or overwritten.
4235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Compatibility with devices without feature overrun:
4236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         other devices without this feature have a behavior
4237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         equivalent to data overwritten.
4238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         The default setting of overrun is data preserved.
4239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Therefore, for compatibility with all devices, parameter
4240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         overrun should be set to data overwritten.
4241:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
4242:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
4243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4244:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on group regular.
4245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     OVRMOD         LL_ADC_REG_SetOverrun
4246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4247:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Overrun This parameter can be one of the following values:
4248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_PRESERVED
ARM GAS  /tmp/ccJLHc1D.s 			page 76


4249:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_OVERWRITTEN
4250:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
4251:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4252:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetOverrun(ADC_TypeDef *ADCx, uint32_t Overrun)
4253:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4254:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_OVRMOD, Overrun);
4255:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4256:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4257:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4258:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group regular behavior in case of overrun:
4259:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         data preserved or overwritten.
4260:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     OVRMOD         LL_ADC_REG_GetOverrun
4261:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4262:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4263:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_PRESERVED
4264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_OVERWRITTEN
4265:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetOverrun(ADC_TypeDef *ADCx)
4267:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_OVRMOD));
4269:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4270:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4272:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
4273:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4274:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4275:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Group_Injected Configuration of ADC hierarchical scope: g
4276:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
4277:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4278:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4279:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4280:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC group injected conversion trigger source:
4281:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
4282:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         external interrupt line).
4283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 serie, setting trigger source to external trigger
4284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         also set trigger polarity to rising edge
4285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (default setting for compatibility with some ADC on other
4286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         STM32 families having this setting set by HW default value).
4287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         In case of need to modify trigger edge, use
4288:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         function @ref LL_ADC_INJ_SetTriggerEdge().
4289:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
4290:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         depends on timers availability on the selected device.
4291:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
4292:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
4293:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
4294:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on going on either groups regular or injected.
4295:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll JSQR     JEXTSEL        LL_ADC_INJ_SetTriggerSource\n
4296:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JSQR     JEXTEN         LL_ADC_INJ_SetTriggerSource
4297:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4298:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  TriggerSource This parameter can be one of the following values:
4299:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_SOFTWARE
4300:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO
4301:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2
4302:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_CH3         (2)
4303:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_CH4
4304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_TRGO
4305:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_CH1         (1)
ARM GAS  /tmp/ccJLHc1D.s 			page 77


4306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_TRGO
4307:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH1         (1)
4308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH3         (1)
4309:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH4         (1)
4310:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_TRGO
4311:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_CH3         (2)
4312:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_CH4         (2)
4313:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM6_TRGO
4314:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM7_TRGO
4315:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO
4316:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO2
4317:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH2         (2)
4318:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH4
4319:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM15_TRGO
4320:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM16_CH1        (1)
4321:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM20_TRGO
4322:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM20_TRGO2
4323:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM20_CH2        (2)
4324:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM20_CH4        (1)
4325:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG1       (2)
4326:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG2
4327:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG3       (2)
4328:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG4
4329:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG5
4330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG6
4331:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG7
4332:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG8
4333:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG9
4334:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG10
4335:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_EXTI_LINE3       (2)
4336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_EXTI_LINE15      (1)
4337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_LPTIM_OUT
4338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
4339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4 serie, parameter not available on all ADC instances: ADC1, ADC2.\n
4340:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4 serie, parameter not available on all ADC instances: ADC3, ADC4, ADC5.
4341:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             On this STM32 serie, all ADCx are not available on all devices. Refer to device dat
4342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
4343:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4344:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetTriggerSource(ADC_TypeDef *ADCx, uint32_t TriggerSource)
4345:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4346:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR, ADC_JSQR_JEXTSEL | ADC_JSQR_JEXTEN, TriggerSource);
4347:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4348:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4349:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4350:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger source:
4351:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
4352:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         external interrupt line).
4353:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   To determine whether group injected trigger source is
4354:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         internal (SW start) or external, without detail
4355:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         of which peripheral is selected as external trigger,
4356:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (equivalent to
4357:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         "if(LL_ADC_INJ_GetTriggerSource(ADC1) == LL_ADC_INJ_TRIG_SOFTWARE)")
4358:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         use function @ref LL_ADC_INJ_IsTriggerSourceSWStart.
4359:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
4360:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         depends on timers availability on the selected device.
4361:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll JSQR     JEXTSEL        LL_ADC_INJ_GetTriggerSource\n
4362:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JSQR     JEXTEN         LL_ADC_INJ_GetTriggerSource
ARM GAS  /tmp/ccJLHc1D.s 			page 78


4363:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4364:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4365:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_SOFTWARE
4366:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO
4367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2
4368:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_CH3         (2)
4369:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_CH4
4370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_TRGO
4371:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_CH1         (1)
4372:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_TRGO
4373:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH1         (1)
4374:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH3         (1)
4375:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH4         (1)
4376:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_TRGO
4377:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_CH3         (2)
4378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_CH4         (2)
4379:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM6_TRGO
4380:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM7_TRGO
4381:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO
4382:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO2
4383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH2         (2)
4384:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH4
4385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM15_TRGO
4386:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM16_CH1        (1)
4387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM20_TRGO
4388:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM20_TRGO2
4389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM20_CH2        (2)
4390:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM20_CH4        (1)
4391:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG1       (2)
4392:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG2
4393:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG3       (2)
4394:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG4
4395:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG5
4396:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG6
4397:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG7
4398:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG8
4399:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG9
4400:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG10
4401:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_EXTI_LINE3       (2)
4402:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_EXTI_LINE15      (1)
4403:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_LPTIM_OUT
4404:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
4405:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4 serie, parameter not available on all ADC instances: ADC1, ADC2.\n
4406:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4 serie, parameter not available on all ADC instances: ADC3, ADC4, ADC5.
4407:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             On this STM32 serie, all ADCx are not available on all devices. Refer to device dat
4408:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4409:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetTriggerSource(ADC_TypeDef *ADCx)
4410:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4411:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   register __IO uint32_t TriggerSource = READ_BIT(ADCx->JSQR, ADC_JSQR_JEXTSEL | ADC_JSQR_JEXTEN);
4412:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4413:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Value for shift of {0; 4; 8; 12} depending on value of bitfield          */
4414:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* corresponding to ADC_JSQR_JEXTEN {0; 1; 2; 3}.                           */
4415:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   register uint32_t ShiftJexten = ((TriggerSource & ADC_JSQR_JEXTEN) >> (ADC_INJ_TRIG_EXTEN_BITOFFS
4416:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4417:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Set bitfield corresponding to ADC_JSQR_JEXTEN and ADC_JSQR_JEXTSEL       */
4418:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* to match with triggers literals definition.                              */
4419:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((TriggerSource
ARM GAS  /tmp/ccJLHc1D.s 			page 79


4420:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****            & (ADC_INJ_TRIG_SOURCE_MASK >> ShiftJexten) & ADC_JSQR_JEXTSEL)
4421:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****           | ((ADC_INJ_TRIG_EDGE_MASK >> ShiftJexten) & ADC_JSQR_JEXTEN)
4422:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****          );
4423:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4424:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4425:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4426:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger source internal (SW start)
4427:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****             or external
4428:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   In case of group injected trigger source set to external trigger,
4429:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         to determine which peripheral is selected as external trigger,
4430:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         use function @ref LL_ADC_INJ_GetTriggerSource.
4431:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll JSQR     JEXTEN         LL_ADC_INJ_IsTriggerSourceSWStart
4432:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4433:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value "0" if trigger source external trigger
4434:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Value "1" if trigger source SW start.
4435:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4436:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_IsTriggerSourceSWStart(ADC_TypeDef *ADCx)
4437:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4438:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->JSQR, ADC_JSQR_JEXTEN) == (LL_ADC_INJ_TRIG_SOFTWARE & ADC_JSQR_JEXTEN)) ?
4439:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4440:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4441:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4442:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC group injected conversion trigger polarity.
4443:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Applicable only for trigger source set to external trigger.
4444:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
4445:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
4446:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
4447:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on going on either groups regular or injected.
4448:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll JSQR     JEXTEN         LL_ADC_INJ_SetTriggerEdge
4449:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4450:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ExternalTriggerEdge This parameter can be one of the following values:
4451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISING
4452:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_FALLING
4453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISINGFALLING
4454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
4455:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetTriggerEdge(ADC_TypeDef *ADCx, uint32_t ExternalTriggerEdge)
4457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4458:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR, ADC_JSQR_JEXTEN, ExternalTriggerEdge);
4459:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4460:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4461:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4462:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger polarity.
4463:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Applicable only for trigger source set to external trigger.
4464:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll JSQR     JEXTEN         LL_ADC_INJ_GetTriggerEdge
4465:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4466:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4467:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISING
4468:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_FALLING
4469:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISINGFALLING
4470:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4471:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetTriggerEdge(ADC_TypeDef *ADCx)
4472:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4473:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->JSQR, ADC_JSQR_JEXTEN));
4474:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4475:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4476:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
ARM GAS  /tmp/ccJLHc1D.s 			page 80


4477:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC group injected sequencer length and scan direction.
4478:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This function performs configuration of:
4479:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Sequence length: Number of ranks in the scan sequence.
4480:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Sequence direction: Unless specified in parameters, sequencer
4481:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           scan direction is forward (from rank 1 to rank n).
4482:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
4483:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
4484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
4485:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
4486:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
4487:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on going on either groups regular or injected.
4488:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll JSQR     JL             LL_ADC_INJ_SetSequencerLength
4489:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4490:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  SequencerNbRanks This parameter can be one of the following values:
4491:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_DISABLE
4492:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS
4493:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS
4494:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS
4495:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
4496:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4497:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetSequencerLength(ADC_TypeDef *ADCx, uint32_t SequencerNbRanks)
4498:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4499:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR, ADC_JSQR_JL, SequencerNbRanks);
4500:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4502:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4503:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group injected sequencer length and scan direction.
4504:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This function retrieves:
4505:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Sequence length: Number of ranks in the scan sequence.
4506:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Sequence direction: Unless specified in parameters, sequencer
4507:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           scan direction is forward (from rank 1 to rank n).
4508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
4509:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
4510:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll JSQR     JL             LL_ADC_INJ_GetSequencerLength
4511:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4512:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4513:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_DISABLE
4514:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS
4515:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS
4516:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS
4517:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4518:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetSequencerLength(ADC_TypeDef *ADCx)
4519:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4520:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->JSQR, ADC_JSQR_JL));
4521:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4522:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4523:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4524:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC group injected sequencer discontinuous mode:
4525:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
4526:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         number of ranks.
4527:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group injected
4528:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         auto-injected mode and sequencer discontinuous mode.
4529:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     JDISCEN        LL_ADC_INJ_SetSequencerDiscont
4530:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4531:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  SeqDiscont This parameter can be one of the following values:
4532:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_DISABLE
4533:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_1RANK
ARM GAS  /tmp/ccJLHc1D.s 			page 81


4534:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
4535:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4536:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetSequencerDiscont(ADC_TypeDef *ADCx, uint32_t SeqDiscont)
4537:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4538:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_JDISCEN, SeqDiscont);
4539:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4540:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4541:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4542:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group injected sequencer discontinuous mode:
4543:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
4544:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         number of ranks.
4545:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     JDISCEN        LL_ADC_INJ_GetSequencerDiscont
4546:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4547:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4548:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_DISABLE
4549:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_1RANK
4550:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4551:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetSequencerDiscont(ADC_TypeDef *ADCx)
4552:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4553:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_JDISCEN));
4554:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4555:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4556:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4557:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC group injected sequence: channel on the selected
4558:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         sequence rank.
4559:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
4560:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
4561:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 serie, to measure internal channels (VrefInt,
4562:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
4563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         enabled separately.
4564:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
4565:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On STM32G4, some fast channels are available: fast analog inputs
4566:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN1..5).
4567:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
4568:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
4569:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
4570:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on going on either groups regular or injected.
4571:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll JSQR     JSQ1           LL_ADC_INJ_SetSequencerRanks\n
4572:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JSQR     JSQ2           LL_ADC_INJ_SetSequencerRanks\n
4573:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JSQR     JSQ3           LL_ADC_INJ_SetSequencerRanks\n
4574:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JSQR     JSQ4           LL_ADC_INJ_SetSequencerRanks
4575:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4576:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
4577:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
4578:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
4579:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
4580:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
4581:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
4582:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4583:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1                 (8)
4584:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2                 (8)
4585:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3                 (8)
4586:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4                 (8)
4587:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5                 (8)
4588:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4589:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4590:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
ARM GAS  /tmp/ccJLHc1D.s 			page 82


4591:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4592:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4593:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4594:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4595:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4596:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4597:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4598:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4599:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4600:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4601:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT           (7)
4602:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC1   (1)
4603:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC5   (5)
4604:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT              (6)
4605:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP1           (1)
4606:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP2           (2)
4607:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC2      (2)
4608:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC3      (3)
4609:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP4           (5)
4610:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP5           (5)
4611:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP6           (4)
4612:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
4613:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
4614:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
4615:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
4616:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
4617:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
4618:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
4619:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
4620:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *          -  On this STM32 serie, all ADCx are not available on all devices. Refer to device dat
4621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (8) On STM32G4, fast channel allows: 2.5 (sampling) + 12.5 (conversion) = 15 ADC clock 
4622:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Other channels are slow channels  allows: 6.5 (sampling) + 12.5 (conversion) = 19 A
4623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
4624:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4625:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank, uint32_t Channe
4626:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4627:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Set bits with content of parameter "Channel" with bits position          */
4628:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* in register depending on parameter "Rank".                               */
4629:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Parameters "Rank" and "Channel" are used with masks because containing   */
4630:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
4631:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR,
4632:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              (ADC_CHANNEL_ID_NUMBER_MASK >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) << (Rank & ADC_INJ
4633:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ((Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) << (Ra
4634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4635:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4636:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4637:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group injected sequence: channel on the selected
4638:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         sequence rank.
4639:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
4640:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
4641:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Usage of the returned channel number:
4642:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
4643:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
4644:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
4645:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
4646:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
4647:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
ARM GAS  /tmp/ccJLHc1D.s 			page 83


4648:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           as parameter for another function.
4649:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - To get the channel number in decimal format:
4650:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           process the returned value with the helper macro
4651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
4652:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll JSQR     JSQ1           LL_ADC_INJ_GetSequencerRanks\n
4653:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JSQR     JSQ2           LL_ADC_INJ_GetSequencerRanks\n
4654:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JSQR     JSQ3           LL_ADC_INJ_GetSequencerRanks\n
4655:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JSQR     JSQ4           LL_ADC_INJ_GetSequencerRanks
4656:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4657:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
4658:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
4659:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
4660:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
4661:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
4662:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4663:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4664:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1                 (8)
4665:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2                 (8)
4666:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3                 (8)
4667:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4                 (8)
4668:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5                 (8)
4669:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4670:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4671:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4672:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4673:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4674:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4675:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4676:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4677:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4678:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4679:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4680:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4681:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4682:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT           (7)
4683:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC1   (1)
4684:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC5   (5)
4685:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT              (6)
4686:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP1           (1)
4687:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP2           (2)
4688:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC2      (2)
4689:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC3      (3)
4690:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP4           (5)
4691:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP5           (5)
4692:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP6           (4)
4693:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
4694:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
4695:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
4696:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
4697:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
4698:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
4699:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
4700:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
4701:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *          -  On this STM32 serie, all ADCx are not available on all devices. Refer to device dat
4702:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (8) On STM32G4, fast channel allows: 2.5 (sampling) + 12.5 (conversion) = 15 ADC clock 
4703:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Other channels are slow channels  allows: 6.5 (sampling) + 12.5 (conversion) = 19 A
4704:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1, 2, 3, 4, 5, 7) For ADC channel read back from ADC register,
ARM GAS  /tmp/ccJLHc1D.s 			page 84


4705:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                      comparison with internal channel parameter to be done
4706:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                      using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
4707:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4708:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank)
4709:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4710:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)((READ_BIT(ADCx->JSQR,
4711:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                               (ADC_CHANNEL_ID_NUMBER_MASK >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) <
4712:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                      >> (Rank & ADC_INJ_RANK_ID_JSQR_MASK)) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS
4713:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                    );
4714:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4715:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4716:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4717:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC group injected conversion trigger:
4718:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         independent or from ADC group regular.
4719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This mode can be used to extend number of data registers
4720:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         updated after one ADC conversion trigger and with data
4721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         permanently kept (not erased by successive conversions of scan of
4722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC sequencer ranks), up to 5 data registers:
4723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         1 data register on ADC group regular, 4 data registers
4724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on ADC group injected.
4725:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If ADC group injected injected trigger source is set to an
4726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         external trigger, this feature must be must be set to
4727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         independent trigger.
4728:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC group injected automatic trigger is compliant only with
4729:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         group injected trigger source set to SW start, without any
4730:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         further action on  ADC group injected conversion start or stop:
4731:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         in this case, ADC group injected is controlled only
4732:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         from ADC group regular.
4733:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group injected
4734:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         auto-injected mode and sequencer discontinuous mode.
4735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
4736:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
4737:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4738:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
4739:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     JAUTO          LL_ADC_INJ_SetTrigAuto
4740:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4741:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  TrigAuto This parameter can be one of the following values:
4742:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_INDEPENDENT
4743:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_FROM_GRP_REGULAR
4744:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
4745:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4746:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetTrigAuto(ADC_TypeDef *ADCx, uint32_t TrigAuto)
4747:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4748:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_JAUTO, TrigAuto);
4749:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4751:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4752:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger:
4753:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         independent or from ADC group regular.
4754:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     JAUTO          LL_ADC_INJ_GetTrigAuto
4755:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4756:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4757:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_INDEPENDENT
4758:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_FROM_GRP_REGULAR
4759:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4760:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetTrigAuto(ADC_TypeDef *ADCx)
4761:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
ARM GAS  /tmp/ccJLHc1D.s 			page 85


4762:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_JAUTO));
4763:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4764:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4765:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4766:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC group injected contexts queue mode.
4767:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   A context is a setting of group injected sequencer:
4768:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - group injected trigger
4769:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - sequencer length
4770:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - sequencer ranks
4771:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         If contexts queue is disabled:
4772:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - only 1 sequence can be configured
4773:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           and is active perpetually.
4774:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         If contexts queue is enabled:
4775:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - up to 2 contexts can be queued
4776:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           and are checked in and out as a FIFO stack (first-in, first-out).
4777:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - If a new context is set when queues is full, error is triggered
4778:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           by interruption "Injected Queue Overflow".
4779:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Two behaviors are possible when all contexts have been processed:
4780:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           the contexts queue can maintain the last context active perpetually
4781:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           or can be empty and injected group triggers are disabled.
4782:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Triggers can be only external (not internal SW start)
4783:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Caution: The sequence must be fully configured in one time
4784:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           (one write of register JSQR makes a check-in of a new context
4785:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           into the queue).
4786:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           Therefore functions to set separately injected trigger and
4787:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           sequencer channels cannot be used, register JSQR must be set
4788:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           using function @ref LL_ADC_INJ_ConfigQueueContext().
4789:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This parameter can be modified only when no conversion is on going
4790:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
4791:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   A modification of the context mode (bit JQDIS) causes the contexts
4792:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         queue to be flushed and the register JSQR is cleared.
4793:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
4794:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
4795:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4796:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
4797:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     JQM            LL_ADC_INJ_SetQueueMode\n
4798:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR     JQDIS          LL_ADC_INJ_SetQueueMode
4799:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4800:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  QueueMode This parameter can be one of the following values:
4801:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_DISABLE
4802:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_LAST_ACTIVE
4803:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_END_EMPTY
4804:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
4805:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4806:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetQueueMode(ADC_TypeDef *ADCx, uint32_t QueueMode)
4807:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4808:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_JQM | ADC_CFGR_JQDIS, QueueMode);
4809:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4810:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4811:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4812:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group injected context queue mode.
4813:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     JQM            LL_ADC_INJ_GetQueueMode\n
4814:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR     JQDIS          LL_ADC_INJ_GetQueueMode
4815:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4816:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4817:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_DISABLE
4818:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_LAST_ACTIVE
ARM GAS  /tmp/ccJLHc1D.s 			page 86


4819:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_END_EMPTY
4820:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4821:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetQueueMode(ADC_TypeDef *ADCx)
4822:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4823:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_JQM | ADC_CFGR_JQDIS));
4824:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4825:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4826:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4827:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set one context on ADC group injected that will be checked in
4828:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         contexts queue.
4829:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   A context is a setting of group injected sequencer:
4830:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - group injected trigger
4831:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - sequencer length
4832:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - sequencer ranks
4833:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         This function is intended to be used when contexts queue is enabled,
4834:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         because the sequence must be fully configured in one time
4835:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (functions to set separately injected trigger and sequencer channels
4836:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         cannot be used):
4837:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to function @ref LL_ADC_INJ_SetQueueMode().
4838:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   In the contexts queue, only the active context can be read.
4839:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         The parameters of this function can be read using functions:
4840:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_GetTriggerSource()
4841:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_GetTriggerEdge()
4842:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_GetSequencerRanks()
4843:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 serie, to measure internal channels (VrefInt,
4844:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
4845:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         enabled separately.
4846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
4847:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On STM32G4, some fast channels are available: fast analog inputs
4848:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN1..5).
4849:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
4850:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
4851:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
4852:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on going on either groups regular or injected.
4853:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll JSQR     JEXTSEL        LL_ADC_INJ_ConfigQueueContext\n
4854:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JSQR     JEXTEN         LL_ADC_INJ_ConfigQueueContext\n
4855:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JSQR     JL             LL_ADC_INJ_ConfigQueueContext\n
4856:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JSQR     JSQ1           LL_ADC_INJ_ConfigQueueContext\n
4857:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JSQR     JSQ2           LL_ADC_INJ_ConfigQueueContext\n
4858:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JSQR     JSQ3           LL_ADC_INJ_ConfigQueueContext\n
4859:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JSQR     JSQ4           LL_ADC_INJ_ConfigQueueContext
4860:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4861:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  TriggerSource This parameter can be one of the following values:
4862:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_SOFTWARE
4863:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO
4864:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2
4865:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_CH3         (2)
4866:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_CH4
4867:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_TRGO
4868:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_CH1         (1)
4869:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_TRGO
4870:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH1         (1)
4871:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH3         (1)
4872:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH4         (1)
4873:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_TRGO
4874:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_CH3         (2)
4875:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_CH4         (2)
ARM GAS  /tmp/ccJLHc1D.s 			page 87


4876:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM6_TRGO
4877:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM7_TRGO
4878:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO
4879:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO2
4880:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH2         (2)
4881:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH4
4882:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM15_TRGO
4883:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM16_CH1        (1)
4884:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM20_TRGO
4885:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM20_TRGO2
4886:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM20_CH2        (2)
4887:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM20_CH4        (1)
4888:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG1       (2)
4889:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG2
4890:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG3       (2)
4891:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG4
4892:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG5
4893:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG6
4894:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG7
4895:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG8
4896:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG9
4897:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG10
4898:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_EXTI_LINE3       (2)
4899:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_EXTI_LINE15      (1)
4900:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_LPTIM_OUT
4901:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
4902:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4 serie, parameter not available on all ADC instances: ADC1, ADC2.\n
4903:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4 serie, parameter not available on all ADC instances: ADC3, ADC4, ADC5.
4904:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             On this STM32 serie, all ADCx are not available on all devices. Refer to device dat
4905:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ExternalTriggerEdge This parameter can be one of the following values:
4906:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISING
4907:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_FALLING
4908:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISINGFALLING
4909:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
4910:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Note: This parameter is discarded in case of SW start:
4911:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *               parameter "TriggerSource" set to "LL_ADC_INJ_TRIG_SOFTWARE".
4912:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  SequencerNbRanks This parameter can be one of the following values:
4913:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_DISABLE
4914:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS
4915:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS
4916:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS
4917:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Rank1_Channel This parameter can be one of the following values:
4918:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4919:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1                 (8)
4920:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2                 (8)
4921:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3                 (8)
4922:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4                 (8)
4923:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5                 (8)
4924:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4925:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4926:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4927:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4928:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4929:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4930:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4931:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4932:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
ARM GAS  /tmp/ccJLHc1D.s 			page 88


4933:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4934:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4935:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4936:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4937:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT           (7)
4938:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC1   (1)
4939:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC5   (5)
4940:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT              (6)
4941:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP1           (1)
4942:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP2           (2)
4943:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC2      (2)
4944:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC3      (3)
4945:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP4           (5)
4946:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP5           (5)
4947:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP6           (4)
4948:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
4949:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
4950:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
4951:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
4952:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
4953:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
4954:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
4955:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
4956:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *          -  On this STM32 serie, all ADCx are not available on all devices. Refer to device dat
4957:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (8) On STM32G4, fast channel allows: 2.5 (sampling) + 12.5 (conversion) = 15 ADC clock 
4958:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Other channels are slow channels  allows: 6.5 (sampling) + 12.5 (conversion) = 19 A
4959:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Rank2_Channel This parameter can be one of the following values:
4960:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4961:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1                 (8)
4962:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2                 (8)
4963:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3                 (8)
4964:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4                 (8)
4965:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5                 (8)
4966:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4967:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4968:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4969:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4970:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4971:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4972:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4973:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4974:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4975:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4976:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4977:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4978:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4979:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT           (7)
4980:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC1   (1)
4981:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC5   (5)
4982:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT              (6)
4983:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP1           (1)
4984:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP2           (2)
4985:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC2      (2)
4986:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC3      (3)
4987:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP4           (5)
4988:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP5           (5)
4989:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP6           (4)
ARM GAS  /tmp/ccJLHc1D.s 			page 89


4990:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
4991:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
4992:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
4993:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
4994:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
4995:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
4996:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
4997:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
4998:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *          -  On this STM32 serie, all ADCx are not available on all devices. Refer to device dat
4999:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (8) On STM32G4, fast channel allows: 2.5 (sampling) + 12.5 (conversion) = 15 ADC clock 
5000:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Other channels are slow channels  allows: 6.5 (sampling) + 12.5 (conversion) = 19 A
5001:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Rank3_Channel This parameter can be one of the following values:
5002:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
5003:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1                 (8)
5004:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2                 (8)
5005:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3                 (8)
5006:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4                 (8)
5007:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5                 (8)
5008:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5009:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5010:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5011:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5012:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5013:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5014:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5015:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5016:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5017:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5018:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5019:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5020:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5021:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT           (7)
5022:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC1   (1)
5023:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC5   (5)
5024:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT              (6)
5025:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP1           (1)
5026:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP2           (2)
5027:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC2      (2)
5028:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC3      (3)
5029:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP4           (5)
5030:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP5           (5)
5031:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP6           (4)
5032:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
5033:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
5034:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
5035:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
5036:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
5037:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
5038:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
5039:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
5040:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *          -  On this STM32 serie, all ADCx are not available on all devices. Refer to device dat
5041:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (8) On STM32G4, fast channel allows: 2.5 (sampling) + 12.5 (conversion) = 15 ADC clock 
5042:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Other channels are slow channels  allows: 6.5 (sampling) + 12.5 (conversion) = 19 A
5043:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Rank4_Channel This parameter can be one of the following values:
5044:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
5045:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1                 (8)
5046:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2                 (8)
ARM GAS  /tmp/ccJLHc1D.s 			page 90


5047:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3                 (8)
5048:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4                 (8)
5049:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5                 (8)
5050:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5051:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5052:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5053:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5054:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5055:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5056:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5057:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5058:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5059:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5060:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5061:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5062:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5063:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT           (7)
5064:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC1   (1)
5065:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC5   (5)
5066:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT              (6)
5067:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP1           (1)
5068:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP2           (2)
5069:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC2      (2)
5070:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC3      (3)
5071:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP4           (5)
5072:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP5           (5)
5073:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP6           (4)
5074:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
5075:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
5076:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
5077:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
5078:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
5079:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
5080:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
5081:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
5082:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *          -  On this STM32 serie, all ADCx are not available on all devices. Refer to device dat
5083:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (8) On STM32G4, fast channel allows: 2.5 (sampling) + 12.5 (conversion) = 15 ADC clock 
5084:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Other channels are slow channels  allows: 6.5 (sampling) + 12.5 (conversion) = 19 A
5085:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
5086:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
5087:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_ConfigQueueContext(ADC_TypeDef *ADCx,
5088:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    uint32_t TriggerSource,
5089:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    uint32_t ExternalTriggerEdge,
5090:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    uint32_t SequencerNbRanks,
5091:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    uint32_t Rank1_Channel,
5092:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    uint32_t Rank2_Channel,
5093:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    uint32_t Rank3_Channel,
5094:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    uint32_t Rank4_Channel)
5095:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
5096:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Set bits with content of parameter "Rankx_Channel" with bits position    */
5097:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* in register depending on literal "LL_ADC_INJ_RANK_x".                    */
5098:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Parameters "Rankx_Channel" and "LL_ADC_INJ_RANK_x" are used with masks   */
5099:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* because containing other bits reserved for other purpose.                */
5100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* If parameter "TriggerSource" is set to SW start, then parameter          */
5101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* "ExternalTriggerEdge" is discarded.                                      */
5102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   register uint32_t is_trigger_not_sw = (uint32_t)((TriggerSource != LL_ADC_INJ_TRIG_SOFTWARE) ? 1U
5103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR,
ARM GAS  /tmp/ccJLHc1D.s 			page 91


5104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_JSQR_JEXTSEL |
5105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_JSQR_JEXTEN  |
5106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_JSQR_JSQ4    |
5107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_JSQR_JSQ3    |
5108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_JSQR_JSQ2    |
5109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_JSQR_JSQ1    |
5110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_JSQR_JL,
5111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              (TriggerSource & ADC_JSQR_JEXTSEL)          |
5112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              (ExternalTriggerEdge * (is_trigger_not_sw)) |
5113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              (((Rank4_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
5114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              (((Rank3_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
5115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              (((Rank2_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
5116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              (((Rank1_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
5117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              SequencerNbRanks
5118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****             );
5119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
5120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
5122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
5123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
5124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_Channels Configuration of ADC hierarchical scope: channels
5126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
5127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
5128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
5130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set sampling time of the selected ADC channel
5131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Unit: ADC clock cycles.
5132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this device, sampling time is on channel scope: independently
5133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         of channel mapped on ADC group regular or injected.
5134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   In case of internal channel (VrefInt, TempSensor, ...) to be
5135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         converted:
5136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         sampling time constraints must be respected (sampling time can be
5137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         adjusted in function of ADC clock frequency and sampling time
5138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         setting).
5139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to device datasheet for timings values (parameters TS_vrefint,
5140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TS_temp, ...).
5141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
5142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         On this STM32 serie, ADC processing time is:
5143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - 12.5 ADC clock cycles at ADC resolution 12 bits
5144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - 10.5 ADC clock cycles at ADC resolution 10 bits
5145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - 8.5 ADC clock cycles at ADC resolution 8 bits
5146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - 6.5 ADC clock cycles at ADC resolution 6 bits
5147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   In case of ADC conversion of internal channel (VrefInt,
5148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         temperature sensor, ...), a sampling time minimum value
5149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is required.
5150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to device datasheet.
5151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
5152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
5153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
5155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll SMPR1    SMP0           LL_ADC_SetChannelSamplingTime\n
5156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR1    SMP1           LL_ADC_SetChannelSamplingTime\n
5157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR1    SMP2           LL_ADC_SetChannelSamplingTime\n
5158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR1    SMP3           LL_ADC_SetChannelSamplingTime\n
5159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR1    SMP4           LL_ADC_SetChannelSamplingTime\n
5160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR1    SMP5           LL_ADC_SetChannelSamplingTime\n
ARM GAS  /tmp/ccJLHc1D.s 			page 92


5161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR1    SMP6           LL_ADC_SetChannelSamplingTime\n
5162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR1    SMP7           LL_ADC_SetChannelSamplingTime\n
5163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR1    SMP8           LL_ADC_SetChannelSamplingTime\n
5164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR1    SMP9           LL_ADC_SetChannelSamplingTime\n
5165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR2    SMP10          LL_ADC_SetChannelSamplingTime\n
5166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR2    SMP11          LL_ADC_SetChannelSamplingTime\n
5167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR2    SMP12          LL_ADC_SetChannelSamplingTime\n
5168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR2    SMP13          LL_ADC_SetChannelSamplingTime\n
5169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR2    SMP14          LL_ADC_SetChannelSamplingTime\n
5170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR2    SMP15          LL_ADC_SetChannelSamplingTime\n
5171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR2    SMP16          LL_ADC_SetChannelSamplingTime\n
5172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR2    SMP17          LL_ADC_SetChannelSamplingTime\n
5173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR2    SMP18          LL_ADC_SetChannelSamplingTime
5174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
5175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
5176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
5177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1                 (8)
5178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2                 (8)
5179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3                 (8)
5180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4                 (8)
5181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5                 (8)
5182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT           (7)
5196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC1   (1)
5197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC5   (5)
5198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT              (6)
5199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP1           (1)
5200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP2           (2)
5201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC2      (2)
5202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC3      (3)
5203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP4           (5)
5204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP5           (5)
5205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP6           (4)
5206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
5207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
5208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
5209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
5210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
5211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
5212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
5213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
5214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *          -  On this STM32 serie, all ADCx are not available on all devices. Refer to device dat
5215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (8) On STM32G4, fast channel allows: 2.5 (sampling) + 12.5 (conversion) = 15 ADC clock 
5216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Other channels are slow channels  allows: 6.5 (sampling) + 12.5 (conversion) = 19 A
5217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  SamplingTime This parameter can be one of the following values:
ARM GAS  /tmp/ccJLHc1D.s 			page 93


5218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_2CYCLES_5   (1)
5219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_6CYCLES_5
5220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_12CYCLES_5
5221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_24CYCLES_5
5222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_47CYCLES_5
5223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_92CYCLES_5
5224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_247CYCLES_5
5225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_640CYCLES_5
5226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
5227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On some devices, ADC sampling time 2.5 ADC clock cycles
5228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             can be replaced by 3.5 ADC clock cycles.
5229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Refer to function @ref LL_ADC_SetSamplingTimeCommonConfig().
5230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
5231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
5232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetChannelSamplingTime(ADC_TypeDef *ADCx, uint32_t Channel, uint32_t Sa
5233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
  29              		.loc 1 5233 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
5234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Set bits with content of parameter "SamplingTime" with bits position     */
5235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* in register and register position depending on parameter "Channel".      */
5236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
5237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
5238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   register __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SMPR1, ((Channel & ADC_CHANNEL_SMPRX_RE
  33              		.loc 1 5238 3 view .LVU1
5233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Set bits with content of parameter "SamplingTime" with bits position     */
  34              		.loc 1 5233 1 is_stmt 0 view .LVU2
  35 0000 30B5     		push	{r4, r5, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 12
  38              		.cfi_offset 4, -12
  39              		.cfi_offset 5, -8
  40              		.cfi_offset 14, -4
  41              		.loc 1 5238 34 view .LVU3
  42 0002 CC0D     		lsrs	r4, r1, #23
  43 0004 04F00404 		and	r4, r4, #4
  44 0008 1430     		adds	r0, r0, #20
  45              	.LVL1:
5239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(*preg,
  46              		.loc 1 5240 3 is_stmt 1 view .LVU4
  47 000a C1F30451 		ubfx	r1, r1, #20, #5
  48              	.LVL2:
  49              		.loc 1 5240 3 is_stmt 0 view .LVU5
  50 000e 2358     		ldr	r3, [r4, r0]
  51 0010 0725     		movs	r5, #7
  52 0012 8D40     		lsls	r5, r5, r1
  53 0014 23EA0503 		bic	r3, r3, r5
  54 0018 02FA01F1 		lsl	r1, r2, r1
  55 001c 0B43     		orrs	r3, r3, r1
  56 001e 2350     		str	r3, [r4, r0]
5241:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
5242:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              SamplingTime   << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
5243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
  57              		.loc 1 5243 1 view .LVU6
  58 0020 30BD     		pop	{r4, r5, pc}
ARM GAS  /tmp/ccJLHc1D.s 			page 94


  59              		.loc 1 5243 1 view .LVU7
  60              		.cfi_endproc
  61              	.LFE191:
  63              		.section	.text.LL_ADC_SetAnalogWDMonitChannels,"ax",%progbits
  64              		.align	1
  65              		.syntax unified
  66              		.thumb
  67              		.thumb_func
  68              		.fpu fpv4-sp-d16
  70              	LL_ADC_SetAnalogWDMonitChannels:
  71              	.LVL3:
  72              	.LFB195:
5244:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
5246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get sampling time of the selected ADC channel
5247:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Unit: ADC clock cycles.
5248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this device, sampling time is on channel scope: independently
5249:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         of channel mapped on ADC group regular or injected.
5250:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
5251:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         On this STM32 serie, ADC processing time is:
5252:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - 12.5 ADC clock cycles at ADC resolution 12 bits
5253:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - 10.5 ADC clock cycles at ADC resolution 10 bits
5254:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - 8.5 ADC clock cycles at ADC resolution 8 bits
5255:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - 6.5 ADC clock cycles at ADC resolution 6 bits
5256:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll SMPR1    SMP0           LL_ADC_GetChannelSamplingTime\n
5257:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR1    SMP1           LL_ADC_GetChannelSamplingTime\n
5258:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR1    SMP2           LL_ADC_GetChannelSamplingTime\n
5259:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR1    SMP3           LL_ADC_GetChannelSamplingTime\n
5260:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR1    SMP4           LL_ADC_GetChannelSamplingTime\n
5261:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR1    SMP5           LL_ADC_GetChannelSamplingTime\n
5262:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR1    SMP6           LL_ADC_GetChannelSamplingTime\n
5263:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR1    SMP7           LL_ADC_GetChannelSamplingTime\n
5264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR1    SMP8           LL_ADC_GetChannelSamplingTime\n
5265:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR1    SMP9           LL_ADC_GetChannelSamplingTime\n
5266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR2    SMP10          LL_ADC_GetChannelSamplingTime\n
5267:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR2    SMP11          LL_ADC_GetChannelSamplingTime\n
5268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR2    SMP12          LL_ADC_GetChannelSamplingTime\n
5269:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR2    SMP13          LL_ADC_GetChannelSamplingTime\n
5270:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR2    SMP14          LL_ADC_GetChannelSamplingTime\n
5271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR2    SMP15          LL_ADC_GetChannelSamplingTime\n
5272:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR2    SMP16          LL_ADC_GetChannelSamplingTime\n
5273:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR2    SMP17          LL_ADC_GetChannelSamplingTime\n
5274:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR2    SMP18          LL_ADC_GetChannelSamplingTime
5275:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
5276:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
5277:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
5278:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1                 (8)
5279:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2                 (8)
5280:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3                 (8)
5281:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4                 (8)
5282:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5                 (8)
5283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5288:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
ARM GAS  /tmp/ccJLHc1D.s 			page 95


5289:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5290:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5291:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5292:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5293:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5294:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5295:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5296:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT           (7)
5297:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC1   (1)
5298:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC5   (5)
5299:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT              (6)
5300:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP1           (1)
5301:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP2           (2)
5302:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC2      (2)
5303:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC3      (3)
5304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP4           (5)
5305:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP5           (5)
5306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP6           (4)
5307:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
5308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
5309:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
5310:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
5311:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
5312:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
5313:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
5314:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
5315:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *          -  On this STM32 serie, all ADCx are not available on all devices. Refer to device dat
5316:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (8) On STM32G4, fast channel allows: 2.5 (sampling) + 12.5 (conversion) = 15 ADC clock 
5317:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Other channels are slow channels  allows: 6.5 (sampling) + 12.5 (conversion) = 19 A
5318:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5319:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_2CYCLES_5   (1)
5320:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_6CYCLES_5
5321:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_12CYCLES_5
5322:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_24CYCLES_5
5323:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_47CYCLES_5
5324:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_92CYCLES_5
5325:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_247CYCLES_5
5326:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_640CYCLES_5
5327:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
5328:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On some devices, ADC sampling time 2.5 ADC clock cycles
5329:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             can be replaced by 3.5 ADC clock cycles.
5330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Refer to function @ref LL_ADC_SetSamplingTimeCommonConfig().
5331:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
5332:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetChannelSamplingTime(ADC_TypeDef *ADCx, uint32_t Channel)
5333:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
5334:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   register const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SMPR1, ((Channel & ADC_CHANNEL_SM
5335:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(*preg,
5337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_
5338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                     >> ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BITOFFSET_P
5339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                    );
5340:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
5341:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
5343:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set mode single-ended or differential input of the selected
5344:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC channel.
5345:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Channel ending is on channel scope: independently of channel mapped
ARM GAS  /tmp/ccJLHc1D.s 			page 96


5346:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on ADC group regular or injected.
5347:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         In differential mode: Differential measurement is carried out
5348:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         between the selected channel 'i' (positive input) and
5349:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         channel 'i+1' (negative input). Only channel 'i' has to be
5350:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         configured, channel 'i+1' is configured automatically.
5351:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Refer to Reference Manual to ensure the selected channel is
5352:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         available in differential mode.
5353:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         For example, internal channels (VrefInt, TempSensor, ...) are
5354:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         not available in differential mode.
5355:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   When configuring a channel 'i' in differential mode,
5356:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         the channel 'i+1' is not usable separately.
5357:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On STM32G4, some channels are internally fixed to single-ended inputs
5358:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         configuration:
5359:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC1: Channels 12, 15, 16, 17 and 18
5360:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC2: Channels 15, 17 and 18
5361:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC3: Channels 12, 16, 17 and 18            (1)
5362:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC4: Channels 16, 17 and 18                (1)
5363:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC5: Channels 2, 3, 4, 16, 17 and 18       (1)
5364:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) ADC3/4/5 are not available on all devices, refer to device datasheet
5365:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             for more details.
5366:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   For ADC channels configured in differential mode, both inputs
5367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         should be biased at (Vref+)/2 +/-200mV.
5368:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (Vref+ is the analog voltage reference)
5369:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
5370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
5371:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be ADC disabled.
5372:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   One or several values can be selected.
5373:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
5374:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll DIFSEL   DIFSEL         LL_ADC_SetChannelSingleDiff
5375:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
5376:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
5377:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
5378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
5379:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
5380:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
5381:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
5382:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5384:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5386:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5388:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5390:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5391:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5392:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  SingleDiff This parameter can be a combination of the following values:
5393:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
5394:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
5395:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
5396:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
5397:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetChannelSingleDiff(ADC_TypeDef *ADCx, uint32_t Channel, uint32_t Sing
5398:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
5399:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Bits of channels in single or differential mode are set only for         */
5400:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* differential mode (for single mode, mask of bits allowed to be set is    */
5401:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* shifted out of range of bits of channels in single or differential mode. */
5402:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->DIFSEL,
ARM GAS  /tmp/ccJLHc1D.s 			page 97


5403:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
5404:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              (Channel & ADC_SINGLEDIFF_CHANNEL_MASK) & (ADC_DIFSEL_DIFSEL >> (SingleDiff & ADC_SING
5405:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
5406:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5407:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
5408:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get mode single-ended or differential input of the selected
5409:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC channel.
5410:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   When configuring a channel 'i' in differential mode,
5411:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         the channel 'i+1' is not usable separately.
5412:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Therefore, to ensure a channel is configured in single-ended mode,
5413:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         the configuration of channel itself and the channel 'i-1' must be
5414:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         read back (to ensure that the selected channel channel has not been
5415:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         configured in differential mode by the previous channel).
5416:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Refer to Reference Manual to ensure the selected channel is
5417:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         available in differential mode.
5418:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         For example, internal channels (VrefInt, TempSensor, ...) are
5419:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         not available in differential mode.
5420:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   When configuring a channel 'i' in differential mode,
5421:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         the channel 'i+1' is not usable separately.
5422:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On STM32G4, some channels are internally fixed to single-ended inputs
5423:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         configuration:
5424:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC1: Channels 12, 15, 16, 17 and 18
5425:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC2: Channels 15, 17 and 18
5426:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC3: Channels 12, 16, 17 and 18            (1)
5427:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC4: Channels 16, 17 and 18                (1)
5428:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC5: Channels 2, 3, 4, 16, 17 and 18       (1)
5429:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) ADC3/4/5 are not available on all devices, refer to device datasheet
5430:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             for more details.
5431:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   One or several values can be selected. In this case, the value
5432:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         returned is null if all channels are in single ended-mode.
5433:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
5434:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll DIFSEL   DIFSEL         LL_ADC_GetChannelSingleDiff
5435:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
5436:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Channel This parameter can be a combination of the following values:
5437:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
5438:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
5439:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
5440:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
5441:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
5442:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5443:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5444:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5445:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5446:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5447:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5448:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5449:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5450:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5452:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval 0: channel in single-ended mode, else: channel in differential mode
5453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
5454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetChannelSingleDiff(ADC_TypeDef *ADCx, uint32_t Channel)
5455:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
5456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->DIFSEL, (Channel & ADC_SINGLEDIFF_CHANNEL_MASK)));
5457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
5458:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5459:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
ARM GAS  /tmp/ccJLHc1D.s 			page 98


5460:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
5461:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
5462:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5463:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_AnalogWatchdog Configuration of ADC transversal scope: an
5464:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
5465:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
5466:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5467:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
5468:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC analog watchdog monitored channels:
5469:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         a single channel, multiple channels or all channels,
5470:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on ADC groups regular and-or injected.
5471:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Once monitored channels are selected, analog watchdog
5472:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is enabled.
5473:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   In case of need to define a single channel to monitor
5474:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         with analog watchdog from sequencer channel definition,
5475:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         use helper macro @ref __LL_ADC_ANALOGWD_CHANNEL_GROUP().
5476:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 serie, there are 2 kinds of analog watchdog
5477:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         instance:
5478:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
5479:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
5480:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
5481:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
5482:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             ADC resolution configured).
5483:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
5484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
5485:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
5486:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
5487:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             be selected. For example:
5488:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
5489:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
5490:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             groups regular and injected).
5491:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
5492:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
5493:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
5494:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
5495:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
5496:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             the 2 LSB are ignored.
5497:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
5498:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
5499:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5500:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
5501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     AWD1CH         LL_ADC_SetAnalogWDMonitChannels\n
5502:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR     AWD1SGL        LL_ADC_SetAnalogWDMonitChannels\n
5503:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR     AWD1EN         LL_ADC_SetAnalogWDMonitChannels\n
5504:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR     JAWD1EN        LL_ADC_SetAnalogWDMonitChannels\n
5505:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         AWD2CR   AWD2CH         LL_ADC_SetAnalogWDMonitChannels\n
5506:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         AWD3CR   AWD3CH         LL_ADC_SetAnalogWDMonitChannels
5507:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
5508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
5509:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
5510:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
5511:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
5512:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  AWDChannelGroup This parameter can be one of the following values:
5513:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
5514:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG        (0)
5515:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_INJ        (0)
5516:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG_INJ
ARM GAS  /tmp/ccJLHc1D.s 			page 99


5517:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG           (0)
5518:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_INJ           (0)
5519:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG_INJ
5520:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG           (0)
5521:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_INJ           (0)
5522:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG_INJ
5523:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG           (0)
5524:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_INJ           (0)
5525:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG_INJ
5526:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG           (0)
5527:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_INJ           (0)
5528:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG_INJ
5529:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG           (0)
5530:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_INJ           (0)
5531:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG_INJ
5532:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG           (0)
5533:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_INJ           (0)
5534:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG_INJ
5535:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG           (0)
5536:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_INJ           (0)
5537:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG_INJ
5538:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG           (0)
5539:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_INJ           (0)
5540:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG_INJ
5541:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG           (0)
5542:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_INJ           (0)
5543:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG_INJ
5544:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG           (0)
5545:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_INJ           (0)
5546:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG_INJ
5547:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG          (0)
5548:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_INJ          (0)
5549:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG_INJ
5550:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG          (0)
5551:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_INJ          (0)
5552:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG_INJ
5553:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG          (0)
5554:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_INJ          (0)
5555:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG_INJ
5556:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG          (0)
5557:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_INJ          (0)
5558:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG_INJ
5559:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG          (0)
5560:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_INJ          (0)
5561:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG_INJ
5562:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG          (0)
5563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_INJ          (0)
5564:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG_INJ
5565:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG          (0)
5566:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_INJ          (0)
5567:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG_INJ
5568:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG          (0)
5569:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_INJ          (0)
5570:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG_INJ
5571:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG          (0)
5572:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_INJ          (0)
5573:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG_INJ
ARM GAS  /tmp/ccJLHc1D.s 			page 100


5574:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG          (0)
5575:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_INJ          (0)
5576:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG_INJ
5577:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_ADC1_REG  (0)(1)
5578:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_ADC1_INJ  (0)(1)
5579:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_ADC1_REG_INJ (1)
5580:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_ADC5_REG  (0)(5)
5581:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_ADC5_INJ  (0)(5)
5582:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_ADC5_REG_INJ (5)
5583:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG             (0)(6)
5584:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_INJ             (0)(6)
5585:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG_INJ            (6)
5586:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP1_REG          (0)(1)
5587:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP1_INJ          (0)(1)
5588:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP1_REG_INJ         (1)
5589:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP2_REG          (0)(2)
5590:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP2_INJ          (0)(2)
5591:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP2_REG_INJ         (2)
5592:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP3_ADC2_REG     (0)(2)
5593:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP3_ADC2_INJ     (0)(2)
5594:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP3_ADC2_REG_INJ    (2)
5595:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP3_ADC3_REG     (0)(3)
5596:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP3_ADC3_INJ     (0)(3)
5597:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP3_ADC3_REG_INJ    (3)
5598:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP4_REG          (0)(5)
5599:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP4_INJ          (0)(5)
5600:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP4_REG_INJ         (5)
5601:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP5_REG          (0)(5)
5602:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP5_INJ          (0)(5)
5603:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP5_REG_INJ         (5)
5604:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP6_REG          (0)(4)
5605:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP6_INJ          (0)(4)
5606:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP6_REG_INJ         (4)
5607:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
5608:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (0) On STM32G4, parameter available only on analog watchdog number: AWD1.\n
5609:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
5610:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
5611:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
5612:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
5613:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
5614:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
5615:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
5616:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *          -  On this STM32 serie, all ADCx are not available on all devices. Refer to device dat
5617:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
5618:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
5619:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetAnalogWDMonitChannels(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWD
5620:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
  73              		.loc 1 5620 1 is_stmt 1 view -0
  74              		.cfi_startproc
  75              		@ args = 0, pretend = 0, frame = 0
  76              		@ frame_needed = 0, uses_anonymous_args = 0
5621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Set bits with content of parameter "AWDChannelGroup" with bits position  */
5622:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* in register and register position depending on parameter "AWDy".         */
5623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Parameters "AWDChannelGroup" and "AWDy" are used with masks because      */
5624:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
5625:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   register __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->CFGR, ((AWDy & ADC_AWD_CRX_REGOFFSET_MA
  77              		.loc 1 5625 3 view .LVU9
ARM GAS  /tmp/ccJLHc1D.s 			page 101


5620:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Set bits with content of parameter "AWDChannelGroup" with bits position  */
  78              		.loc 1 5620 1 is_stmt 0 view .LVU10
  79 0000 30B5     		push	{r4, r5, lr}
  80              	.LCFI1:
  81              		.cfi_def_cfa_offset 12
  82              		.cfi_offset 4, -12
  83              		.cfi_offset 5, -8
  84              		.cfi_offset 14, -4
  85              		.loc 1 5625 34 view .LVU11
  86 0002 C1F30153 		ubfx	r3, r1, #20, #2
  87 0006 2425     		movs	r5, #36
  88 0008 01F00104 		and	r4, r1, #1
  89 000c 05FB0434 		mla	r4, r5, r4, r3
  90 0010 0C30     		adds	r0, r0, #12
  91              	.LVL4:
5626:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                       + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * 
5627:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5628:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(*preg,
  92              		.loc 1 5628 3 is_stmt 1 view .LVU12
  93 0012 21F00245 		bic	r5, r1, #-2113929216
  94 0016 50F82430 		ldr	r3, [r0, r4, lsl #2]
  95 001a 25F46015 		bic	r5, r5, #3670016
  96 001e 23EA0503 		bic	r3, r3, r5
  97 0022 0A40     		ands	r2, r2, r1
  98              	.LVL5:
  99              		.loc 1 5628 3 is_stmt 0 view .LVU13
 100 0024 1A43     		orrs	r2, r2, r3
 101 0026 40F82420 		str	r2, [r0, r4, lsl #2]
5629:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
5630:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              AWDChannelGroup & AWDy);
5631:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 102              		.loc 1 5631 1 view .LVU14
 103 002a 30BD     		pop	{r4, r5, pc}
 104              		.loc 1 5631 1 view .LVU15
 105              		.cfi_endproc
 106              	.LFE195:
 108              		.section	.text.LL_ADC_REG_IsConversionOngoing,"ax",%progbits
 109              		.align	1
 110              		.syntax unified
 111              		.thumb
 112              		.thumb_func
 113              		.fpu fpv4-sp-d16
 115              	LL_ADC_REG_IsConversionOngoing:
 116              	.LVL6:
 117              	.LFB229:
5632:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5633:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
5634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC analog watchdog monitored channel.
5635:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Usage of the returned channel number:
5636:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
5637:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
5638:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
5639:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
5640:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
5641:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
5642:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           as parameter for another function.
5643:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - To get the channel number in decimal format:
ARM GAS  /tmp/ccJLHc1D.s 			page 102


5644:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           process the returned value with the helper macro
5645:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
5646:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           Applicable only when the analog watchdog is set to monitor
5647:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           one channel.
5648:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 serie, there are 2 kinds of analog watchdog
5649:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         instance:
5650:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
5651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
5652:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
5653:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
5654:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             ADC resolution configured).
5655:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
5656:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
5657:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
5658:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
5659:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             be selected. For example:
5660:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
5661:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
5662:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             groups regular and injected).
5663:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
5664:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
5665:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
5666:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
5667:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
5668:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             the 2 LSB are ignored.
5669:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
5670:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
5671:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5672:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
5673:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     AWD1CH         LL_ADC_GetAnalogWDMonitChannels\n
5674:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR     AWD1SGL        LL_ADC_GetAnalogWDMonitChannels\n
5675:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR     AWD1EN         LL_ADC_GetAnalogWDMonitChannels\n
5676:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR     JAWD1EN        LL_ADC_GetAnalogWDMonitChannels\n
5677:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         AWD2CR   AWD2CH         LL_ADC_GetAnalogWDMonitChannels\n
5678:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         AWD3CR   AWD3CH         LL_ADC_GetAnalogWDMonitChannels
5679:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
5680:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
5681:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
5682:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2 (1)
5683:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3 (1)
5684:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
5685:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On this AWD number, monitored channel can be retrieved
5686:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             if only 1 channel is programmed (or none or all channels).
5687:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             This function cannot retrieve monitored channel if
5688:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             multiple channels are programmed simultaneously
5689:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             by bitfield.
5690:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5691:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
5692:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG        (0)
5693:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_INJ        (0)
5694:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG_INJ
5695:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG           (0)
5696:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_INJ           (0)
5697:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG_INJ
5698:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG           (0)
5699:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_INJ           (0)
5700:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG_INJ
ARM GAS  /tmp/ccJLHc1D.s 			page 103


5701:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG           (0)
5702:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_INJ           (0)
5703:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG_INJ
5704:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG           (0)
5705:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_INJ           (0)
5706:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG_INJ
5707:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG           (0)
5708:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_INJ           (0)
5709:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG_INJ
5710:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG           (0)
5711:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_INJ           (0)
5712:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG_INJ
5713:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG           (0)
5714:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_INJ           (0)
5715:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG_INJ
5716:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG           (0)
5717:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_INJ           (0)
5718:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG_INJ
5719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG           (0)
5720:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_INJ           (0)
5721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG_INJ
5722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG           (0)
5723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_INJ           (0)
5724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG_INJ
5725:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG          (0)
5726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_INJ          (0)
5727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG_INJ
5728:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG          (0)
5729:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_INJ          (0)
5730:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG_INJ
5731:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG          (0)
5732:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_INJ          (0)
5733:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG_INJ
5734:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG          (0)
5735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_INJ          (0)
5736:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG_INJ
5737:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG          (0)
5738:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_INJ          (0)
5739:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG_INJ
5740:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG          (0)
5741:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_INJ          (0)
5742:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG_INJ
5743:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG          (0)
5744:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_INJ          (0)
5745:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG_INJ
5746:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG          (0)
5747:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_INJ          (0)
5748:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG_INJ
5749:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG          (0)
5750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_INJ          (0)
5751:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG_INJ
5752:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
5753:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (0) On STM32G4, parameter available only on analog watchdog number: AWD1.
5754:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
5755:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetAnalogWDMonitChannels(ADC_TypeDef *ADCx, uint32_t AWDy)
5756:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
5757:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   register const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->CFGR, ((AWDy & ADC_AWD_CRX_REGOFF
ARM GAS  /tmp/ccJLHc1D.s 			page 104


5758:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                             + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MA
5759:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5760:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   register uint32_t AnalogWDMonitChannels = (READ_BIT(*preg, AWDy) & AWDy & ADC_AWD_CR_ALL_CHANNEL_
5761:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5762:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* If "AnalogWDMonitChannels" == 0, then the selected AWD is disabled       */
5763:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* (parameter value LL_ADC_AWD_DISABLE).                                    */
5764:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Else, the selected AWD is enabled and is monitoring a group of channels  */
5765:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* or a single channel.                                                     */
5766:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   if (AnalogWDMonitChannels != 0UL)
5767:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   {
5768:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     if (AWDy == LL_ADC_AWD1)
5769:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     {
5770:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       if ((AnalogWDMonitChannels & ADC_CFGR_AWD1SGL) == 0UL)
5771:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       {
5772:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****         /* AWD monitoring a group of channels */
5773:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****         AnalogWDMonitChannels = ((AnalogWDMonitChannels
5774:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                   | (ADC_AWD_CR23_CHANNEL_MASK)
5775:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                  )
5776:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                  & (~(ADC_CFGR_AWD1CH))
5777:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                 );
5778:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       }
5779:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       else
5780:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       {
5781:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****         /* AWD monitoring a single channel */
5782:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****         AnalogWDMonitChannels = (AnalogWDMonitChannels
5783:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                  | (ADC_AWD2CR_AWD2CH_0 << (AnalogWDMonitChannels >> ADC_CFGR_AWD1C
5784:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                 );
5785:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       }
5786:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     }
5787:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     else
5788:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     {
5789:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       if ((AnalogWDMonitChannels & ADC_AWD_CR23_CHANNEL_MASK) == ADC_AWD_CR23_CHANNEL_MASK)
5790:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       {
5791:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****         /* AWD monitoring a group of channels */
5792:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****         AnalogWDMonitChannels = (ADC_AWD_CR23_CHANNEL_MASK
5793:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                  | ((ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN))
5794:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                 );
5795:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       }
5796:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       else
5797:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       {
5798:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****         /* AWD monitoring a single channel */
5799:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****         /* AWD monitoring a group of channels */
5800:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****         AnalogWDMonitChannels = (AnalogWDMonitChannels
5801:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                  | (ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)
5802:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                  | (__LL_ADC_CHANNEL_TO_DECIMAL_NB(AnalogWDMonitChannels) << ADC_CF
5803:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                 );
5804:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       }
5805:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     }
5806:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   }
5807:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5808:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return AnalogWDMonitChannels;
5809:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
5810:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5811:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
5812:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC analog watchdog thresholds value of both thresholds
5813:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         high and low.
5814:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If value of only one threshold high or low must be set,
ARM GAS  /tmp/ccJLHc1D.s 			page 105


5815:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         use function @ref LL_ADC_SetAnalogWDThresholds().
5816:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
5817:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
5818:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION().
5819:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 serie, there are 2 kinds of analog watchdog
5820:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         instance:
5821:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
5822:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
5823:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
5824:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
5825:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             ADC resolution configured).
5826:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
5827:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
5828:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
5829:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
5830:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             be selected. For example:
5831:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
5832:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
5833:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             groups regular and injected).
5834:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
5835:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
5836:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
5837:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
5838:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
5839:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             the 2 LSB are ignored.
5840:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If ADC oversampling is enabled, ADC analog watchdog thresholds are
5841:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         impacted: the comparison of analog watchdog thresholds is done on
5842:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         oversampling final computation (after ratio and shift application):
5843:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC data register bitfield [15:4] (12 most significant bits).
5844:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll TR1      HT1            LL_ADC_ConfigAnalogWDThresholds\n
5845:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TR2      HT2            LL_ADC_ConfigAnalogWDThresholds\n
5846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TR3      HT3            LL_ADC_ConfigAnalogWDThresholds\n
5847:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TR1      LT1            LL_ADC_ConfigAnalogWDThresholds\n
5848:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TR2      LT2            LL_ADC_ConfigAnalogWDThresholds\n
5849:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TR3      LT3            LL_ADC_ConfigAnalogWDThresholds
5850:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
5851:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
5852:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
5853:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
5854:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
5855:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  AWDThresholdHighValue Value between Min_Data=0x000 and Max_Data=0xFFF
5856:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  AWDThresholdLowValue Value between Min_Data=0x000 and Max_Data=0xFFF
5857:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
5858:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
5859:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ConfigAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWD
5860:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                      uint32_t AWDThresholdLowValue)
5861:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
5862:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Set bits with content of parameter "AWDThresholdxxxValue" with bits      */
5863:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* position in register and register position depending on parameter        */
5864:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* "AWDy".                                                                  */
5865:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Parameters "AWDy" and "AWDThresholdxxxValue" are used with masks because */
5866:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
5867:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   register __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->TR1, ((AWDy & ADC_AWD_TRX_REGOFFSET_MAS
5868:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5869:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(*preg,
5870:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_TR1_HT1 | ADC_TR1_LT1,
5871:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              (AWDThresholdHighValue << ADC_TR1_HT1_BITOFFSET_POS) | AWDThresholdLowValue);
ARM GAS  /tmp/ccJLHc1D.s 			page 106


5872:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
5873:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5874:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
5875:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC analog watchdog threshold value of threshold
5876:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         high or low.
5877:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If values of both thresholds high or low must be set,
5878:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         use function @ref LL_ADC_ConfigAnalogWDThresholds().
5879:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
5880:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
5881:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION().
5882:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 serie, there are 2 kinds of analog watchdog
5883:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         instance:
5884:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
5885:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
5886:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
5887:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
5888:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             ADC resolution configured).
5889:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
5890:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
5891:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
5892:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
5893:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             be selected. For example:
5894:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
5895:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
5896:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             groups regular and injected).
5897:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
5898:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
5899:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
5900:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
5901:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
5902:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             the 2 LSB are ignored.
5903:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If ADC oversampling is enabled, ADC analog watchdog thresholds are
5904:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         impacted: the comparison of analog watchdog thresholds is done on
5905:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         oversampling final computation (after ratio and shift application):
5906:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC data register bitfield [15:4] (12 most significant bits).
5907:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is not conditioned to
5908:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
5909:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC can be disabled, enabled with or without conversion on going
5910:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either ADC groups regular or injected.
5911:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll TR1      HT1            LL_ADC_SetAnalogWDThresholds\n
5912:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TR2      HT2            LL_ADC_SetAnalogWDThresholds\n
5913:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TR3      HT3            LL_ADC_SetAnalogWDThresholds\n
5914:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TR1      LT1            LL_ADC_SetAnalogWDThresholds\n
5915:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TR2      LT2            LL_ADC_SetAnalogWDThresholds\n
5916:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TR3      LT3            LL_ADC_SetAnalogWDThresholds
5917:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
5918:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
5919:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
5920:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
5921:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
5922:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  AWDThresholdsHighLow This parameter can be one of the following values:
5923:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
5924:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
5925:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  AWDThresholdValue Value between Min_Data=0x000 and Max_Data=0xFFF
5926:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
5927:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
5928:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWDThr
ARM GAS  /tmp/ccJLHc1D.s 			page 107


5929:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                   uint32_t AWDThresholdValue)
5930:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
5931:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Set bits with content of parameter "AWDThresholdValue" with bits         */
5932:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* position in register and register position depending on parameters       */
5933:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* "AWDThresholdsHighLow" and "AWDy".                                       */
5934:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Parameters "AWDy" and "AWDThresholdValue" are used with masks because    */
5935:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
5936:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   register __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->TR1, ((AWDy & ADC_AWD_TRX_REGOFFSET_MAS
5937:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5938:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(*preg,
5939:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              AWDThresholdsHighLow,
5940:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              AWDThresholdValue << ((AWDThresholdsHighLow & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TR
5941:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
5942:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5943:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
5944:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC analog watchdog threshold value of threshold high,
5945:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         threshold low or raw data with ADC thresholds high and low
5946:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         concatenated.
5947:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If raw data with ADC thresholds high and low is retrieved,
5948:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         the data of each threshold high or low can be isolated
5949:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         using helper macro:
5950:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @ref __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW().
5951:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
5952:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
5953:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION().
5954:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll TR1      HT1            LL_ADC_GetAnalogWDThresholds\n
5955:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TR2      HT2            LL_ADC_GetAnalogWDThresholds\n
5956:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TR3      HT3            LL_ADC_GetAnalogWDThresholds\n
5957:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TR1      LT1            LL_ADC_GetAnalogWDThresholds\n
5958:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TR2      LT2            LL_ADC_GetAnalogWDThresholds\n
5959:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TR3      LT3            LL_ADC_GetAnalogWDThresholds
5960:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
5961:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
5962:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
5963:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
5964:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
5965:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  AWDThresholdsHighLow This parameter can be one of the following values:
5966:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
5967:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
5968:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLDS_HIGH_LOW
5969:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
5970:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
5971:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AW
5972:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
5973:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   register const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->TR1, ((AWDy & ADC_AWD_TRX_REGOFFS
5974:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5975:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(*preg,
5976:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                              (AWDThresholdsHighLow | ADC_TR1_LT1))
5977:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                     >> (((AWDThresholdsHighLow & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TRX_BIT_HIGH
5978:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                    );
5979:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
5980:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5981:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
5982:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC analog watchdog filtering configuration
5983:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
5984:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
5985:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
ARM GAS  /tmp/ccJLHc1D.s 			page 108


5986:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
5987:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *  @note  On this STM32 serie, this feature is only available on first
5988:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         analog watchdog (AWD1)
5989:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll TR1      AWDFILT        LL_ADC_SetAWDFilteringConfiguration
5990:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
5991:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
5992:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
5993:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  FilteringConfig This parameter can be one of the following values:
5994:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_NONE
5995:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_2SAMPLES
5996:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_3SAMPLES
5997:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_4SAMPLES
5998:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_5SAMPLES
5999:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_6SAMPLES
6000:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_7SAMPLES
6001:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_8SAMPLES
6002:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
6003:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6004:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetAWDFilteringConfiguration(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t
6005:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6006:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Prevent unused argument(s) compilation warning */
6007:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   (void)(AWDy);
6008:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->TR1, ADC_TR1_AWDFILT, FilteringConfig);
6009:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6010:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6011:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6012:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC analog watchdog filtering configuration
6013:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *  @note  On this STM32 serie, this feature is only available on first
6014:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         analog watchdog (AWD1)
6015:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll TR1      AWDFILT        LL_ADC_GetAWDFilteringConfiguration
6016:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6017:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
6018:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
6019:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be:
6020:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_NONE
6021:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_2SAMPLES
6022:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_3SAMPLES
6023:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_4SAMPLES
6024:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_5SAMPLES
6025:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_6SAMPLES
6026:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_7SAMPLES
6027:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_8SAMPLES
6028:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6029:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetAWDFilteringConfiguration(ADC_TypeDef *ADCx, uint32_t AWDy)
6030:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6031:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Prevent unused argument(s) compilation warning */
6032:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   (void)(AWDy);
6033:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->TR1, ADC_TR1_AWDFILT));
6034:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6035:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6036:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6037:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
6038:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6039:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6040:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_oversampling Configuration of ADC transversal scope: over
6041:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
6042:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
ARM GAS  /tmp/ccJLHc1D.s 			page 109


6043:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6044:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6045:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC oversampling scope: ADC groups regular and-or injected
6046:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (availability of ADC group injected depends on STM32 families).
6047:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If both groups regular and injected are selected,
6048:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         specify behavior of ADC group injected interrupting
6049:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         group regular: when ADC group injected is triggered,
6050:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         the oversampling on ADC group regular is either
6051:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         temporary stopped and continued, or resumed from start
6052:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (oversampler buffer reset).
6053:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
6054:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
6055:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
6056:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
6057:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR2    ROVSE          LL_ADC_SetOverSamplingScope\n
6058:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR2    JOVSE          LL_ADC_SetOverSamplingScope\n
6059:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR2    ROVSM          LL_ADC_SetOverSamplingScope
6060:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6061:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  OvsScope This parameter can be one of the following values:
6062:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_DISABLE
6063:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_CONTINUED
6064:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_RESUMED
6065:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJECTED
6066:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJ_REG_RESUMED
6067:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
6068:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6069:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOverSamplingScope(ADC_TypeDef *ADCx, uint32_t OvsScope)
6070:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6071:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_ROVSE | ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSM, OvsScope);
6072:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6073:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6074:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6075:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC oversampling scope: ADC groups regular and-or injected
6076:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (availability of ADC group injected depends on STM32 families).
6077:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If both groups regular and injected are selected,
6078:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         specify behavior of ADC group injected interrupting
6079:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         group regular: when ADC group injected is triggered,
6080:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         the oversampling on ADC group regular is either
6081:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         temporary stopped and continued, or resumed from start
6082:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (oversampler buffer reset).
6083:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR2    ROVSE          LL_ADC_GetOverSamplingScope\n
6084:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR2    JOVSE          LL_ADC_GetOverSamplingScope\n
6085:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR2    ROVSM          LL_ADC_GetOverSamplingScope
6086:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6087:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
6088:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_DISABLE
6089:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_CONTINUED
6090:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_RESUMED
6091:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJECTED
6092:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJ_REG_RESUMED
6093:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6094:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingScope(ADC_TypeDef *ADCx)
6095:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6096:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_ROVSE | ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSM));
6097:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6098:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6099:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
ARM GAS  /tmp/ccJLHc1D.s 			page 110


6100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC oversampling discontinuous mode (triggered mode)
6101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on the selected ADC group.
6102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Number of oversampled conversions are done either in:
6103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - continuous mode (all conversions of oversampling ratio
6104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           are done from 1 trigger)
6105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - discontinuous mode (each conversion of oversampling ratio
6106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           needs a trigger)
6107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
6108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
6109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
6110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on group regular.
6111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 serie, oversampling discontinuous mode
6112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (triggered mode) can be used only when oversampling is
6113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         set on group regular only and in resumed mode.
6114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR2    TROVS          LL_ADC_SetOverSamplingDiscont
6115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  OverSamplingDiscont This parameter can be one of the following values:
6117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_CONT
6118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_DISCONT
6119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
6120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOverSamplingDiscont(ADC_TypeDef *ADCx, uint32_t OverSamplingDiscont)
6122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_TROVS, OverSamplingDiscont);
6124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC oversampling discontinuous mode (triggered mode)
6128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on the selected ADC group.
6129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Number of oversampled conversions are done either in:
6130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - continuous mode (all conversions of oversampling ratio
6131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           are done from 1 trigger)
6132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - discontinuous mode (each conversion of oversampling ratio
6133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           needs a trigger)
6134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR2    TROVS          LL_ADC_GetOverSamplingDiscont
6135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
6137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_CONT
6138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_DISCONT
6139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingDiscont(ADC_TypeDef *ADCx)
6141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_TROVS));
6143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC oversampling
6147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (impacting both ADC groups regular and injected)
6148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This function set the 2 items of oversampling configuration:
6149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ratio
6150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - shift
6151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
6152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
6153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
6154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
6155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR2    OVSS           LL_ADC_ConfigOverSamplingRatioShift\n
6156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR2    OVSR           LL_ADC_ConfigOverSamplingRatioShift
ARM GAS  /tmp/ccJLHc1D.s 			page 111


6157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Ratio This parameter can be one of the following values:
6159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_2
6160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_4
6161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_8
6162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_16
6163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_32
6164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_64
6165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_128
6166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_256
6167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Shift This parameter can be one of the following values:
6168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_NONE
6169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_1
6170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_2
6171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_3
6172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_4
6173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_5
6174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_6
6175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_7
6176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_8
6177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
6178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ConfigOverSamplingRatioShift(ADC_TypeDef *ADCx, uint32_t Ratio, uint32_
6180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, (ADC_CFGR2_OVSS | ADC_CFGR2_OVSR), (Shift | Ratio));
6182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC oversampling ratio
6186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *        (impacting both ADC groups regular and injected)
6187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR2    OVSR           LL_ADC_GetOverSamplingRatio
6188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Ratio This parameter can be one of the following values:
6190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_2
6191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_4
6192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_8
6193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_16
6194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_32
6195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_64
6196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_128
6197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_256
6198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingRatio(ADC_TypeDef *ADCx)
6200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSR));
6202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC oversampling shift
6206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *        (impacting both ADC groups regular and injected)
6207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR2    OVSS           LL_ADC_GetOverSamplingShift
6208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Shift This parameter can be one of the following values:
6210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_NONE
6211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_1
6212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_2
6213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_3
ARM GAS  /tmp/ccJLHc1D.s 			page 112


6214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_4
6215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_5
6216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_6
6217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_7
6218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_8
6219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingShift(ADC_TypeDef *ADCx)
6221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSS));
6223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
6227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Multimode Configuration of ADC hierarchical scope: multim
6230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
6231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
6234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC multimode configuration to operate in independent mode
6236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or multimode (for devices with several ADC instances).
6237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If multimode configuration: the selected ADC instance is
6238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         either master or slave depending on hardware.
6239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to reference manual.
6240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
6241:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
6242:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
6243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
6244:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC instance or by using helper macro
6245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
6246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CCR      DUAL           LL_ADC_SetMultimode
6247:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6249:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Multimode This parameter can be one of the following values:
6250:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_INDEPENDENT
6251:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIMULT
6252:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_INTERL
6253:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_INJ_SIMULT
6254:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_INJ_ALTERN
6255:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIM_INJ_SIM
6256:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIM_INJ_ALT
6257:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_INT_INJ_SIM
6258:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
6259:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6260:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetMultimode(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t Multimode)
6261:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6262:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_DUAL, Multimode);
6263:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6265:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC multimode configuration to operate in independent mode
6267:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or multimode (for devices with several ADC instances).
6268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If multimode configuration: the selected ADC instance is
6269:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         either master or slave depending on hardware.
6270:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to reference manual.
ARM GAS  /tmp/ccJLHc1D.s 			page 113


6271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CCR      DUAL           LL_ADC_GetMultimode
6272:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6273:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6274:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
6275:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_INDEPENDENT
6276:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIMULT
6277:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_INTERL
6278:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_INJ_SIMULT
6279:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_INJ_ALTERN
6280:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIM_INJ_SIM
6281:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIM_INJ_ALT
6282:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_INT_INJ_SIM
6283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetMultimode(ADC_Common_TypeDef *ADCxy_COMMON)
6285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_DUAL));
6287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6288:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6289:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6290:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC multimode conversion data transfer: no transfer
6291:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or transfer by DMA.
6292:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If ADC multimode transfer by DMA is not selected:
6293:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         each ADC uses its own DMA channel, with its individual
6294:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         DMA transfer settings.
6295:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         If ADC multimode transfer by DMA is selected:
6296:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         One DMA channel is used for both ADC (DMA of ADC master)
6297:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Specifies the DMA requests mode:
6298:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
6299:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           when number of DMA data transfers (number of
6300:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           ADC conversions) is reached.
6301:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
6302:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
6303:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
6304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           ADC conversions).
6305:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
6306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
6307:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         mode non-circular:
6308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
6309:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
6310:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (overrun flag and interruption if enabled).
6311:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   How to retrieve multimode conversion data:
6312:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Whatever multimode transfer by DMA setting: using function
6313:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @ref LL_ADC_REG_ReadMultiConversionData32().
6314:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         If ADC multimode transfer by DMA is selected: conversion data
6315:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is a raw data with ADC master and slave concatenated.
6316:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         A macro is available to get the conversion data of
6317:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC master or ADC slave: see helper macro
6318:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @ref __LL_ADC_MULTI_CONV_DATA_MASTER_SLAVE().
6319:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
6320:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
6321:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled
6322:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or enabled without conversion on going on group regular.
6323:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CCR      MDMA           LL_ADC_SetMultiDMATransfer\n
6324:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CCR      DMACFG         LL_ADC_SetMultiDMATransfer
6325:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6326:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6327:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  MultiDMATransfer This parameter can be one of the following values:
ARM GAS  /tmp/ccJLHc1D.s 			page 114


6328:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_EACH_ADC
6329:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_LIMIT_RES12_10B
6330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_LIMIT_RES8_6B
6331:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_UNLMT_RES12_10B
6332:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_UNLMT_RES8_6B
6333:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
6334:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6335:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetMultiDMATransfer(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t MultiDMA
6336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_MDMA | ADC_CCR_DMACFG, MultiDMATransfer);
6338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6340:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6341:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC multimode conversion data transfer: no transfer
6342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or transfer by DMA.
6343:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If ADC multimode transfer by DMA is not selected:
6344:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         each ADC uses its own DMA channel, with its individual
6345:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         DMA transfer settings.
6346:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         If ADC multimode transfer by DMA is selected:
6347:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         One DMA channel is used for both ADC (DMA of ADC master)
6348:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Specifies the DMA requests mode:
6349:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
6350:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           when number of DMA data transfers (number of
6351:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           ADC conversions) is reached.
6352:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
6353:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
6354:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
6355:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           ADC conversions).
6356:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
6357:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
6358:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         mode non-circular:
6359:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
6360:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
6361:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (overrun flag and interruption if enabled).
6362:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   How to retrieve multimode conversion data:
6363:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Whatever multimode transfer by DMA setting: using function
6364:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @ref LL_ADC_REG_ReadMultiConversionData32().
6365:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         If ADC multimode transfer by DMA is selected: conversion data
6366:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is a raw data with ADC master and slave concatenated.
6367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         A macro is available to get the conversion data of
6368:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC master or ADC slave: see helper macro
6369:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @ref __LL_ADC_MULTI_CONV_DATA_MASTER_SLAVE().
6370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CCR      MDMA           LL_ADC_GetMultiDMATransfer\n
6371:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CCR      DMACFG         LL_ADC_GetMultiDMATransfer
6372:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6373:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6374:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
6375:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_EACH_ADC
6376:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_LIMIT_RES12_10B
6377:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_LIMIT_RES8_6B
6378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_UNLMT_RES12_10B
6379:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_UNLMT_RES8_6B
6380:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6381:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetMultiDMATransfer(ADC_Common_TypeDef *ADCxy_COMMON)
6382:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_MDMA | ADC_CCR_DMACFG));
6384:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
ARM GAS  /tmp/ccJLHc1D.s 			page 115


6385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6386:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC multimode delay between 2 sampling phases.
6388:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   The sampling delay range depends on ADC resolution:
6389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC resolution 12 bits can have maximum delay of 12 cycles.
6390:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC resolution 10 bits can have maximum delay of 10 cycles.
6391:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC resolution  8 bits can have maximum delay of  8 cycles.
6392:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC resolution  6 bits can have maximum delay of  6 cycles.
6393:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
6394:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
6395:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
6396:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
6397:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
6398:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
6399:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CCR      DELAY          LL_ADC_SetMultiTwoSamplingDelay
6400:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6401:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6402:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  MultiTwoSamplingDelay This parameter can be one of the following values:
6403:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_1CYCLE
6404:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_2CYCLES
6405:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_3CYCLES
6406:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_4CYCLES
6407:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_5CYCLES
6408:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_6CYCLES  (1)
6409:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_7CYCLES  (1)
6410:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_8CYCLES  (2)
6411:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_9CYCLES  (2)
6412:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_10CYCLES (2)
6413:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_11CYCLES (3)
6414:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_12CYCLES (3)
6415:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
6416:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) Parameter available only if ADC resolution is 12, 10 or 8 bits.\n
6417:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) Parameter available only if ADC resolution is 12 or 10 bits.\n
6418:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) Parameter available only if ADC resolution is 12 bits.
6419:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
6420:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6421:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetMultiTwoSamplingDelay(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t Mul
6422:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6423:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_DELAY, MultiTwoSamplingDelay);
6424:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6425:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6426:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6427:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC multimode delay between 2 sampling phases.
6428:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CCR      DELAY          LL_ADC_GetMultiTwoSamplingDelay
6429:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6430:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6431:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
6432:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_1CYCLE
6433:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_2CYCLES
6434:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_3CYCLES
6435:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_4CYCLES
6436:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_5CYCLES
6437:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_6CYCLES  (1)
6438:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_7CYCLES  (1)
6439:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_8CYCLES  (2)
6440:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_9CYCLES  (2)
6441:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_10CYCLES (2)
ARM GAS  /tmp/ccJLHc1D.s 			page 116


6442:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_11CYCLES (3)
6443:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_12CYCLES (3)
6444:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
6445:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) Parameter available only if ADC resolution is 12, 10 or 8 bits.\n
6446:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) Parameter available only if ADC resolution is 12 or 10 bits.\n
6447:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) Parameter available only if ADC resolution is 12 bits.
6448:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6449:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetMultiTwoSamplingDelay(ADC_Common_TypeDef *ADCxy_COMMON)
6450:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_DELAY));
6452:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
6454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6455:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
6457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6458:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Instance Operation on ADC hierarchical scope: ADC instance
6459:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
6460:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6461:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6462:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6463:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Put ADC instance in deep power down state.
6464:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   In case of ADC calibration necessary: When ADC is in deep-power-down
6465:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         state, the internal analog calibration is lost. After exiting from
6466:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         deep power down, calibration must be relaunched or calibration factor
6467:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (preliminarily saved) must be set back into calibration register.
6468:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
6469:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
6470:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be ADC disabled.
6471:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CR       DEEPPWD        LL_ADC_EnableDeepPowerDown
6472:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6473:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
6474:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6475:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableDeepPowerDown(ADC_TypeDef *ADCx)
6476:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6477:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6478:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6479:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6480:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6481:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6482:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_DEEPPWD);
6483:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6485:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6486:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Disable ADC deep power down mode.
6487:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   In case of ADC calibration necessary: When ADC is in deep-power-down
6488:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         state, the internal analog calibration is lost. After exiting from
6489:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         deep power down, calibration must be relaunched or calibration factor
6490:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (preliminarily saved) must be set back into calibration register.
6491:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
6492:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
6493:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be ADC disabled.
6494:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CR       DEEPPWD        LL_ADC_DisableDeepPowerDown
6495:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6496:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
6497:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6498:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableDeepPowerDown(ADC_TypeDef *ADCx)
ARM GAS  /tmp/ccJLHc1D.s 			page 117


6499:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6500:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6502:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6503:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   CLEAR_BIT(ADCx->CR, (ADC_CR_DEEPPWD | ADC_CR_BITS_PROPERTY_RS));
6504:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6505:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6506:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6507:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get the selected ADC instance deep power down state.
6508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CR       DEEPPWD        LL_ADC_IsDeepPowerDownEnabled
6509:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6510:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval 0: deep power down is disabled, 1: deep power down is enabled.
6511:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6512:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsDeepPowerDownEnabled(ADC_TypeDef *ADCx)
6513:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6514:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_DEEPPWD) == (ADC_CR_DEEPPWD)) ? 1UL : 0UL);
6515:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6516:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6517:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6518:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Enable ADC instance internal voltage regulator.
6519:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 serie, after ADC internal voltage regulator enable,
6520:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         a delay for ADC internal voltage regulator stabilization
6521:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is required before performing a ADC calibration or ADC enable.
6522:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to device datasheet, parameter tADCVREG_STUP.
6523:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_INTERNAL_REGUL_STAB_US.
6524:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
6525:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
6526:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be ADC disabled.
6527:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_EnableInternalRegulator
6528:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6529:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
6530:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6531:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableInternalRegulator(ADC_TypeDef *ADCx)
6532:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6533:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6534:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6535:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6536:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6537:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6538:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_ADVREGEN);
6539:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6540:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6541:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6542:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Disable ADC internal voltage regulator.
6543:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
6544:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
6545:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be ADC disabled.
6546:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_DisableInternalRegulator
6547:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6548:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
6549:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6550:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableInternalRegulator(ADC_TypeDef *ADCx)
6551:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6552:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   CLEAR_BIT(ADCx->CR, (ADC_CR_ADVREGEN | ADC_CR_BITS_PROPERTY_RS));
6553:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6554:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6555:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
ARM GAS  /tmp/ccJLHc1D.s 			page 118


6556:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get the selected ADC instance internal voltage regulator state.
6557:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_IsInternalRegulatorEnabled
6558:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6559:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval 0: internal regulator is disabled, 1: internal regulator is enabled.
6560:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6561:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsInternalRegulatorEnabled(ADC_TypeDef *ADCx)
6562:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADVREGEN) == (ADC_CR_ADVREGEN)) ? 1UL : 0UL);
6564:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6565:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6566:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6567:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Enable the selected ADC instance.
6568:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 serie, after ADC enable, a delay for
6569:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC internal analog stabilization is required before performing a
6570:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC conversion start.
6571:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to device datasheet, parameter tSTAB.
6572:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 serie, flag LL_ADC_FLAG_ADRDY is raised when the ADC
6573:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
6574:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
6575:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
6576:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
6577:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be ADC disabled and ADC internal voltage regulator enabled.
6578:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CR       ADEN           LL_ADC_Enable
6579:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6580:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
6581:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6582:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_Enable(ADC_TypeDef *ADCx)
6583:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6584:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6585:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6586:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6587:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6588:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6589:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_ADEN);
6590:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6591:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6592:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6593:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Disable the selected ADC instance.
6594:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
6595:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
6596:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be not disabled. Must be enabled without conversion on going
6597:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
6598:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CR       ADDIS          LL_ADC_Disable
6599:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6600:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
6601:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6602:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_Disable(ADC_TypeDef *ADCx)
6603:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6604:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6605:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6606:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6607:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6608:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6609:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_ADDIS);
6610:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6611:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6612:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
ARM GAS  /tmp/ccJLHc1D.s 			page 119


6613:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get the selected ADC instance enable state.
6614:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 serie, flag LL_ADC_FLAG_ADRDY is raised when the ADC
6615:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
6616:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
6617:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CR       ADEN           LL_ADC_IsEnabled
6618:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6619:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval 0: ADC is disabled, 1: ADC is enabled.
6620:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsEnabled(ADC_TypeDef *ADCx)
6622:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADEN) == (ADC_CR_ADEN)) ? 1UL : 0UL);
6624:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6625:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6626:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6627:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get the selected ADC instance disable state.
6628:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CR       ADDIS          LL_ADC_IsDisableOngoing
6629:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6630:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval 0: no ADC disable command on going.
6631:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6632:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsDisableOngoing(ADC_TypeDef *ADCx)
6633:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADDIS) == (ADC_CR_ADDIS)) ? 1UL : 0UL);
6635:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6636:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6637:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6638:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Start ADC calibration in the mode single-ended
6639:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
6640:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 serie, a minimum number of ADC clock cycles
6641:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         are required between ADC end of calibration and ADC enable.
6642:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_CALIB_ENABLE_ADC_CYCLES.
6643:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   For devices with differential mode available:
6644:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Calibration of offset is specific to each of
6645:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         single-ended and differential modes
6646:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (calibration run must be performed for each of these
6647:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         differential modes, if used afterwards and if the application
6648:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         requires their calibration).
6649:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
6650:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
6651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be ADC disabled.
6652:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CR       ADCAL          LL_ADC_StartCalibration\n
6653:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CR       ADCALDIF       LL_ADC_StartCalibration
6654:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6655:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  SingleDiff This parameter can be one of the following values:
6656:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
6657:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
6658:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
6659:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6660:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_StartCalibration(ADC_TypeDef *ADCx, uint32_t SingleDiff)
6661:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6662:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6663:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6664:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6665:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6666:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_ADCALDIF | ADC_CR_BITS_PROPERTY_RS,
6667:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_ADCAL | (SingleDiff & ADC_SINGLEDIFF_CALIB_START_MASK));
6668:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6669:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
ARM GAS  /tmp/ccJLHc1D.s 			page 120


6670:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6671:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC calibration state.
6672:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CR       ADCAL          LL_ADC_IsCalibrationOnGoing
6673:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6674:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval 0: calibration complete, 1: calibration in progress.
6675:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6676:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsCalibrationOnGoing(ADC_TypeDef *ADCx)
6677:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6678:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADCAL) == (ADC_CR_ADCAL)) ? 1UL : 0UL);
6679:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6680:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6681:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6682:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
6683:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6684:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6685:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Group_Regular Operation on ADC hierarchical scope: group regu
6686:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
6687:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6688:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6689:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6690:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Start ADC group regular conversion.
6691:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 serie, this function is relevant for both
6692:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         internal trigger (SW start) and external trigger:
6693:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - If ADC trigger has been set to software start, ADC conversion
6694:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           starts immediately.
6695:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - If ADC trigger has been set to external trigger, ADC conversion
6696:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           will start at next trigger event (on the selected trigger edge)
6697:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           following the ADC start conversion command.
6698:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
6699:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
6700:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be enabled without conversion on going on group regular,
6701:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         without conversion stop command on going on group regular,
6702:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         without ADC disable command on going.
6703:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CR       ADSTART        LL_ADC_REG_StartConversion
6704:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6705:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
6706:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6707:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_StartConversion(ADC_TypeDef *ADCx)
6708:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6709:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6710:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6711:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6712:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6713:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6714:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_ADSTART);
6715:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6716:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6717:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6718:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Stop ADC group regular conversion.
6719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
6720:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
6721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be enabled with conversion on going on group regular,
6722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         without ADC disable command on going.
6723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CR       ADSTP          LL_ADC_REG_StopConversion
6724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6725:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
6726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
ARM GAS  /tmp/ccJLHc1D.s 			page 121


6727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_StopConversion(ADC_TypeDef *ADCx)
6728:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6729:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6730:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6731:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6732:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6733:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6734:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_ADSTP);
6735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6736:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6737:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6738:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion state.
6739:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CR       ADSTART        LL_ADC_REG_IsConversionOngoing
6740:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6741:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval 0: no conversion is on going on ADC group regular.
6742:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6743:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsConversionOngoing(ADC_TypeDef *ADCx)
6744:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 118              		.loc 1 6744 1 is_stmt 1 view -0
 119              		.cfi_startproc
 120              		@ args = 0, pretend = 0, frame = 0
 121              		@ frame_needed = 0, uses_anonymous_args = 0
 122              		@ link register save eliminated.
6745:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADSTART) == (ADC_CR_ADSTART)) ? 1UL : 0UL);
 123              		.loc 1 6745 3 view .LVU17
 124              		.loc 1 6745 12 is_stmt 0 view .LVU18
 125 0000 8068     		ldr	r0, [r0, #8]
 126              	.LVL7:
6746:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 127              		.loc 1 6746 1 view .LVU19
 128 0002 C0F38000 		ubfx	r0, r0, #2, #1
 129 0006 7047     		bx	lr
 130              		.cfi_endproc
 131              	.LFE229:
 133              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
 134              		.align	1
 135              		.weak	HAL_ADC_MspInit
 136              		.syntax unified
 137              		.thumb
 138              		.thumb_func
 139              		.fpu fpv4-sp-d16
 141              	HAL_ADC_MspInit:
 142              	.LVL8:
 143              	.LFB359:
 144              		.file 2 "Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c"
   1:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
   2:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   ******************************************************************************
   3:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @file    stm32g4xx_hal_adc.c
   4:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @author  MCD Application Team
   5:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief   This file provides firmware functions to manage the following
   6:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          functionalities of the Analog to Digital Convertor (ADC)
   7:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          peripheral:
   8:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *             ++ Initialization and Configuration of ADC
  10:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *           + Operation functions
  11:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *             ++ Start, stop, get result of conversions of regular
  12:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *                group, using 3 possible modes: polling, interruption or DMA.
ARM GAS  /tmp/ccJLHc1D.s 			page 122


  13:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *           + Control functions
  14:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *             ++ Channels configuration on regular group
  15:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *             ++ Analog Watchdog configuration
  16:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *           + State functions
  17:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *             ++ ADC state machine management
  18:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *             ++ Interrupts and flags management
  19:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          Other functions (extended functions) are available in file
  20:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          "stm32g4xx_hal_adc_ex.c".
  21:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *
  22:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   @verbatim
  23:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   ==============================================================================
  24:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                      ##### ADC peripheral features #####
  25:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   ==============================================================================
  26:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   [..]
  27:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   (+) 12-bit, 10-bit, 8-bit or 6-bit configurable resolution.
  28:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
  29:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   (+) Interrupt generation at the end of regular conversion and in case of
  30:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       analog watchdog or overrun events.
  31:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
  32:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   (+) Single and continuous conversion modes.
  33:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
  34:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   (+) Scan mode for conversion of several channels sequentially.
  35:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
  36:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   (+) Data alignment with in-built data coherency.
  37:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
  38:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   (+) Programmable sampling time (channel wise)
  39:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
  40:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   (+) External trigger (timer or EXTI) with configurable polarity
  41:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
  42:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   (+) DMA request generation for transfer of conversions data of regular group.
  43:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
  44:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   (+) Configurable delay between conversions in Dual interleaved mode.
  45:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
  46:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   (+) ADC channels selectable single/differential input.
  47:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
  48:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   (+) ADC offset shared on 4 offset instances.
  49:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   (+) ADC gain compensation
  50:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
  51:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   (+) ADC calibration
  52:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
  53:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   (+) ADC conversion of regular group.
  54:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
  55:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   (+) ADC supply requirements: 1.62 V to 3.6 V.
  56:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
  57:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   (+) ADC input range: from Vref- (connected to Vssa) to Vref+ (connected to
  58:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       Vdda or to an external voltage reference).
  59:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
  60:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
  61:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                      ##### How to use this driver #####
  62:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   ==============================================================================
  63:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     [..]
  64:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
  65:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      *** Configuration of top level parameters related to ADC ***
  66:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      ============================================================
  67:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      [..]
  68:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
  69:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     (#) Enable the ADC interface
ARM GAS  /tmp/ccJLHc1D.s 			page 123


  70:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         (++) As prerequisite, ADC clock must be configured at RCC top level.
  71:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
  72:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         (++) Two clock settings are mandatory:
  73:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****              (+++) ADC clock (core clock, also possibly conversion clock).
  74:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
  75:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****              (+++) ADC clock (conversions clock).
  76:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                    Two possible clock sources: synchronous clock derived from AHB clock
  77:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                    or asynchronous clock derived from system clock or PLL (output divider P)
  78:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                    running up to 75MHz.
  79:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
  80:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****              (+++) Example:
  81:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                    Into HAL_ADC_MspInit() (recommended code location) or with
  82:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                    other device clock parameters configuration:
  83:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                (+++) __HAL_RCC_ADC_CLK_ENABLE();                  (mandatory)
  84:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
  85:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                RCC_ADCCLKSOURCE_PLL enable:                       (optional: if asynchronous clock 
  86:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                (+++) RCC_PeriphClkInitTypeDef   RCC_PeriphClkInit;
  87:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                (+++) PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC;
  88:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                (+++) PeriphClkInit.AdcClockSelection    = RCC_ADCCLKSOURCE_PLL;
  89:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                (+++) HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit);
  90:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
  91:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         (++) ADC clock source and clock prescaler are configured at ADC level with
  92:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****              parameter "ClockPrescaler" using function HAL_ADC_Init().
  93:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
  94:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     (#) ADC pins configuration
  95:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****          (++) Enable the clock for the ADC GPIOs
  96:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               using macro __HAL_RCC_GPIOx_CLK_ENABLE()
  97:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****          (++) Configure these ADC pins in analog mode
  98:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               using function HAL_GPIO_Init()
  99:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 100:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     (#) Optionally, in case of usage of ADC with interruptions:
 101:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****          (++) Configure the NVIC for ADC
 102:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(ADCx_IRQn)
 103:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****          (++) Insert the ADC interruption handler function HAL_ADC_IRQHandler()
 104:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               into the function of corresponding ADC interruption vector
 105:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               ADCx_IRQHandler().
 106:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 107:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     (#) Optionally, in case of usage of DMA:
 108:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****          (++) Configure the DMA (DMA channel, mode normal or circular, ...)
 109:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               using function HAL_DMA_Init().
 110:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****          (++) Configure the NVIC for DMA
 111:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(DMAx_Channelx_IRQn)
 112:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****          (++) Insert the ADC interruption handler function HAL_ADC_IRQHandler()
 113:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               into the function of corresponding DMA interruption vector
 114:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               DMAx_Channelx_IRQHandler().
 115:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 116:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      *** Configuration of ADC, group regular, channels parameters ***
 117:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      ================================================================
 118:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      [..]
 119:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 120:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     (#) Configure the ADC parameters (resolution, data alignment, ...)
 121:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         and regular group parameters (conversion trigger, sequencer, ...)
 122:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         using function HAL_ADC_Init().
 123:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 124:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     (#) Configure the channels for regular group parameters (channel number,
 125:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         channel rank into sequencer, ..., into regular group)
 126:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         using function HAL_ADC_ConfigChannel().
ARM GAS  /tmp/ccJLHc1D.s 			page 124


 127:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 128:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     (#) Optionally, configure the analog watchdog parameters (channels
 129:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         monitored, thresholds, ...)
 130:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         using function HAL_ADC_AnalogWDGConfig().
 131:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 132:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      *** Execution of ADC conversions ***
 133:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      ====================================
 134:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      [..]
 135:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 136:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     (#) Optionally, perform an automatic ADC calibration to improve the
 137:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         conversion accuracy
 138:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         using function HAL_ADCEx_Calibration_Start().
 139:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 140:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     (#) ADC driver can be used among three modes: polling, interruption,
 141:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         transfer by DMA.
 142:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 143:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         (++) ADC conversion by polling:
 144:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           (+++) Activate the ADC peripheral and start conversions
 145:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                 using function HAL_ADC_Start()
 146:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           (+++) Wait for ADC conversion completion
 147:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                 using function HAL_ADC_PollForConversion()
 148:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           (+++) Retrieve conversion results
 149:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                 using function HAL_ADC_GetValue()
 150:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral
 151:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                 using function HAL_ADC_Stop()
 152:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 153:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         (++) ADC conversion by interruption:
 154:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           (+++) Activate the ADC peripheral and start conversions
 155:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                 using function HAL_ADC_Start_IT()
 156:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           (+++) Wait for ADC conversion completion by call of function
 157:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                 HAL_ADC_ConvCpltCallback()
 158:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                 (this function must be implemented in user program)
 159:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           (+++) Retrieve conversion results
 160:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                 using function HAL_ADC_GetValue()
 161:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral
 162:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                 using function HAL_ADC_Stop_IT()
 163:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 164:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         (++) ADC conversion with transfer by DMA:
 165:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           (+++) Activate the ADC peripheral and start conversions
 166:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                 using function HAL_ADC_Start_DMA()
 167:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           (+++) Wait for ADC conversion completion by call of function
 168:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                 HAL_ADC_ConvCpltCallback() or HAL_ADC_ConvHalfCpltCallback()
 169:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                 (these functions must be implemented in user program)
 170:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           (+++) Conversion results are automatically transferred by DMA into
 171:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                 destination variable address.
 172:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral
 173:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                 using function HAL_ADC_Stop_DMA()
 174:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 175:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      [..]
 176:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 177:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     (@) Callback functions must be implemented in user program:
 178:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (+@) HAL_ADC_ErrorCallback()
 179:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (+@) HAL_ADC_LevelOutOfWindowCallback() (callback of analog watchdog)
 180:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (+@) HAL_ADC_ConvCpltCallback()
 181:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (+@) HAL_ADC_ConvHalfCpltCallback
 182:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 183:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      *** Deinitialization of ADC ***
ARM GAS  /tmp/ccJLHc1D.s 			page 125


 184:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      ============================================================
 185:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      [..]
 186:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 187:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     (#) Disable the ADC interface
 188:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (++) ADC clock can be hard reset and disabled at RCC top level.
 189:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         (++) Hard reset of ADC peripherals
 190:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****              using macro __ADCx_FORCE_RESET(), __ADCx_RELEASE_RESET().
 191:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         (++) ADC clock disable
 192:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****              using the equivalent macro/functions as configuration step.
 193:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****              (+++) Example:
 194:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                    Into HAL_ADC_MspDeInit() (recommended code location) or with
 195:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                    other device clock parameters configuration:
 196:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                (+++) RCC_OscInitStructure.OscillatorType = RCC_OSCILLATORTYPE_HSI14;
 197:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                (+++) RCC_OscInitStructure.HSI14State = RCC_HSI14_OFF; (if not used for system clock
 198:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                (+++) HAL_RCC_OscConfig(&RCC_OscInitStructure);
 199:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 200:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     (#) ADC pins configuration
 201:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****          (++) Disable the clock for the ADC GPIOs
 202:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               using macro __HAL_RCC_GPIOx_CLK_DISABLE()
 203:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 204:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     (#) Optionally, in case of usage of ADC with interruptions:
 205:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****          (++) Disable the NVIC for ADC
 206:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(ADCx_IRQn)
 207:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 208:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     (#) Optionally, in case of usage of DMA:
 209:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****          (++) Deinitialize the DMA
 210:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               using function HAL_DMA_Init().
 211:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****          (++) Disable the NVIC for DMA
 212:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(DMAx_Channelx_IRQn)
 213:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 214:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     [..]
 215:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 216:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     *** Callback registration ***
 217:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     =============================================
 218:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     [..]
 219:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 220:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      The compilation flag USE_HAL_ADC_REGISTER_CALLBACKS, when set to 1,
 221:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      allows the user to configure dynamically the driver callbacks.
 222:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      Use Functions @ref HAL_ADC_RegisterCallback()
 223:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      to register an interrupt callback.
 224:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     [..]
 225:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 226:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      Function @ref HAL_ADC_RegisterCallback() allows to register following callbacks:
 227:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        (+) ConvCpltCallback               : ADC conversion complete callback
 228:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        (+) ConvHalfCpltCallback           : ADC conversion DMA half-transfer callback
 229:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        (+) LevelOutOfWindowCallback       : ADC analog watchdog 1 callback
 230:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        (+) ErrorCallback                  : ADC error callback
 231:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        (+) InjectedConvCpltCallback       : ADC group injected conversion complete callback
 232:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        (+) InjectedQueueOverflowCallback  : ADC group injected context queue overflow callback
 233:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        (+) LevelOutOfWindow2Callback      : ADC analog watchdog 2 callback
 234:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        (+) LevelOutOfWindow3Callback      : ADC analog watchdog 3 callback
 235:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        (+) EndOfSamplingCallback          : ADC end of sampling callback
 236:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        (+) MspInitCallback                : ADC Msp Init callback
 237:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        (+) MspDeInitCallback              : ADC Msp DeInit callback
 238:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      This function takes as parameters the HAL peripheral handle, the Callback ID
 239:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      and a pointer to the user callback function.
 240:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     [..]
ARM GAS  /tmp/ccJLHc1D.s 			page 126


 241:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 242:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      Use function @ref HAL_ADC_UnRegisterCallback to reset a callback to the default
 243:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      weak function.
 244:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     [..]
 245:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 246:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      @ref HAL_ADC_UnRegisterCallback takes as parameters the HAL peripheral handle,
 247:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      and the Callback ID.
 248:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      This function allows to reset following callbacks:
 249:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        (+) ConvCpltCallback               : ADC conversion complete callback
 250:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        (+) ConvHalfCpltCallback           : ADC conversion DMA half-transfer callback
 251:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        (+) LevelOutOfWindowCallback       : ADC analog watchdog 1 callback
 252:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        (+) ErrorCallback                  : ADC error callback
 253:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        (+) InjectedConvCpltCallback       : ADC group injected conversion complete callback
 254:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        (+) InjectedQueueOverflowCallback  : ADC group injected context queue overflow callback
 255:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        (+) LevelOutOfWindow2Callback      : ADC analog watchdog 2 callback
 256:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        (+) LevelOutOfWindow3Callback      : ADC analog watchdog 3 callback
 257:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        (+) EndOfSamplingCallback          : ADC end of sampling callback
 258:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        (+) MspInitCallback                : ADC Msp Init callback
 259:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        (+) MspDeInitCallback              : ADC Msp DeInit callback
 260:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      [..]
 261:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 262:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      By default, after the @ref HAL_ADC_Init() and when the state is @ref HAL_ADC_STATE_RESET
 263:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      all callbacks are set to the corresponding weak functions:
 264:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      examples @ref HAL_ADC_ConvCpltCallback(), @ref HAL_ADC_ErrorCallback().
 265:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      Exception done for MspInit and MspDeInit functions that are
 266:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      reset to the legacy weak functions in the @ref HAL_ADC_Init()/ @ref HAL_ADC_DeInit() only when
 267:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      these callbacks are null (not registered beforehand).
 268:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     [..]
 269:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 270:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      If MspInit or MspDeInit are not null, the @ref HAL_ADC_Init()/ @ref HAL_ADC_DeInit()
 271:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      keep and use the user MspInit/MspDeInit callbacks (registered beforehand) whatever the state.
 272:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      [..]
 273:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 274:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      Callbacks can be registered/unregistered in @ref HAL_ADC_STATE_READY state only.
 275:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      Exception done MspInit/MspDeInit functions that can be registered/unregistered
 276:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      in @ref HAL_ADC_STATE_READY or @ref HAL_ADC_STATE_RESET state,
 277:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      thus registered (user) MspInit/DeInit callbacks can be used during the Init/DeInit.
 278:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     [..]
 279:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 280:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      Then, the user first registers the MspInit/MspDeInit user callbacks
 281:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      using @ref HAL_ADC_RegisterCallback() before calling @ref HAL_ADC_DeInit()
 282:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      or @ref HAL_ADC_Init() function.
 283:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      [..]
 284:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 285:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      When the compilation flag USE_HAL_ADC_REGISTER_CALLBACKS is set to 0 or
 286:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      not defined, the callback registration feature is not available and all callbacks
 287:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      are set to the corresponding weak functions.
 288:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 289:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   @endverbatim
 290:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   ******************************************************************************
 291:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @attention
 292:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *
 293:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
 294:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * All rights reserved.</center></h2>
 295:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *
 296:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * This software component is licensed by ST under BSD 3-Clause license,
 297:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * the "License"; You may not use this file except in compliance with the
ARM GAS  /tmp/ccJLHc1D.s 			page 127


 298:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * License. You may obtain a copy of the License at:
 299:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *                        opensource.org/licenses/BSD-3-Clause
 300:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *
 301:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   ******************************************************************************
 302:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
 303:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 304:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /* Includes ------------------------------------------------------------------*/
 305:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #include "stm32g4xx_hal.h"
 306:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 307:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /** @addtogroup STM32G4xx_HAL_Driver
 308:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @{
 309:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
 310:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 311:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /** @defgroup ADC ADC
 312:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief ADC HAL module driver
 313:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @{
 314:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
 315:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 316:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #ifdef HAL_ADC_MODULE_ENABLED
 317:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 318:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /* Private typedef -----------------------------------------------------------*/
 319:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /* Private define ------------------------------------------------------------*/
 320:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 321:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /** @defgroup ADC_Private_Constants ADC Private Constants
 322:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @{
 323:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
 324:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 325:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #define ADC_CFGR_FIELDS_1  ((ADC_CFGR_RES    | ADC_CFGR_ALIGN   |\
 326:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                              ADC_CFGR_CONT   | ADC_CFGR_OVRMOD  |\
 327:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                              ADC_CFGR_DISCEN | ADC_CFGR_DISCNUM |\
 328:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                              ADC_CFGR_EXTEN  | ADC_CFGR_EXTSEL))   /*!< ADC_CFGR fields of paramete
 329:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                                                         when no regular conversion 
 330:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   
 331:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /* Timeout values for ADC operations (enable settling time,                   */
 332:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /*   disable settling time, ...).                                             */
 333:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /*   Values defined to be higher than worst cases: low clock frequency,       */
 334:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /*   maximum prescalers.                                                      */
 335:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #define ADC_ENABLE_TIMEOUT              (2UL)    /*!< ADC enable time-out value  */
 336:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #define ADC_DISABLE_TIMEOUT             (2UL)    /*!< ADC disable time-out value */
 337:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 338:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /* Timeout to wait for current conversion on going to be completed.           */
 339:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /* Timeout fixed to longest ADC conversion possible, for 1 channel:           */
 340:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /*   - maximum sampling time (640.5 adc_clk)                                  */
 341:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /*   - ADC resolution (Tsar 12 bits= 12.5 adc_clk)                            */
 342:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /*   - System clock / ADC clock <= 4096 (hypothesis of maximum clock ratio)   */
 343:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /*   - ADC oversampling ratio 256                                             */
 344:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /*   Calculation: 653 * 4096 * 256 CPU clock cycles max                       */
 345:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /* Unit: cycles of CPU clock.                                                 */
 346:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #define ADC_CONVERSION_TIME_MAX_CPU_CYCLES (653UL * 4096UL * 256UL)  /*!< ADC conversion completion
 347:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 348:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 349:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
 350:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @}
 351:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
 352:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 353:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /* Private macro -------------------------------------------------------------*/
 354:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /* Private variables ---------------------------------------------------------*/
ARM GAS  /tmp/ccJLHc1D.s 			page 128


 355:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /* Private function prototypes -----------------------------------------------*/
 356:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /* Exported functions --------------------------------------------------------*/
 357:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 358:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions ADC Exported Functions
 359:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @{
 360:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
 361:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 362:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group1 Initialization and de-initialization functions
 363:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief    ADC Initialization and Configuration functions
 364:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *
 365:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** @verbatim
 366:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****  ===============================================================================
 367:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               ##### Initialization and de-initialization functions #####
 368:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****  ===============================================================================
 369:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     [..]  This section provides functions allowing to:
 370:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (+) Initialize and configure the ADC.
 371:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (+) De-initialize the ADC.
 372:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** @endverbatim
 373:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @{
 374:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
 375:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 376:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
 377:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  Initialize the ADC peripheral and regular group according to
 378:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         parameters specified in structure "ADC_InitTypeDef".
 379:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note   As prerequisite, ADC clock must be configured at RCC top level
 380:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         (refer to description of RCC configuration for ADC
 381:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         in header of this file).
 382:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note   Possibility to update parameters on the fly:
 383:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         This function initializes the ADC MSP (HAL_ADC_MspInit()) only when
 384:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         coming from ADC state reset. Following calls to this function can
 385:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         be used to reconfigure some parameters of ADC_InitTypeDef
 386:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         structure on the fly, without modifying MSP configuration. If ADC
 387:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         MSP has to be modified again, HAL_ADC_DeInit() must be called
 388:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         before HAL_ADC_Init().
 389:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         The setting of these parameters is conditioned to ADC state.
 390:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         For parameters constraints, see comments of structure
 391:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         "ADC_InitTypeDef".
 392:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note   This function configures the ADC within 2 scopes: scope of entire
 393:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         ADC and scope of regular group. For parameters details, see comments
 394:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         of structure "ADC_InitTypeDef".
 395:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note   Parameters related to common ADC registers (ADC clock mode) are set
 396:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         only if all ADCs are disabled.
 397:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         If this is not the case, these common parameters setting are
 398:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         bypassed without error reporting: it can be the intended behaviour in
 399:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         case of update of a parameter of ADC_InitTypeDef on the fly,
 400:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         without  disabling the other ADCs.
 401:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param hadc ADC handle
 402:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval HAL status
 403:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
 404:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef *hadc)
 405:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
 406:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 407:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmpCFGR;
 408:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_adc_reg_is_conversion_on_going;
 409:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0UL;
 410:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
 411:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
ARM GAS  /tmp/ccJLHc1D.s 			page 129


 412:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 413:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Check ADC handle */
 414:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (hadc == NULL)
 415:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 416:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     return HAL_ERROR;
 417:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 418:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 419:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Check the parameters */
 420:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 421:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_CLOCKPRESCALER(hadc->Init.ClockPrescaler));
 422:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_RESOLUTION(hadc->Init.Resolution));
 423:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_DATA_ALIGN(hadc->Init.DataAlign));
 424:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_GAIN_COMPENSATION(hadc->Init.GainCompensation));
 425:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_SCAN_MODE(hadc->Init.ScanConvMode));
 426:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
 427:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_EXTTRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
 428:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_EXTTRIG(hadc, hadc->Init.ExternalTrigConv));
 429:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_SAMPLINGMODE(hadc->Init.SamplingMode));
 430:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DMAContinuousRequests));
 431:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
 432:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_OVERRUN(hadc->Init.Overrun));
 433:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.LowPowerAutoWait));
 434:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.OversamplingMode));
 435:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 436:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (hadc->Init.ScanConvMode != ADC_SCAN_DISABLE)
 437:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 438:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     assert_param(IS_ADC_REGULAR_NB_CONV(hadc->Init.NbrOfConversion));
 439:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DiscontinuousConvMode));
 440:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 441:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if (hadc->Init.DiscontinuousConvMode == ENABLE)
 442:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 443:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       assert_param(IS_ADC_REGULAR_DISCONT_NUMBER(hadc->Init.NbrOfDiscConversion));
 444:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 445:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 446:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 447:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* DISCEN and CONT bits cannot be set at the same time */
 448:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(!((hadc->Init.DiscontinuousConvMode == ENABLE) && (hadc->Init.ContinuousConvMode == 
 449:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 450:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Actions performed only if ADC is coming from state reset:                */
 451:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* - Initialization of ADC MSP                                              */
 452:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (hadc->State == HAL_ADC_STATE_RESET)
 453:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 454:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
 455:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Init the ADC Callback settings */
 456:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     hadc->ConvCpltCallback              = HAL_ADC_ConvCpltCallback;                 /* Legacy weak 
 457:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     hadc->ConvHalfCpltCallback          = HAL_ADC_ConvHalfCpltCallback;             /* Legacy weak 
 458:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     hadc->LevelOutOfWindowCallback      = HAL_ADC_LevelOutOfWindowCallback;         /* Legacy weak 
 459:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     hadc->ErrorCallback                 = HAL_ADC_ErrorCallback;                    /* Legacy weak 
 460:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     hadc->InjectedConvCpltCallback      = HAL_ADCEx_InjectedConvCpltCallback;       /* Legacy weak 
 461:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     hadc->InjectedQueueOverflowCallback = HAL_ADCEx_InjectedQueueOverflowCallback;  /* Legacy weak 
 462:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     hadc->LevelOutOfWindow2Callback     = HAL_ADCEx_LevelOutOfWindow2Callback;      /* Legacy weak 
 463:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     hadc->LevelOutOfWindow3Callback     = HAL_ADCEx_LevelOutOfWindow3Callback;      /* Legacy weak 
 464:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     hadc->EndOfSamplingCallback         = HAL_ADCEx_EndOfSamplingCallback;          /* Legacy weak 
 465:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 466:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if (hadc->MspInitCallback == NULL)
 467:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 468:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       hadc->MspInitCallback = HAL_ADC_MspInit; /* Legacy weak MspInit  */
ARM GAS  /tmp/ccJLHc1D.s 			page 130


 469:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 470:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 471:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Init the low level hardware */
 472:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     hadc->MspInitCallback(hadc);
 473:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #else
 474:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Init the low level hardware */
 475:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     HAL_ADC_MspInit(hadc);
 476:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 477:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 478:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Set ADC error code to none */
 479:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     ADC_CLEAR_ERRORCODE(hadc);
 480:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 481:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Initialize Lock */
 482:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     hadc->Lock = HAL_UNLOCKED;
 483:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 484:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 485:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* - Exit from deep-power-down mode and ADC voltage regulator enable        */
 486:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (LL_ADC_IsDeepPowerDownEnabled(hadc->Instance) != 0UL)
 487:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 488:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Disable ADC deep power down mode */
 489:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     LL_ADC_DisableDeepPowerDown(hadc->Instance);
 490:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 491:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* System was in deep power down mode, calibration must
 492:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      be relaunched or a previously saved calibration factor
 493:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      re-applied once the ADC voltage regulator is enabled */
 494:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 495:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 496:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (LL_ADC_IsInternalRegulatorEnabled(hadc->Instance) == 0UL)
 497:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 498:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Enable ADC internal voltage regulator */
 499:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     LL_ADC_EnableInternalRegulator(hadc->Instance);
 500:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 501:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Note: Variable divided by 2 to compensate partially              */
 502:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*       CPU processing cycles, scaling in us split to not          */
 503:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*       exceed 32 bits register capacity and handle low frequency. */
 504:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     wait_loop_index = ((LL_ADC_DELAY_INTERNAL_REGUL_STAB_US / 10UL) * (SystemCoreClock / (100000UL 
 505:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     while (wait_loop_index != 0UL)
 506:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 507:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       wait_loop_index--;
 508:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 509:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 510:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 511:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Verification that ADC voltage regulator is correctly enabled, whether    */
 512:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* or not ADC is coming from state reset (if any potential problem of       */
 513:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* clocking, voltage regulator would not be enabled).                       */
 514:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (LL_ADC_IsInternalRegulatorEnabled(hadc->Instance) == 0UL)
 515:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 516:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Update ADC state machine to error */
 517:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 518:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 519:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Set ADC error code to ADC peripheral internal error */
 520:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 521:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 522:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
 523:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 524:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 525:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Configuration of ADC parameters if previous preliminary actions are      */
ARM GAS  /tmp/ccJLHc1D.s 			page 131


 526:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* correctly completed and if there is no conversion on going on regular    */
 527:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* group (ADC may already be enabled at this point if HAL_ADC_Init() is     */
 528:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* called to update a parameter on the fly).                                */
 529:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   tmp_adc_reg_is_conversion_on_going = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
 530:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 531:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) == 0UL)
 532:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       && (tmp_adc_reg_is_conversion_on_going == 0UL)
 533:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      )
 534:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 535:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Set ADC state */
 536:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
 537:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY,
 538:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                       HAL_ADC_STATE_BUSY_INTERNAL);
 539:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 540:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Configuration of common ADC parameters                                 */
 541:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 542:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Parameters update conditioned to ADC state:                            */
 543:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Parameters that can be updated only when ADC is disabled:              */
 544:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*  - clock configuration                                                 */
 545:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
 546:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 547:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if (__LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) == 0UL)
 548:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 549:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Reset configuration of ADC common register CCR:                      */
 550:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /*                                                                      */
 551:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /*   - ADC clock mode and ACC prescaler (CKMODE and PRESC bits)are set  */
 552:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /*     according to adc->Init.ClockPrescaler. It selects the clock      */
 553:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /*    source and sets the clock division factor.                        */
 554:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /*                                                                      */
 555:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Some parameters of this register are not reset, since they are set   */
 556:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* by other functions and must be kept in case of usage of this         */
 557:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* function on the fly (update of a parameter of ADC_InitTypeDef        */
 558:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* without needing to reconfigure all other ADC groups/channels         */
 559:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* parameters):                                                         */
 560:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /*   - when multimode feature is available, multimode-related           */
 561:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /*     parameters: MDMA, DMACFG, DELAY, DUAL (set by API                */
 562:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /*     HAL_ADCEx_MultiModeConfigChannel() )                             */
 563:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /*   - internal measurement paths: Vbat, temperature sensor, Vref       */
 564:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /*     (set into HAL_ADC_ConfigChannel() or                             */
 565:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /*     HAL_ADCEx_InjectedConfigChannel() )                              */
 566:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         LL_ADC_SetCommonClock(__LL_ADC_COMMON_INSTANCE(hadc->Instance), hadc->Init.ClockPrescaler);
 567:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 568:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 569:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 570:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Configuration of ADC:                                                  */
 571:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*  - resolution                               Init.Resolution            */
 572:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*  - data alignment                           Init.DataAlign             */
 573:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*  - external trigger to start conversion     Init.ExternalTrigConv      */
 574:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*  - external trigger polarity                Init.ExternalTrigConvEdge  */
 575:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*  - continuous conversion mode               Init.ContinuousConvMode    */
 576:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*  - overrun                                  Init.Overrun               */
 577:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*  - discontinuous mode                       Init.DiscontinuousConvMode */
 578:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*  - discontinuous mode channel count         Init.NbrOfDiscConversion   */
 579:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmpCFGR  = (ADC_CFGR_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)           |
 580:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                 hadc->Init.Overrun                                                     |
 581:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                 hadc->Init.DataAlign                                                   |
 582:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                 hadc->Init.Resolution                                                  |
ARM GAS  /tmp/ccJLHc1D.s 			page 132


 583:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                 ADC_CFGR_REG_DISCONTINUOUS((uint32_t)hadc->Init.DiscontinuousConvMode));
 584:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 585:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if (hadc->Init.DiscontinuousConvMode == ENABLE)
 586:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 587:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       tmpCFGR |= ADC_CFGR_DISCONTINUOUS_NUM(hadc->Init.NbrOfDiscConversion);
 588:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 589:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 590:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Enable external trigger if trigger selection is different of software  */
 591:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* start.                                                                 */
 592:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Note: This configuration keeps the hardware feature of parameter       */
 593:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
 594:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*       software start.                                                  */
 595:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if (hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 596:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 597:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       tmpCFGR |= ((hadc->Init.ExternalTrigConv & ADC_CFGR_EXTSEL)
 598:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                   | hadc->Init.ExternalTrigConvEdge
 599:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                  );
 600:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 601:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 602:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Update Configuration Register CFGR */
 603:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     MODIFY_REG(hadc->Instance->CFGR, ADC_CFGR_FIELDS_1, tmpCFGR);
 604:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 605:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Configuration of sampling mode */
 606:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     MODIFY_REG(hadc->Instance->CFGR2, ADC_CFGR2_BULB | ADC_CFGR2_SMPTRIG, hadc->Init.SamplingMode);
 607:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 608:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Parameters update conditioned to ADC state:                            */
 609:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Parameters that can be updated when ADC is disabled or enabled without */
 610:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* conversion on going on regular and injected groups:                    */
 611:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*  - Gain Compensation               Init.GainCompensation               */
 612:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*  - DMA continuous request          Init.DMAContinuousRequests          */
 613:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*  - LowPowerAutoWait feature        Init.LowPowerAutoWait               */
 614:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*  - Oversampling parameters         Init.Oversampling                   */
 615:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
 616:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 617:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if ((tmp_adc_is_conversion_on_going_regular == 0UL)
 618:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         && (tmp_adc_is_conversion_on_going_injected == 0UL)
 619:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        )
 620:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 621:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       tmpCFGR = (ADC_CFGR_DFSDM(hadc)                                            |
 622:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                  ADC_CFGR_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)        |
 623:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                  ADC_CFGR_DMACONTREQ((uint32_t)hadc->Init.DMAContinuousRequests));
 624:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 625:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       MODIFY_REG(hadc->Instance->CFGR, ADC_CFGR_FIELDS_2, tmpCFGR);
 626:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 627:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if (hadc->Init.GainCompensation != 0UL)
 628:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 629:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         SET_BIT(hadc->Instance->CFGR2, ADC_CFGR2_GCOMP);
 630:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         MODIFY_REG(hadc->Instance->GCOMP, ADC_GCOMP_GCOMPCOEFF, hadc->Init.GainCompensation);
 631:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 632:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       else
 633:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 634:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         CLEAR_BIT(hadc->Instance->CFGR2, ADC_CFGR2_GCOMP);
 635:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         MODIFY_REG(hadc->Instance->GCOMP, ADC_GCOMP_GCOMPCOEFF, 0UL);
 636:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 637:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 638:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if (hadc->Init.OversamplingMode == ENABLE)
 639:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
ARM GAS  /tmp/ccJLHc1D.s 			page 133


 640:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         assert_param(IS_ADC_OVERSAMPLING_RATIO(hadc->Init.Oversampling.Ratio));
 641:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         assert_param(IS_ADC_RIGHT_BIT_SHIFT(hadc->Init.Oversampling.RightBitShift));
 642:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         assert_param(IS_ADC_TRIGGERED_OVERSAMPLING_MODE(hadc->Init.Oversampling.TriggeredMode));
 643:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         assert_param(IS_ADC_REGOVERSAMPLING_MODE(hadc->Init.Oversampling.OversamplingStopReset));
 644:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 645:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Configuration of Oversampler:                                      */
 646:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /*  - Oversampling Ratio                                              */
 647:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /*  - Right bit shift                                                 */
 648:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /*  - Triggered mode                                                  */
 649:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /*  - Oversampling mode (continued/resumed)                           */
 650:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         MODIFY_REG(hadc->Instance->CFGR2,
 651:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                    ADC_CFGR2_OVSR  |
 652:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                    ADC_CFGR2_OVSS  |
 653:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                    ADC_CFGR2_TROVS |
 654:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                    ADC_CFGR2_ROVSM,
 655:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                    ADC_CFGR2_ROVSE                       |
 656:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                    hadc->Init.Oversampling.Ratio         |
 657:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                    hadc->Init.Oversampling.RightBitShift |
 658:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                    hadc->Init.Oversampling.TriggeredMode |
 659:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                    hadc->Init.Oversampling.OversamplingStopReset
 660:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                   );
 661:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 662:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       else
 663:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 664:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Disable ADC oversampling scope on ADC group regular */
 665:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         CLEAR_BIT(hadc->Instance->CFGR2, ADC_CFGR2_ROVSE);
 666:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 667:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 668:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 669:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 670:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Configuration of regular group sequencer:                              */
 671:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* - if scan mode is disabled, regular channels sequence length is set to */
 672:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*   0x00: 1 channel converted (channel on regular rank 1)                */
 673:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*   Parameter "NbrOfConversion" is discarded.                            */
 674:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*   Note: Scan mode is not present by hardware on this device, but       */
 675:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*   emulated by software for alignment over all STM32 devices.           */
 676:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* - if scan mode is enabled, regular channels sequence length is set to  */
 677:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*   parameter "NbrOfConversion".                                         */
 678:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 679:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if (hadc->Init.ScanConvMode == ADC_SCAN_ENABLE)
 680:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 681:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Set number of ranks in regular group sequencer */
 682:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       MODIFY_REG(hadc->Instance->SQR1, ADC_SQR1_L, (hadc->Init.NbrOfConversion - (uint8_t)1));
 683:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 684:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     else
 685:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 686:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       CLEAR_BIT(hadc->Instance->SQR1, ADC_SQR1_L);
 687:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 688:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 689:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Initialize the ADC state */
 690:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Clear HAL_ADC_STATE_BUSY_INTERNAL bit, set HAL_ADC_STATE_READY bit */
 691:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_BUSY_INTERNAL, HAL_ADC_STATE_READY);
 692:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 693:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   else
 694:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 695:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Update ADC state machine to error */
 696:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
ARM GAS  /tmp/ccJLHc1D.s 			page 134


 697:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 698:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
 699:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 700:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 701:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Return function status */
 702:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   return tmp_hal_status;
 703:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
 704:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 705:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
 706:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  Deinitialize the ADC peripheral registers to their default reset
 707:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         values, with deinitialization of the ADC MSP.
 708:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note   For devices with several ADCs: reset of ADC common registers is done
 709:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         only if all ADCs sharing the same common group are disabled.
 710:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         (function "HAL_ADC_MspDeInit()" is also called under the same conditions:
 711:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         all ADC instances use the same core clock at RCC level, disabling
 712:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         the core clock reset all ADC instances).
 713:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         If this is not the case, reset of these common parameters reset is
 714:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         bypassed without error reporting: it can be the intended behavior in
 715:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         case of reset of a single ADC while the other ADCs sharing the same
 716:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         common group is still running.
 717:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note   By default, HAL_ADC_DeInit() set ADC in mode deep power-down:
 718:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         this saves more power by reducing leakage currents
 719:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         and is particularly interesting before entering MCU low-power modes.
 720:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param hadc ADC handle
 721:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval HAL status
 722:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
 723:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_DeInit(ADC_HandleTypeDef *hadc)
 724:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
 725:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 726:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 727:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Check ADC handle */
 728:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (hadc == NULL)
 729:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 730:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     return HAL_ERROR;
 731:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 732:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 733:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Check the parameters */
 734:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 735:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 736:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Set ADC state */
 737:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_BUSY_INTERNAL);
 738:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 739:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Stop potential conversion on going */
 740:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_INJECTED_GROUP);
 741:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 742:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped            */
 743:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Flush register JSQR: reset the queue sequencer when injected             */
 744:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* queue sequencer is enabled and ADC disabled.                             */
 745:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* The software and hardware triggers of the injected sequence are both     */
 746:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* internally disabled just after the completion of the last valid          */
 747:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* injected sequence.                                                       */
 748:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   SET_BIT(hadc->Instance->CFGR, ADC_CFGR_JQM);
 749:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 750:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
 751:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
 752:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 753:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Disable the ADC peripheral */
ARM GAS  /tmp/ccJLHc1D.s 			page 135


 754:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmp_hal_status = ADC_Disable(hadc);
 755:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 756:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Check if ADC is effectively disabled */
 757:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
 758:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 759:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Change ADC state */
 760:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       hadc->State = HAL_ADC_STATE_READY;
 761:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 762:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 763:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 764:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Note: HAL ADC deInit is done independently of ADC conversion stop        */
 765:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /*       and disable return status. In case of status fail, attempt to      */
 766:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /*       perform deinitialization anyway and it is up user code in          */
 767:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /*       in HAL_ADC_MspDeInit() to reset the ADC peripheral using           */
 768:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /*       system RCC hard reset.                                             */
 769:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 770:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* ========== Reset ADC registers ========== */
 771:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Reset register IER */
 772:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_AWD3  | ADC_IT_AWD2 | ADC_IT_AWD1 |
 773:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                               ADC_IT_JQOVF | ADC_IT_OVR  |
 774:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                               ADC_IT_JEOS  | ADC_IT_JEOC |
 775:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                               ADC_IT_EOS   | ADC_IT_EOC  |
 776:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                               ADC_IT_EOSMP | ADC_IT_RDY));
 777:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 778:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Reset register ISR */
 779:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_AWD3  | ADC_FLAG_AWD2 | ADC_FLAG_AWD1 |
 780:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                               ADC_FLAG_JQOVF | ADC_FLAG_OVR  |
 781:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                               ADC_FLAG_JEOS  | ADC_FLAG_JEOC |
 782:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                               ADC_FLAG_EOS   | ADC_FLAG_EOC  |
 783:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                               ADC_FLAG_EOSMP | ADC_FLAG_RDY));
 784:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 785:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Reset register CR */
 786:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Bits ADC_CR_JADSTP, ADC_CR_ADSTP, ADC_CR_JADSTART, ADC_CR_ADSTART,
 787:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      ADC_CR_ADCAL, ADC_CR_ADDIS and ADC_CR_ADEN are in access mode "read-set":
 788:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      no direct reset applicable.
 789:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      Update CR register to reset value where doable by software */
 790:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->CR, ADC_CR_ADVREGEN | ADC_CR_ADCALDIF);
 791:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   SET_BIT(hadc->Instance->CR, ADC_CR_DEEPPWD);
 792:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 793:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Reset register CFGR */
 794:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->CFGR, ADC_CFGR_FIELDS);
 795:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   SET_BIT(hadc->Instance->CFGR, ADC_CFGR_JQDIS);
 796:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 797:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Reset register CFGR2 */
 798:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->CFGR2, ADC_CFGR2_ROVSM  | ADC_CFGR2_TROVS   | ADC_CFGR2_OVSS |
 799:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             ADC_CFGR2_OVSR  | ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSE);
 800:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 801:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Reset register SMPR1 */
 802:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->SMPR1, ADC_SMPR1_FIELDS);
 803:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 804:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Reset register SMPR2 */
 805:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->SMPR2, ADC_SMPR2_SMP18 | ADC_SMPR2_SMP17 | ADC_SMPR2_SMP16 |
 806:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             ADC_SMPR2_SMP15 | ADC_SMPR2_SMP14 | ADC_SMPR2_SMP13 |
 807:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             ADC_SMPR2_SMP12 | ADC_SMPR2_SMP11 | ADC_SMPR2_SMP10);
 808:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 809:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Reset register TR1 */
 810:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->TR1, ADC_TR1_HT1 | ADC_TR1_LT1);
ARM GAS  /tmp/ccJLHc1D.s 			page 136


 811:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 812:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Reset register TR2 */
 813:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->TR2, ADC_TR2_HT2 | ADC_TR2_LT2);
 814:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 815:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Reset register TR3 */
 816:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->TR3, ADC_TR3_HT3 | ADC_TR3_LT3);
 817:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 818:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Reset register SQR1 */
 819:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->SQR1, ADC_SQR1_SQ4 | ADC_SQR1_SQ3 | ADC_SQR1_SQ2 |
 820:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             ADC_SQR1_SQ1 | ADC_SQR1_L);
 821:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 822:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Reset register SQR2 */
 823:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->SQR2, ADC_SQR2_SQ9 | ADC_SQR2_SQ8 | ADC_SQR2_SQ7 |
 824:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             ADC_SQR2_SQ6 | ADC_SQR2_SQ5);
 825:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 826:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Reset register SQR3 */
 827:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->SQR3, ADC_SQR3_SQ14 | ADC_SQR3_SQ13 | ADC_SQR3_SQ12 |
 828:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             ADC_SQR3_SQ11 | ADC_SQR3_SQ10);
 829:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 830:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Reset register SQR4 */
 831:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->SQR4, ADC_SQR4_SQ16 | ADC_SQR4_SQ15);
 832:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 833:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Register JSQR was reset when the ADC was disabled */
 834:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 835:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Reset register DR */
 836:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* bits in access mode read only, no direct reset applicable*/
 837:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 838:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Reset register OFR1 */
 839:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->OFR1, ADC_OFR1_OFFSET1_EN | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1);
 840:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Reset register OFR2 */
 841:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->OFR2, ADC_OFR2_OFFSET2_EN | ADC_OFR2_OFFSET2_CH | ADC_OFR2_OFFSET2);
 842:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Reset register OFR3 */
 843:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->OFR3, ADC_OFR3_OFFSET3_EN | ADC_OFR3_OFFSET3_CH | ADC_OFR3_OFFSET3);
 844:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Reset register OFR4 */
 845:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->OFR4, ADC_OFR4_OFFSET4_EN | ADC_OFR4_OFFSET4_CH | ADC_OFR4_OFFSET4);
 846:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 847:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Reset registers JDR1, JDR2, JDR3, JDR4 */
 848:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* bits in access mode read only, no direct reset applicable*/
 849:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 850:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Reset register AWD2CR */
 851:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->AWD2CR, ADC_AWD2CR_AWD2CH);
 852:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 853:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Reset register AWD3CR */
 854:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->AWD3CR, ADC_AWD3CR_AWD3CH);
 855:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 856:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Reset register DIFSEL */
 857:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->DIFSEL, ADC_DIFSEL_DIFSEL);
 858:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 859:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Reset register CALFACT */
 860:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->CALFACT, ADC_CALFACT_CALFACT_D | ADC_CALFACT_CALFACT_S);
 861:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 862:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 863:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* ========== Reset common ADC registers ========== */
 864:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 865:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Software is allowed to change common parameters only when all the other
 866:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      ADCs are disabled.   */
 867:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (__LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) == 0UL)
ARM GAS  /tmp/ccJLHc1D.s 			page 137


 868:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 869:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Reset configuration of ADC common register CCR:
 870:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       - clock mode: CKMODE, PRESCEN
 871:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       - multimode related parameters (when this feature is available): MDMA,
 872:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         DMACFG, DELAY, DUAL (set by HAL_ADCEx_MultiModeConfigChannel() API)
 873:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       - internal measurement paths: Vbat, temperature sensor, Vref (set into
 874:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         HAL_ADC_ConfigChannel() or HAL_ADCEx_InjectedConfigChannel() )
 875:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     */
 876:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     ADC_CLEAR_COMMON_CONTROL_REGISTER(hadc);
 877:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 878:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 879:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* DeInit the low level hardware.
 880:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 881:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      For example:
 882:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     __HAL_RCC_ADC_FORCE_RESET();
 883:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     __HAL_RCC_ADC_RELEASE_RESET();
 884:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     __HAL_RCC_ADC_CLK_DISABLE();
 885:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 886:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     Keep in mind that all ADCs use the same clock: disabling
 887:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     the clock will reset all ADCs.
 888:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 889:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
 890:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
 891:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (hadc->MspDeInitCallback == NULL)
 892:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 893:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     hadc->MspDeInitCallback = HAL_ADC_MspDeInit; /* Legacy weak MspDeInit  */
 894:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 895:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 896:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* DeInit the low level hardware: RCC clock, NVIC */
 897:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   hadc->MspDeInitCallback(hadc);
 898:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #else
 899:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* DeInit the low level hardware: RCC clock, NVIC */
 900:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_ADC_MspDeInit(hadc);
 901:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 902:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 903:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Set ADC error code to none */
 904:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   ADC_CLEAR_ERRORCODE(hadc);
 905:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 906:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Reset injected channel configuration parameters */
 907:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   hadc->InjectionConfig.ContextQueue = 0;
 908:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   hadc->InjectionConfig.ChannelCount = 0;
 909:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 910:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Set ADC state */
 911:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   hadc->State = HAL_ADC_STATE_RESET;
 912:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 913:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Process unlocked */
 914:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 915:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 916:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Return function status */
 917:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   return tmp_hal_status;
 918:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
 919:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 920:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
 921:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  Initialize the ADC MSP.
 922:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param hadc ADC handle
 923:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval None
 924:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
ARM GAS  /tmp/ccJLHc1D.s 			page 138


 925:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** __weak void HAL_ADC_MspInit(ADC_HandleTypeDef *hadc)
 926:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
 145              		.loc 2 926 1 is_stmt 1 view -0
 146              		.cfi_startproc
 147              		@ args = 0, pretend = 0, frame = 0
 148              		@ frame_needed = 0, uses_anonymous_args = 0
 149              		@ link register save eliminated.
 927:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 928:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   UNUSED(hadc);
 150              		.loc 2 928 3 view .LVU21
 929:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
 931:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             function HAL_ADC_MspInit must be implemented in the user file.
 932:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****    */
 933:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
 151              		.loc 2 933 1 is_stmt 0 view .LVU22
 152 0000 7047     		bx	lr
 153              		.cfi_endproc
 154              	.LFE359:
 156              		.section	.text.HAL_ADC_Init,"ax",%progbits
 157              		.align	1
 158              		.global	HAL_ADC_Init
 159              		.syntax unified
 160              		.thumb
 161              		.thumb_func
 162              		.fpu fpv4-sp-d16
 164              	HAL_ADC_Init:
 165              	.LVL9:
 166              	.LFB357:
 405:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 167              		.loc 2 405 1 is_stmt 1 view -0
 168              		.cfi_startproc
 169              		@ args = 0, pretend = 0, frame = 8
 170              		@ frame_needed = 0, uses_anonymous_args = 0
 406:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmpCFGR;
 171              		.loc 2 406 3 view .LVU24
 407:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_adc_reg_is_conversion_on_going;
 172              		.loc 2 407 3 view .LVU25
 408:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0UL;
 173              		.loc 2 408 3 view .LVU26
 409:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
 174              		.loc 2 409 3 view .LVU27
 405:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 175              		.loc 2 405 1 is_stmt 0 view .LVU28
 176 0000 73B5     		push	{r0, r1, r4, r5, r6, lr}
 177              	.LCFI2:
 178              		.cfi_def_cfa_offset 24
 179              		.cfi_offset 4, -16
 180              		.cfi_offset 5, -12
 181              		.cfi_offset 6, -8
 182              		.cfi_offset 14, -4
 409:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
 183              		.loc 2 409 17 view .LVU29
 184 0002 0023     		movs	r3, #0
 185 0004 0193     		str	r3, [sp, #4]
 410:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
 186              		.loc 2 410 3 is_stmt 1 view .LVU30
ARM GAS  /tmp/ccJLHc1D.s 			page 139


 411:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 187              		.loc 2 411 3 view .LVU31
 414:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 188              		.loc 2 414 3 view .LVU32
 414:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 189              		.loc 2 414 6 is_stmt 0 view .LVU33
 190 0006 0446     		mov	r4, r0
 191 0008 0028     		cmp	r0, #0
 192 000a 00F0F980 		beq	.L29
 420:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_CLOCKPRESCALER(hadc->Init.ClockPrescaler));
 193              		.loc 2 420 3 is_stmt 1 view .LVU34
 421:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_RESOLUTION(hadc->Init.Resolution));
 194              		.loc 2 421 3 view .LVU35
 422:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_DATA_ALIGN(hadc->Init.DataAlign));
 195              		.loc 2 422 3 view .LVU36
 423:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_GAIN_COMPENSATION(hadc->Init.GainCompensation));
 196              		.loc 2 423 3 view .LVU37
 424:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_SCAN_MODE(hadc->Init.ScanConvMode));
 197              		.loc 2 424 3 view .LVU38
 425:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
 198              		.loc 2 425 3 view .LVU39
 426:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_EXTTRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
 199              		.loc 2 426 3 view .LVU40
 427:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_EXTTRIG(hadc, hadc->Init.ExternalTrigConv));
 200              		.loc 2 427 3 view .LVU41
 428:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_SAMPLINGMODE(hadc->Init.SamplingMode));
 201              		.loc 2 428 3 view .LVU42
 429:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DMAContinuousRequests));
 202              		.loc 2 429 3 view .LVU43
 430:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
 203              		.loc 2 430 3 view .LVU44
 431:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_OVERRUN(hadc->Init.Overrun));
 204              		.loc 2 431 3 view .LVU45
 432:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.LowPowerAutoWait));
 205              		.loc 2 432 3 view .LVU46
 433:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.OversamplingMode));
 206              		.loc 2 433 3 view .LVU47
 434:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 207              		.loc 2 434 3 view .LVU48
 436:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 208              		.loc 2 436 3 view .LVU49
 443:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 209              		.loc 2 443 7 view .LVU50
 448:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 210              		.loc 2 448 3 view .LVU51
 452:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 211              		.loc 2 452 3 view .LVU52
 452:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 212              		.loc 2 452 11 is_stmt 0 view .LVU53
 213 000e C56D     		ldr	r5, [r0, #92]
 452:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 214              		.loc 2 452 6 view .LVU54
 215 0010 25B9     		cbnz	r5, .L7
 475:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 216              		.loc 2 475 5 is_stmt 1 view .LVU55
 217 0012 FFF7FEFF 		bl	HAL_ADC_MspInit
 218              	.LVL10:
ARM GAS  /tmp/ccJLHc1D.s 			page 140


 479:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 219              		.loc 2 479 5 view .LVU56
 220 0016 2566     		str	r5, [r4, #96]
 482:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 221              		.loc 2 482 5 view .LVU57
 482:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 222              		.loc 2 482 16 is_stmt 0 view .LVU58
 223 0018 84F85850 		strb	r5, [r4, #88]
 224              	.L7:
 486:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 225              		.loc 2 486 3 is_stmt 1 view .LVU59
 486:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 226              		.loc 2 486 7 is_stmt 0 view .LVU60
 227 001c 2068     		ldr	r0, [r4]
 228              	.LVL11:
 229              	.LBB202:
 230              	.LBI202:
6512:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 231              		.loc 1 6512 26 is_stmt 1 view .LVU61
 232              	.LBB203:
6514:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 233              		.loc 1 6514 3 view .LVU62
6514:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 234              		.loc 1 6514 12 is_stmt 0 view .LVU63
 235 001e 8368     		ldr	r3, [r0, #8]
6514:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 236              		.loc 1 6514 74 view .LVU64
 237 0020 9900     		lsls	r1, r3, #2
 238              	.LVL12:
6514:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 239              		.loc 1 6514 74 view .LVU65
 240              	.LBE203:
 241              	.LBE202:
 489:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 242              		.loc 2 489 5 is_stmt 1 view .LVU66
 243              	.LBB204:
 244              	.LBI204:
6498:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 245              		.loc 1 6498 22 view .LVU67
 246              	.LBB205:
6503:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 247              		.loc 1 6503 3 view .LVU68
 248 0022 41BF     		itttt	mi
 249 0024 8368     		ldrmi	r3, [r0, #8]
 250 0026 23F02043 		bicmi	r3, r3, #-1610612736
 251 002a 23F03F03 		bicmi	r3, r3, #63
 252 002e 8360     		strmi	r3, [r0, #8]
 253              	.LVL13:
6503:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 254              		.loc 1 6503 3 is_stmt 0 view .LVU69
 255              	.LBE205:
 256              	.LBE204:
 496:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 257              		.loc 2 496 3 is_stmt 1 view .LVU70
 258              	.LBB206:
 259              	.LBI206:
6561:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
ARM GAS  /tmp/ccJLHc1D.s 			page 141


 260              		.loc 1 6561 26 view .LVU71
 261              	.LBB207:
6563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 262              		.loc 1 6563 3 view .LVU72
6563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 263              		.loc 1 6563 12 is_stmt 0 view .LVU73
 264 0030 8368     		ldr	r3, [r0, #8]
6563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 265              		.loc 1 6563 76 view .LVU74
 266 0032 DA00     		lsls	r2, r3, #3
 267 0034 40F1A280 		bpl	.L9
 268              	.LVL14:
 269              	.L14:
6563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 270              		.loc 1 6563 76 view .LVU75
 271              	.LBE207:
 272              	.LBE206:
 514:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 273              		.loc 2 514 3 is_stmt 1 view .LVU76
 274              	.LBB208:
 275              	.LBI208:
6561:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 276              		.loc 1 6561 26 view .LVU77
 277              	.LBB209:
6563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 278              		.loc 1 6563 3 view .LVU78
6563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 279              		.loc 1 6563 12 is_stmt 0 view .LVU79
 280 0038 8368     		ldr	r3, [r0, #8]
6563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 281              		.loc 1 6563 76 view .LVU80
 282 003a DB00     		lsls	r3, r3, #3
 283 003c 00F1B380 		bmi	.L30
 284              	.LVL15:
6563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 285              		.loc 1 6563 76 view .LVU81
 286              	.LBE209:
 287              	.LBE208:
 517:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 288              		.loc 2 517 5 is_stmt 1 view .LVU82
 289 0040 E36D     		ldr	r3, [r4, #92]
 290 0042 43F01003 		orr	r3, r3, #16
 291 0046 E365     		str	r3, [r4, #92]
 520:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 292              		.loc 2 520 5 view .LVU83
 293 0048 236E     		ldr	r3, [r4, #96]
 294 004a 43F00103 		orr	r3, r3, #1
 295 004e 2366     		str	r3, [r4, #96]
 522:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 296              		.loc 2 522 5 view .LVU84
 297              	.LVL16:
 522:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 298              		.loc 2 522 20 is_stmt 0 view .LVU85
 299 0050 0121     		movs	r1, #1
 300              	.LVL17:
 301              	.L10:
 529:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
ARM GAS  /tmp/ccJLHc1D.s 			page 142


 302              		.loc 2 529 3 is_stmt 1 view .LVU86
 529:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 303              		.loc 2 529 40 is_stmt 0 view .LVU87
 304 0052 FFF7FEFF 		bl	LL_ADC_REG_IsConversionOngoing
 305              	.LVL18:
 531:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       && (tmp_adc_reg_is_conversion_on_going == 0UL)
 306              		.loc 2 531 3 is_stmt 1 view .LVU88
 531:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       && (tmp_adc_reg_is_conversion_on_going == 0UL)
 307              		.loc 2 531 13 is_stmt 0 view .LVU89
 308 0056 E36D     		ldr	r3, [r4, #92]
 531:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       && (tmp_adc_reg_is_conversion_on_going == 0UL)
 309              		.loc 2 531 21 view .LVU90
 310 0058 03F01003 		and	r3, r3, #16
 531:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       && (tmp_adc_reg_is_conversion_on_going == 0UL)
 311              		.loc 2 531 6 view .LVU91
 312 005c 0343     		orrs	r3, r3, r0
 536:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY,
 313              		.loc 2 536 5 view .LVU92
 314 005e E36D     		ldr	r3, [r4, #92]
 531:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       && (tmp_adc_reg_is_conversion_on_going == 0UL)
 315              		.loc 2 531 6 view .LVU93
 316 0060 40F0CB80 		bne	.L15
 536:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY,
 317              		.loc 2 536 5 is_stmt 1 view .LVU94
 318 0064 23F48173 		bic	r3, r3, #258
 319 0068 43F00203 		orr	r3, r3, #2
 545:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 320              		.loc 2 545 9 is_stmt 0 view .LVU95
 321 006c 2068     		ldr	r0, [r4]
 322              	.LVL19:
 536:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY,
 323              		.loc 2 536 5 view .LVU96
 324 006e E365     		str	r3, [r4, #92]
 545:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 325              		.loc 2 545 5 is_stmt 1 view .LVU97
 326              	.LVL20:
 327              	.LBB210:
 328              	.LBI210:
6621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 329              		.loc 1 6621 26 view .LVU98
 330              	.LBB211:
6623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 331              		.loc 1 6623 3 view .LVU99
6623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 332              		.loc 1 6623 12 is_stmt 0 view .LVU100
 333 0070 8368     		ldr	r3, [r0, #8]
 334              	.LVL21:
6623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 335              		.loc 1 6623 12 view .LVU101
 336              	.LBE211:
 337              	.LBE210:
 545:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 338              		.loc 2 545 8 view .LVU102
 339 0072 DE07     		lsls	r6, r3, #31
 340 0074 0ED4     		bmi	.L16
 547:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 341              		.loc 2 547 7 is_stmt 1 view .LVU103
ARM GAS  /tmp/ccJLHc1D.s 			page 143


 547:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 342              		.loc 2 547 93 is_stmt 0 view .LVU104
 343 0076 B0F1A04F 		cmp	r0, #1342177280
 344 007a 624A     		ldr	r2, .L48
 345 007c 02D0     		beq	.L17
 547:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 346              		.loc 2 547 11 discriminator 2 view .LVU105
 347 007e 9042     		cmp	r0, r2
 348 0080 40F09380 		bne	.L18
 349              	.L17:
 350              	.LVL22:
 351              	.LBB212:
 352              	.LBI212:
6621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 353              		.loc 1 6621 26 is_stmt 1 view .LVU106
 354              	.LBB213:
6623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 355              		.loc 1 6623 3 view .LVU107
6623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 356              		.loc 1 6623 12 is_stmt 0 view .LVU108
 357 0084 4FF0A043 		mov	r3, #1342177280
 358 0088 9D68     		ldr	r5, [r3, #8]
 359              	.LVL23:
6623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 360              		.loc 1 6623 12 view .LVU109
 361              	.LBE213:
 362              	.LBE212:
 363              	.LBB214:
 364              	.LBI214:
6621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 365              		.loc 1 6621 26 is_stmt 1 view .LVU110
 366              	.LBB215:
6623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 367              		.loc 1 6623 3 view .LVU111
6623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 368              		.loc 1 6623 12 is_stmt 0 view .LVU112
 369 008a 9368     		ldr	r3, [r2, #8]
 370              	.LVL24:
6623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 371              		.loc 1 6623 12 view .LVU113
 372              	.LBE215:
 373              	.LBE214:
 547:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 374              		.loc 2 547 93 view .LVU114
 375 008c 2B43     		orrs	r3, r3, r5
 547:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 376              		.loc 2 547 10 view .LVU115
 377 008e DD07     		lsls	r5, r3, #31
 378 0090 40F19980 		bpl	.L19
 379              	.L16:
 579:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                 hadc->Init.Overrun                                                     |
 380              		.loc 2 579 5 is_stmt 1 view .LVU116
 581:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                 hadc->Init.Resolution                                                  |
 381              		.loc 2 581 88 is_stmt 0 view .LVU117
 382 0094 E568     		ldr	r5, [r4, #12]
 383 0096 E36B     		ldr	r3, [r4, #60]
 583:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
ARM GAS  /tmp/ccJLHc1D.s 			page 144


 384              		.loc 2 583 17 view .LVU118
 385 0098 94F82420 		ldrb	r2, [r4, #36]	@ zero_extendqisi2
 581:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                 hadc->Init.Resolution                                                  |
 386              		.loc 2 581 88 view .LVU119
 387 009c 2B43     		orrs	r3, r3, r5
 388 009e A568     		ldr	r5, [r4, #8]
 389 00a0 2B43     		orrs	r3, r3, r5
 579:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                 hadc->Init.Overrun                                                     |
 390              		.loc 2 579 17 view .LVU120
 391 00a2 657F     		ldrb	r5, [r4, #29]	@ zero_extendqisi2
 585:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 392              		.loc 2 585 8 view .LVU121
 393 00a4 012A     		cmp	r2, #1
 581:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                 hadc->Init.Resolution                                                  |
 394              		.loc 2 581 88 view .LVU122
 395 00a6 43EA4533 		orr	r3, r3, r5, lsl #13
 579:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                 hadc->Init.Overrun                                                     |
 396              		.loc 2 579 14 view .LVU123
 397 00aa 43EA0243 		orr	r3, r3, r2, lsl #16
 398              	.LVL25:
 585:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 399              		.loc 2 585 5 is_stmt 1 view .LVU124
 587:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 400              		.loc 2 587 7 view .LVU125
 587:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 401              		.loc 2 587 18 is_stmt 0 view .LVU126
 402 00ae 02BF     		ittt	eq
 403 00b0 A26A     		ldreq	r2, [r4, #40]
 404 00b2 02F1FF32 		addeq	r2, r2, #-1
 587:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 405              		.loc 2 587 15 view .LVU127
 406 00b6 43EA4243 		orreq	r3, r3, r2, lsl #17
 407              	.LVL26:
 595:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 408              		.loc 2 595 5 is_stmt 1 view .LVU128
 595:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 409              		.loc 2 595 19 is_stmt 0 view .LVU129
 410 00ba E26A     		ldr	r2, [r4, #44]
 595:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 411              		.loc 2 595 8 view .LVU130
 412 00bc 22B1     		cbz	r2, .L22
 597:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                   | hadc->Init.ExternalTrigConvEdge
 413              		.loc 2 597 7 is_stmt 1 view .LVU131
 598:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                  );
 414              		.loc 2 598 19 is_stmt 0 view .LVU132
 415 00be 256B     		ldr	r5, [r4, #48]
 597:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                   | hadc->Init.ExternalTrigConvEdge
 416              		.loc 2 597 48 view .LVU133
 417 00c0 02F47872 		and	r2, r2, #992
 598:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                  );
 418              		.loc 2 598 19 view .LVU134
 419 00c4 2A43     		orrs	r2, r2, r5
 597:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                   | hadc->Init.ExternalTrigConvEdge
 420              		.loc 2 597 15 view .LVU135
 421 00c6 1343     		orrs	r3, r3, r2
 422              	.LVL27:
 423              	.L22:
ARM GAS  /tmp/ccJLHc1D.s 			page 145


 603:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 424              		.loc 2 603 5 is_stmt 1 view .LVU136
 425 00c8 C568     		ldr	r5, [r0, #12]
 426 00ca 4F4A     		ldr	r2, .L48+4
 427 00cc 2A40     		ands	r2, r2, r5
 428 00ce 1343     		orrs	r3, r3, r2
 429              	.LVL28:
 603:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 430              		.loc 2 603 5 is_stmt 0 view .LVU137
 431 00d0 C360     		str	r3, [r0, #12]
 606:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 432              		.loc 2 606 5 is_stmt 1 view .LVU138
 433 00d2 0369     		ldr	r3, [r0, #16]
 434 00d4 626B     		ldr	r2, [r4, #52]
 435 00d6 23F04063 		bic	r3, r3, #201326592
 436 00da 1343     		orrs	r3, r3, r2
 437 00dc 0361     		str	r3, [r0, #16]
 615:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 438              		.loc 2 615 5 view .LVU139
 615:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 439              		.loc 2 615 46 is_stmt 0 view .LVU140
 440 00de FFF7FEFF 		bl	LL_ADC_REG_IsConversionOngoing
 441              	.LVL29:
 616:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if ((tmp_adc_is_conversion_on_going_regular == 0UL)
 442              		.loc 2 616 5 is_stmt 1 view .LVU141
 616:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if ((tmp_adc_is_conversion_on_going_regular == 0UL)
 443              		.loc 2 616 47 is_stmt 0 view .LVU142
 444 00e2 2368     		ldr	r3, [r4]
 445              	.LVL30:
 446              	.LBB216:
 447              	.LBI216:
6747:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6748:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6749:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group regular command of conversion stop state
6750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CR       ADSTP          LL_ADC_REG_IsStopConversionOngoing
6751:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6752:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval 0: no command of conversion stop is on going on ADC group regular.
6753:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6754:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsStopConversionOngoing(ADC_TypeDef *ADCx)
6755:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6756:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADSTP) == (ADC_CR_ADSTP)) ? 1UL : 0UL);
6757:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6758:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6759:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6760:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Start ADC sampling phase for sampling time trigger mode
6761:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This function is relevant only when
6762:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - @ref LL_ADC_REG_SAMPLING_MODE_TRIGGER_CONTROLED has been set
6763:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           using @ref LL_ADC_REG_SetSamplingMode
6764:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - @ref LL_ADC_REG_TRIG_SOFTWARE is used as trigger source
6765:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
6766:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
6767:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be enabled without conversion on going on group regular,
6768:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         without conversion stop command on going on group regular,
6769:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         without ADC disable command on going.
6770:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR2    SWTRIG         LL_ADC_REG_StartSamplingPhase
6771:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6772:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
ARM GAS  /tmp/ccJLHc1D.s 			page 146


6773:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6774:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_StartSamplingPhase(ADC_TypeDef *ADCx)
6775:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6776:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   SET_BIT(ADCx->CFGR2, ADC_CFGR2_SWTRIG);
6777:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6778:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6779:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6780:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Stop ADC sampling phase for sampling time trigger mode and start conversion
6781:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This function is relevant only when
6782:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - @ref LL_ADC_REG_SAMPLING_MODE_TRIGGER_CONTROLED has been set
6783:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           using @ref LL_ADC_REG_SetSamplingMode
6784:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - @ref LL_ADC_REG_TRIG_SOFTWARE is used as trigger source
6785:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - @ref LL_ADC_REG_StartSamplingPhase has been called to start
6786:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           the sampling phase
6787:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
6788:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
6789:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be enabled without conversion on going on group regular,
6790:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         without conversion stop command on going on group regular,
6791:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         without ADC disable command on going.
6792:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR2    SWTRIG         LL_ADC_REG_StopSamplingPhase
6793:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6794:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
6795:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6796:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_StopSamplingPhase(ADC_TypeDef *ADCx)
6797:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6798:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   CLEAR_BIT(ADCx->CFGR2, ADC_CFGR2_SWTRIG);
6799:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6800:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6801:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6802:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
6803:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         all ADC configurations: all ADC resolutions and
6804:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         all oversampling increased data width (for devices
6805:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         with feature oversampling).
6806:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData32
6807:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6808:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
6809:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6810:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_ReadConversionData32(ADC_TypeDef *ADCx)
6811:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6812:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
6813:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6814:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6815:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6816:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
6817:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC resolution 12 bits.
6818:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
6819:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         can increase data width, function for extended range
6820:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
6821:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData12
6822:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6823:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
6824:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6825:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_REG_ReadConversionData12(ADC_TypeDef *ADCx)
6826:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6827:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint16_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
6828:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6829:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
ARM GAS  /tmp/ccJLHc1D.s 			page 147


6830:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6831:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
6832:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC resolution 10 bits.
6833:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
6834:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         can increase data width, function for extended range
6835:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
6836:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData10
6837:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6838:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0x3FF
6839:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6840:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_REG_ReadConversionData10(ADC_TypeDef *ADCx)
6841:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6842:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint16_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
6843:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6844:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6845:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
6847:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC resolution 8 bits.
6848:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
6849:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         can increase data width, function for extended range
6850:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
6851:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData8
6852:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6853:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xFF
6854:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6855:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint8_t LL_ADC_REG_ReadConversionData8(ADC_TypeDef *ADCx)
6856:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6857:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint8_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
6858:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6859:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6860:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6861:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
6862:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC resolution 6 bits.
6863:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
6864:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         can increase data width, function for extended range
6865:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
6866:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData6
6867:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6868:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x3F
6869:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6870:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint8_t LL_ADC_REG_ReadConversionData6(ADC_TypeDef *ADCx)
6871:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6872:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint8_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
6873:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6874:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6875:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
6876:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6877:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC multimode conversion data of ADC master, ADC slave
6878:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or raw data with ADC master and slave concatenated.
6879:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If raw data with ADC master and slave concatenated is retrieved,
6880:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         a macro is available to get the conversion data of
6881:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC master or ADC slave: see helper macro
6882:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @ref __LL_ADC_MULTI_CONV_DATA_MASTER_SLAVE().
6883:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (however this macro is mainly intended for multimode
6884:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         transfer by DMA, because this function can do the same
6885:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         by getting multimode conversion data of ADC master or ADC slave
6886:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         separately).
ARM GAS  /tmp/ccJLHc1D.s 			page 148


6887:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CDR      RDATA_MST      LL_ADC_REG_ReadMultiConversionData32\n
6888:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CDR      RDATA_SLV      LL_ADC_REG_ReadMultiConversionData32
6889:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6890:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6891:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ConversionData This parameter can be one of the following values:
6892:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_MASTER
6893:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_SLAVE
6894:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_MASTER_SLAVE
6895:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
6896:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6897:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_ReadMultiConversionData32(ADC_Common_TypeDef *ADCxy_COMMON, uin
6898:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6899:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CDR,
6900:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                              ConversionData)
6901:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                     >> (POSITION_VAL(ConversionData) & 0x1FUL)
6902:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                    );
6903:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6904:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
6905:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6906:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6907:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
6908:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6909:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6910:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Group_Injected Operation on ADC hierarchical scope: group inj
6911:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
6912:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6913:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6914:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6915:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Start ADC group injected conversion.
6916:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 serie, this function is relevant for both
6917:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         internal trigger (SW start) and external trigger:
6918:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - If ADC trigger has been set to software start, ADC conversion
6919:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           starts immediately.
6920:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - If ADC trigger has been set to external trigger, ADC conversion
6921:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           will start at next trigger event (on the selected trigger edge)
6922:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           following the ADC start conversion command.
6923:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
6924:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
6925:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be enabled without conversion on going on group injected,
6926:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         without conversion stop command on going on group injected,
6927:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         without ADC disable command on going.
6928:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CR       JADSTART       LL_ADC_INJ_StartConversion
6929:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6930:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
6931:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6932:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_StartConversion(ADC_TypeDef *ADCx)
6933:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6934:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6935:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6936:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6937:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6938:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6939:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_JADSTART);
6940:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6941:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6942:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6943:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Stop ADC group injected conversion.
ARM GAS  /tmp/ccJLHc1D.s 			page 149


6944:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
6945:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
6946:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be enabled with conversion on going on group injected,
6947:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         without ADC disable command on going.
6948:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CR       JADSTP         LL_ADC_INJ_StopConversion
6949:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6950:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
6951:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6952:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_StopConversion(ADC_TypeDef *ADCx)
6953:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6954:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6955:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6956:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6957:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6958:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6959:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_JADSTP);
6960:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6961:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6962:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6963:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion state.
6964:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CR       JADSTART       LL_ADC_INJ_IsConversionOngoing
6965:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6966:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval 0: no conversion is on going on ADC group injected.
6967:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6968:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_IsConversionOngoing(ADC_TypeDef *ADCx)
 448              		.loc 1 6968 26 is_stmt 1 view .LVU143
 449              	.LBB217:
6969:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6970:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_JADSTART) == (ADC_CR_JADSTART)) ? 1UL : 0UL);
 450              		.loc 1 6970 3 view .LVU144
 451              		.loc 1 6970 12 is_stmt 0 view .LVU145
 452 00e4 9A68     		ldr	r2, [r3, #8]
 453 00e6 02F00802 		and	r2, r2, #8
 454              		.loc 1 6970 76 view .LVU146
 455 00ea 0243     		orrs	r2, r2, r0
 456 00ec 2ED1     		bne	.L23
 457              	.LVL31:
 458              		.loc 1 6970 76 view .LVU147
 459              	.LBE217:
 460              	.LBE216:
 617:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         && (tmp_adc_is_conversion_on_going_injected == 0UL)
 461              		.loc 2 617 5 is_stmt 1 view .LVU148
 621:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                  ADC_CFGR_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)        |
 462              		.loc 2 621 7 view .LVU149
 625:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 463              		.loc 2 625 7 view .LVU150
 464 00ee D868     		ldr	r0, [r3, #12]
 465              	.LVL32:
 623:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 466              		.loc 2 623 18 is_stmt 0 view .LVU151
 467 00f0 94F83820 		ldrb	r2, [r4, #56]	@ zero_extendqisi2
 622:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                  ADC_CFGR_DMACONTREQ((uint32_t)hadc->Init.DMAContinuousRequests));
 468              		.loc 2 622 18 view .LVU152
 469 00f4 257F     		ldrb	r5, [r4, #28]	@ zero_extendqisi2
 627:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 470              		.loc 2 627 21 view .LVU153
 471 00f6 2669     		ldr	r6, [r4, #16]
ARM GAS  /tmp/ccJLHc1D.s 			page 150


 623:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 472              		.loc 2 623 18 view .LVU154
 473 00f8 5200     		lsls	r2, r2, #1
 625:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 474              		.loc 2 625 7 view .LVU155
 475 00fa 20F48040 		bic	r0, r0, #16384
 621:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                  ADC_CFGR_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)        |
 476              		.loc 2 621 15 view .LVU156
 477 00fe 42EA8532 		orr	r2, r2, r5, lsl #14
 625:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 478              		.loc 2 625 7 view .LVU157
 479 0102 20F00200 		bic	r0, r0, #2
 480 0106 0243     		orrs	r2, r2, r0
 481 0108 DA60     		str	r2, [r3, #12]
 482              	.LVL33:
 627:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 483              		.loc 2 627 7 is_stmt 1 view .LVU158
 484 010a 404D     		ldr	r5, .L48+8
 629:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         MODIFY_REG(hadc->Instance->GCOMP, ADC_GCOMP_GCOMPCOEFF, hadc->Init.GainCompensation);
 485              		.loc 2 629 9 is_stmt 0 view .LVU159
 486 010c 1869     		ldr	r0, [r3, #16]
 627:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 487              		.loc 2 627 10 view .LVU160
 488 010e 002E     		cmp	r6, #0
 489 0110 68D0     		beq	.L24
 629:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         MODIFY_REG(hadc->Instance->GCOMP, ADC_GCOMP_GCOMPCOEFF, hadc->Init.GainCompensation);
 490              		.loc 2 629 9 is_stmt 1 view .LVU161
 491 0112 40F48030 		orr	r0, r0, #65536
 492 0116 1861     		str	r0, [r3, #16]
 630:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 493              		.loc 2 630 9 view .LVU162
 494 0118 D3F8C020 		ldr	r2, [r3, #192]
 495 011c 2A40     		ands	r2, r2, r5
 496 011e 3243     		orrs	r2, r2, r6
 497              	.L45:
 635:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 498              		.loc 2 635 9 is_stmt 0 view .LVU163
 499 0120 C3F8C020 		str	r2, [r3, #192]
 638:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 500              		.loc 2 638 7 is_stmt 1 view .LVU164
 638:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 501              		.loc 2 638 10 is_stmt 0 view .LVU165
 502 0124 94F84020 		ldrb	r2, [r4, #64]	@ zero_extendqisi2
 503 0128 012A     		cmp	r2, #1
 504 012a 62D1     		bne	.L26
 640:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         assert_param(IS_ADC_RIGHT_BIT_SHIFT(hadc->Init.Oversampling.RightBitShift));
 505              		.loc 2 640 9 is_stmt 1 view .LVU166
 641:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         assert_param(IS_ADC_TRIGGERED_OVERSAMPLING_MODE(hadc->Init.Oversampling.TriggeredMode));
 506              		.loc 2 641 9 view .LVU167
 642:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         assert_param(IS_ADC_REGOVERSAMPLING_MODE(hadc->Init.Oversampling.OversamplingStopReset));
 507              		.loc 2 642 9 view .LVU168
 643:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 508              		.loc 2 643 9 view .LVU169
 650:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                    ADC_CFGR2_OVSR  |
 509              		.loc 2 650 9 view .LVU170
 510 012c D4E91125 		ldrd	r2, r5, [r4, #68]
 511 0130 1869     		ldr	r0, [r3, #16]
ARM GAS  /tmp/ccJLHc1D.s 			page 151


 512 0132 20F4FF60 		bic	r0, r0, #2040
 513 0136 20F00400 		bic	r0, r0, #4
 514 013a 2A43     		orrs	r2, r2, r5
 515 013c 0243     		orrs	r2, r2, r0
 516 013e E06C     		ldr	r0, [r4, #76]
 517 0140 0243     		orrs	r2, r2, r0
 518 0142 206D     		ldr	r0, [r4, #80]
 519 0144 0243     		orrs	r2, r2, r0
 520 0146 42F00102 		orr	r2, r2, #1
 521              	.L46:
 665:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 522              		.loc 2 665 9 is_stmt 0 view .LVU171
 523 014a 1A61     		str	r2, [r3, #16]
 524              	.LVL34:
 525              	.L23:
 679:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 526              		.loc 2 679 5 is_stmt 1 view .LVU172
 679:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 527              		.loc 2 679 8 is_stmt 0 view .LVU173
 528 014c 6269     		ldr	r2, [r4, #20]
 529 014e 012A     		cmp	r2, #1
 682:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 530              		.loc 2 682 7 is_stmt 1 view .LVU174
 531 0150 05BF     		ittet	eq
 532 0152 186B     		ldreq	r0, [r3, #48]
 533 0154 226A     		ldreq	r2, [r4, #32]
 686:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 534              		.loc 2 686 7 is_stmt 0 view .LVU175
 535 0156 1A6B     		ldrne	r2, [r3, #48]
 682:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 536              		.loc 2 682 7 view .LVU176
 537 0158 02F1FF32 		addeq	r2, r2, #-1
 538 015c 06BF     		itte	eq
 539 015e 20F00F00 		biceq	r0, r0, #15
 540 0162 0243     		orreq	r2, r2, r0
 686:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 541              		.loc 2 686 7 is_stmt 1 view .LVU177
 542 0164 22F00F02 		bicne	r2, r2, #15
 543 0168 1A63     		str	r2, [r3, #48]
 691:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 544              		.loc 2 691 5 view .LVU178
 545 016a E36D     		ldr	r3, [r4, #92]
 546 016c 23F00303 		bic	r3, r3, #3
 547 0170 43F00103 		orr	r3, r3, #1
 548 0174 E365     		str	r3, [r4, #92]
 549              	.LVL35:
 550              	.L6:
 703:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 551              		.loc 2 703 1 is_stmt 0 view .LVU179
 552 0176 0846     		mov	r0, r1
 553 0178 02B0     		add	sp, sp, #8
 554              	.LCFI3:
 555              		.cfi_remember_state
 556              		.cfi_def_cfa_offset 16
 557              		@ sp needed
 558 017a 70BD     		pop	{r4, r5, r6, pc}
 559              	.LVL36:
ARM GAS  /tmp/ccJLHc1D.s 			page 152


 560              	.L9:
 561              	.LCFI4:
 562              		.cfi_restore_state
 499:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 563              		.loc 2 499 5 is_stmt 1 view .LVU180
 564              	.LBB218:
 565              	.LBI218:
6531:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 566              		.loc 1 6531 22 view .LVU181
 567              	.LBB219:
6536:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 568              		.loc 1 6536 3 view .LVU182
 569 017c 8368     		ldr	r3, [r0, #8]
 570              	.LBE219:
 571              	.LBE218:
 504:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     while (wait_loop_index != 0UL)
 572              		.loc 2 504 69 is_stmt 0 view .LVU183
 573 017e 244A     		ldr	r2, .L48+12
 574              	.LBB221:
 575              	.LBB220:
6536:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 576              		.loc 1 6536 3 view .LVU184
 577 0180 23F01043 		bic	r3, r3, #-1879048192
 578 0184 23F03F03 		bic	r3, r3, #63
 579 0188 43F08053 		orr	r3, r3, #268435456
 580 018c 8360     		str	r3, [r0, #8]
 581              	.LVL37:
6536:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 582              		.loc 1 6536 3 view .LVU185
 583              	.LBE220:
 584              	.LBE221:
 504:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     while (wait_loop_index != 0UL)
 585              		.loc 2 504 5 is_stmt 1 view .LVU186
 504:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     while (wait_loop_index != 0UL)
 586              		.loc 2 504 69 is_stmt 0 view .LVU187
 587 018e 214B     		ldr	r3, .L48+16
 588 0190 1B68     		ldr	r3, [r3]
 589 0192 B3FBF2F3 		udiv	r3, r3, r2
 590              	.L44:
 507:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 591              		.loc 2 507 22 view .LVU188
 592 0196 0193     		str	r3, [sp, #4]
 505:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 593              		.loc 2 505 11 is_stmt 1 view .LVU189
 505:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 594              		.loc 2 505 28 is_stmt 0 view .LVU190
 595 0198 019B     		ldr	r3, [sp, #4]
 505:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 596              		.loc 2 505 11 view .LVU191
 597 019a 002B     		cmp	r3, #0
 598 019c 3FF44CAF 		beq	.L14
 507:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 599              		.loc 2 507 7 is_stmt 1 view .LVU192
 507:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 600              		.loc 2 507 22 is_stmt 0 view .LVU193
 601 01a0 019B     		ldr	r3, [sp, #4]
 602 01a2 013B     		subs	r3, r3, #1
ARM GAS  /tmp/ccJLHc1D.s 			page 153


 603 01a4 F7E7     		b	.L44
 604              	.LVL38:
 605              	.L30:
 406:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmpCFGR;
 606              		.loc 2 406 21 view .LVU194
 607 01a6 0021     		movs	r1, #0
 608 01a8 53E7     		b	.L10
 609              	.LVL39:
 610              	.L18:
 611              	.LBB222:
 612              	.LBI222:
6621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 613              		.loc 1 6621 26 is_stmt 1 view .LVU195
 614              	.LBB223:
6623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 615              		.loc 1 6623 3 view .LVU196
6623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 616              		.loc 1 6623 12 is_stmt 0 view .LVU197
 617 01aa 1B4B     		ldr	r3, .L48+20
 618              	.LBE223:
 619              	.LBE222:
 620              	.LBB225:
 621              	.LBB226:
 622 01ac 1B4A     		ldr	r2, .L48+24
 623              	.LBE226:
 624              	.LBE225:
 625              	.LBB228:
 626              	.LBB224:
 627 01ae 9D68     		ldr	r5, [r3, #8]
 628              	.LVL40:
6623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 629              		.loc 1 6623 12 view .LVU198
 630              	.LBE224:
 631              	.LBE228:
 632              	.LBB229:
 633              	.LBI229:
6621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 634              		.loc 1 6621 26 is_stmt 1 view .LVU199
 635              	.LBB230:
6623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 636              		.loc 1 6623 3 view .LVU200
6623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 637              		.loc 1 6623 12 is_stmt 0 view .LVU201
 638 01b0 03F58073 		add	r3, r3, #256
 639 01b4 9B68     		ldr	r3, [r3, #8]
 640              	.LVL41:
6623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 641              		.loc 1 6623 12 view .LVU202
 642              	.LBE230:
 643              	.LBE229:
 644              	.LBB231:
 645              	.LBI225:
6621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 646              		.loc 1 6621 26 is_stmt 1 view .LVU203
 647              	.LBB227:
6623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 648              		.loc 1 6623 3 view .LVU204
ARM GAS  /tmp/ccJLHc1D.s 			page 154


6623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 649              		.loc 1 6623 12 is_stmt 0 view .LVU205
 650 01b6 9268     		ldr	r2, [r2, #8]
 651              	.LVL42:
6623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 652              		.loc 1 6623 12 view .LVU206
 653              	.LBE227:
 654              	.LBE231:
 547:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 655              		.loc 2 547 93 view .LVU207
 656 01b8 2B43     		orrs	r3, r3, r5
 657 01ba 1343     		orrs	r3, r3, r2
 547:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 658              		.loc 2 547 10 view .LVU208
 659 01bc DB07     		lsls	r3, r3, #31
 660 01be 3FF569AF 		bmi	.L16
 566:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 661              		.loc 2 566 9 view .LVU209
 662 01c2 174B     		ldr	r3, .L48+28
 663 01c4 07E0     		b	.L20
 664              	.L19:
 566:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 665              		.loc 2 566 9 is_stmt 1 view .LVU210
 666 01c6 B0F1A04F 		cmp	r0, #1342177280
 667 01ca 164B     		ldr	r3, .L48+32
 668 01cc 03D0     		beq	.L20
 566:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 669              		.loc 2 566 9 is_stmt 0 discriminator 2 view .LVU211
 670 01ce 144D     		ldr	r5, .L48+28
 671 01d0 9042     		cmp	r0, r2
 672 01d2 18BF     		it	ne
 673 01d4 2B46     		movne	r3, r5
 674              	.L20:
 675              	.LVL43:
 676              	.LBB232:
 677              	.LBI232:
2703:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 678              		.loc 1 2703 22 is_stmt 1 discriminator 6 view .LVU212
 679              	.LBB233:
2705:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 680              		.loc 1 2705 3 discriminator 6 view .LVU213
 681 01d6 9A68     		ldr	r2, [r3, #8]
 682 01d8 6568     		ldr	r5, [r4, #4]
 683 01da 22F47C12 		bic	r2, r2, #4128768
 684 01de 2A43     		orrs	r2, r2, r5
 685 01e0 9A60     		str	r2, [r3, #8]
2706:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 686              		.loc 1 2706 1 is_stmt 0 discriminator 6 view .LVU214
 687 01e2 57E7     		b	.L16
 688              	.LVL44:
 689              	.L24:
2706:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 690              		.loc 1 2706 1 discriminator 6 view .LVU215
 691              	.LBE233:
 692              	.LBE232:
 634:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         MODIFY_REG(hadc->Instance->GCOMP, ADC_GCOMP_GCOMPCOEFF, 0UL);
 693              		.loc 2 634 9 is_stmt 1 view .LVU216
ARM GAS  /tmp/ccJLHc1D.s 			page 155


 694 01e4 20F48030 		bic	r0, r0, #65536
 695 01e8 1861     		str	r0, [r3, #16]
 635:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 696              		.loc 2 635 9 view .LVU217
 697 01ea D3F8C020 		ldr	r2, [r3, #192]
 698 01ee 2A40     		ands	r2, r2, r5
 699 01f0 96E7     		b	.L45
 700              	.L26:
 665:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 701              		.loc 2 665 9 view .LVU218
 702 01f2 1A69     		ldr	r2, [r3, #16]
 703 01f4 22F00102 		bic	r2, r2, #1
 704 01f8 A7E7     		b	.L46
 705              	.LVL45:
 706              	.L15:
 696:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 707              		.loc 2 696 5 view .LVU219
 708 01fa 43F01003 		orr	r3, r3, #16
 709 01fe E365     		str	r3, [r4, #92]
 698:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 710              		.loc 2 698 5 view .LVU220
 711              	.LVL46:
 712              	.L29:
 416:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 713              		.loc 2 416 12 is_stmt 0 view .LVU221
 714 0200 0121     		movs	r1, #1
 715 0202 B8E7     		b	.L6
 716              	.L49:
 717              		.align	2
 718              	.L48:
 719 0204 00010050 		.word	1342177536
 720 0208 0740F0FF 		.word	-1032185
 721 020c 00C0FFFF 		.word	-16384
 722 0210 400D0300 		.word	200000
 723 0214 00000000 		.word	SystemCoreClock
 724 0218 00040050 		.word	1342178304
 725 021c 00060050 		.word	1342178816
 726 0220 00070050 		.word	1342179072
 727 0224 00030050 		.word	1342178048
 728              		.cfi_endproc
 729              	.LFE357:
 731              		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
 732              		.align	1
 733              		.weak	HAL_ADC_MspDeInit
 734              		.syntax unified
 735              		.thumb
 736              		.thumb_func
 737              		.fpu fpv4-sp-d16
 739              	HAL_ADC_MspDeInit:
 740              	.LFB389:
 741              		.cfi_startproc
 742              		@ args = 0, pretend = 0, frame = 0
 743              		@ frame_needed = 0, uses_anonymous_args = 0
 744              		@ link register save eliminated.
 745 0000 7047     		bx	lr
 746              		.cfi_endproc
 747              	.LFE389:
ARM GAS  /tmp/ccJLHc1D.s 			page 156


 749              		.section	.text.HAL_ADC_PollForConversion,"ax",%progbits
 750              		.align	1
 751              		.global	HAL_ADC_PollForConversion
 752              		.syntax unified
 753              		.thumb
 754              		.thumb_func
 755              		.fpu fpv4-sp-d16
 757              	HAL_ADC_PollForConversion:
 758              	.LVL47:
 759              	.LFB363:
 934:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 935:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
 936:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  DeInitialize the ADC MSP.
 937:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param hadc ADC handle
 938:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note   All ADC instances use the same core clock at RCC level, disabling
 939:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         the core clock reset all ADC instances).
 940:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval None
 941:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
 942:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** __weak void HAL_ADC_MspDeInit(ADC_HandleTypeDef *hadc)
 943:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
 944:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 945:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   UNUSED(hadc);
 946:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 947:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
 948:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             function HAL_ADC_MspDeInit must be implemented in the user file.
 949:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****    */
 950:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
 951:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 952:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
 953:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
 954:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  Register a User ADC Callback
 955:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         To be used instead of the weak predefined callback
 956:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param  hadc Pointer to a ADC_HandleTypeDef structure that contains
 957:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *                the configuration information for the specified ADC.
 958:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param  CallbackID ID of the callback to be registered
 959:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         This parameter can be one of the following values:
 960:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_COMPLETE_CB_ID      ADC conversion complete callback ID
 961:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_HALF_CB_ID          ADC conversion DMA half-transfer call
 962:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID    ADC analog watchdog 1 callback ID
 963:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_ERROR_CB_ID                    ADC error callback ID
 964:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_INJ_CONVERSION_COMPLETE_CB_ID  ADC group injected conversion complet
 965:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_INJ_QUEUE_OVEFLOW_CB_ID        ADC group injected context queue over
 966:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_2_CB_ID    ADC analog watchdog 2 callback ID
 967:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_3_CB_ID    ADC analog watchdog 3 callback ID
 968:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_END_OF_SAMPLING_CB_ID          ADC end of sampling callback ID
 969:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPINIT_CB_ID                  ADC Msp Init callback ID
 970:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPDEINIT_CB_ID                ADC Msp DeInit callback ID
 971:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPINIT_CB_ID MspInit callback ID
 972:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPDEINIT_CB_ID MspDeInit callback ID
 973:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param  pCallback pointer to the Callback function
 974:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval HAL status
 975:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
 976:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_RegisterCallback(ADC_HandleTypeDef *hadc, HAL_ADC_CallbackIDTypeDef Callb
 977:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
 978:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef status = HAL_OK;
 979:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 980:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (pCallback == NULL)
ARM GAS  /tmp/ccJLHc1D.s 			page 157


 981:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 982:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Update the error code */
 983:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
 984:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 985:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     return HAL_ERROR;
 986:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 987:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 988:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if ((hadc->State & HAL_ADC_STATE_READY) != 0UL)
 989:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 990:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     switch (CallbackID)
 991:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 992:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       case HAL_ADC_CONVERSION_COMPLETE_CB_ID :
 993:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->ConvCpltCallback = pCallback;
 994:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
 995:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 996:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       case HAL_ADC_CONVERSION_HALF_CB_ID :
 997:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->ConvHalfCpltCallback = pCallback;
 998:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
 999:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1000:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID :
1001:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->LevelOutOfWindowCallback = pCallback;
1002:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
1003:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1004:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       case HAL_ADC_ERROR_CB_ID :
1005:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->ErrorCallback = pCallback;
1006:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
1007:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1008:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       case HAL_ADC_INJ_CONVERSION_COMPLETE_CB_ID :
1009:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->InjectedConvCpltCallback = pCallback;
1010:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
1011:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1012:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       case HAL_ADC_INJ_QUEUE_OVEFLOW_CB_ID :
1013:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->InjectedQueueOverflowCallback = pCallback;
1014:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
1015:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1016:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_2_CB_ID :
1017:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->LevelOutOfWindow2Callback = pCallback;
1018:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
1019:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1020:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_3_CB_ID :
1021:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->LevelOutOfWindow3Callback = pCallback;
1022:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
1023:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1024:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       case HAL_ADC_END_OF_SAMPLING_CB_ID :
1025:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->EndOfSamplingCallback = pCallback;
1026:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
1027:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1028:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
1029:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->MspInitCallback = pCallback;
1030:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
1031:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1032:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
1033:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->MspDeInitCallback = pCallback;
1034:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
1035:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1036:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       default :
1037:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Update the error code */
ARM GAS  /tmp/ccJLHc1D.s 			page 158


1038:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1039:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1040:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Return error status */
1041:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         status = HAL_ERROR;
1042:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
1043:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
1044:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
1045:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   else if (HAL_ADC_STATE_RESET == hadc->State)
1046:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
1047:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     switch (CallbackID)
1048:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
1049:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
1050:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->MspInitCallback = pCallback;
1051:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
1052:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1053:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
1054:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->MspDeInitCallback = pCallback;
1055:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
1056:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1057:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       default :
1058:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Update the error code */
1059:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1060:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1061:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Return error status */
1062:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         status = HAL_ERROR;
1063:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
1064:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
1065:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
1066:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   else
1067:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
1068:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Update the error code */
1069:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1070:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1071:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Return error status */
1072:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     status =  HAL_ERROR;
1073:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
1074:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1075:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   return status;
1076:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
1077:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1078:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
1079:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  Unregister a ADC Callback
1080:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         ADC callback is redirected to the weak predefined callback
1081:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param  hadc Pointer to a ADC_HandleTypeDef structure that contains
1082:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *                the configuration information for the specified ADC.
1083:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param  CallbackID ID of the callback to be unregistered
1084:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         This parameter can be one of the following values:
1085:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_COMPLETE_CB_ID      ADC conversion complete callback ID
1086:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_HALF_CB_ID          ADC conversion DMA half-transfer call
1087:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID    ADC analog watchdog 1 callback ID
1088:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_ERROR_CB_ID                    ADC error callback ID
1089:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_INJ_CONVERSION_COMPLETE_CB_ID  ADC group injected conversion complet
1090:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_INJ_QUEUE_OVEFLOW_CB_ID        ADC group injected context queue over
1091:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_2_CB_ID    ADC analog watchdog 2 callback ID
1092:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_3_CB_ID    ADC analog watchdog 3 callback ID
1093:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_END_OF_SAMPLING_CB_ID          ADC end of sampling callback ID
1094:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPINIT_CB_ID                  ADC Msp Init callback ID
ARM GAS  /tmp/ccJLHc1D.s 			page 159


1095:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPDEINIT_CB_ID                ADC Msp DeInit callback ID
1096:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPINIT_CB_ID MspInit callback ID
1097:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPDEINIT_CB_ID MspDeInit callback ID
1098:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval HAL status
1099:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
1100:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_UnRegisterCallback(ADC_HandleTypeDef *hadc, HAL_ADC_CallbackIDTypeDef Cal
1101:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
1102:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef status = HAL_OK;
1103:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1104:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if ((hadc->State & HAL_ADC_STATE_READY) != 0UL)
1105:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
1106:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     switch (CallbackID)
1107:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
1108:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       case HAL_ADC_CONVERSION_COMPLETE_CB_ID :
1109:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->ConvCpltCallback = HAL_ADC_ConvCpltCallback;
1110:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
1111:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1112:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       case HAL_ADC_CONVERSION_HALF_CB_ID :
1113:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->ConvHalfCpltCallback = HAL_ADC_ConvHalfCpltCallback;
1114:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
1115:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1116:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID :
1117:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->LevelOutOfWindowCallback = HAL_ADC_LevelOutOfWindowCallback;
1118:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
1119:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1120:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       case HAL_ADC_ERROR_CB_ID :
1121:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->ErrorCallback = HAL_ADC_ErrorCallback;
1122:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
1123:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1124:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       case HAL_ADC_INJ_CONVERSION_COMPLETE_CB_ID :
1125:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->InjectedConvCpltCallback = HAL_ADCEx_InjectedConvCpltCallback;
1126:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
1127:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1128:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       case HAL_ADC_INJ_QUEUE_OVEFLOW_CB_ID :
1129:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->InjectedQueueOverflowCallback = HAL_ADCEx_InjectedQueueOverflowCallback;
1130:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
1131:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1132:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_2_CB_ID :
1133:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->LevelOutOfWindow2Callback = HAL_ADCEx_LevelOutOfWindow2Callback;
1134:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
1135:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1136:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_3_CB_ID :
1137:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->LevelOutOfWindow3Callback = HAL_ADCEx_LevelOutOfWindow3Callback;
1138:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
1139:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1140:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       case HAL_ADC_END_OF_SAMPLING_CB_ID :
1141:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->EndOfSamplingCallback = HAL_ADCEx_EndOfSamplingCallback;
1142:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
1143:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1144:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
1145:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->MspInitCallback = HAL_ADC_MspInit; /* Legacy weak MspInit              */
1146:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
1147:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1148:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
1149:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->MspDeInitCallback = HAL_ADC_MspDeInit; /* Legacy weak MspDeInit            */
1150:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
1151:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
ARM GAS  /tmp/ccJLHc1D.s 			page 160


1152:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       default :
1153:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Update the error code */
1154:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1155:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1156:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Return error status */
1157:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         status =  HAL_ERROR;
1158:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
1159:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
1160:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
1161:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   else if (HAL_ADC_STATE_RESET == hadc->State)
1162:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
1163:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     switch (CallbackID)
1164:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
1165:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
1166:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->MspInitCallback = HAL_ADC_MspInit;                   /* Legacy weak MspInit          
1167:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
1168:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1169:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
1170:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->MspDeInitCallback = HAL_ADC_MspDeInit;               /* Legacy weak MspDeInit        
1171:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
1172:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1173:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       default :
1174:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Update the error code */
1175:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1176:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1177:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Return error status */
1178:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         status =  HAL_ERROR;
1179:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
1180:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
1181:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
1182:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   else
1183:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
1184:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Update the error code */
1185:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1186:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1187:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Return error status */
1188:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     status =  HAL_ERROR;
1189:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
1190:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1191:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   return status;
1192:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
1193:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1194:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
1195:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1196:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
1197:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @}
1198:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
1199:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1200:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group2 ADC Input and Output operation functions
1201:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief    ADC IO operation functions
1202:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *
1203:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** @verbatim
1204:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****  ===============================================================================
1205:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                       ##### IO operation functions #####
1206:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****  ===============================================================================
1207:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     [..]  This section provides functions allowing to:
1208:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (+) Start conversion of regular group.
ARM GAS  /tmp/ccJLHc1D.s 			page 161


1209:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (+) Stop conversion of regular group.
1210:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (+) Poll for conversion complete on regular group.
1211:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (+) Poll for conversion event.
1212:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (+) Get result of regular channel conversion.
1213:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (+) Start conversion of regular group and enable interruptions.
1214:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (+) Stop conversion of regular group and disable interruptions.
1215:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (+) Handle ADC interrupt request
1216:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (+) Start conversion of regular group and enable DMA transfer.
1217:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (+) Stop conversion of regular group and disable ADC DMA transfer.
1218:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** @endverbatim
1219:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @{
1220:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
1221:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1222:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
1223:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  Enable ADC, start conversion of regular group.
1224:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note   Interruptions enabled in this function: None.
1225:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note   Case of multimode enabled (when multimode feature is available):
1226:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *           if ADC is Slave, ADC is enabled but conversion is not started,
1227:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *           if ADC is master, ADC is enabled and multimode conversion is started.
1228:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param hadc ADC handle
1229:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval HAL status
1230:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
1231:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start(ADC_HandleTypeDef *hadc)
1232:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
1233:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
1234:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1235:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   const ADC_TypeDef *tmpADC_Master;
1236:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
1237:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
1238:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1239:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Check the parameters */
1240:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1241:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1242:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Perform ADC enable and conversion start if no conversion is on going */
1243:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
1244:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
1245:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Process locked */
1246:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     __HAL_LOCK(hadc);
1247:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1248:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Enable the ADC peripheral */
1249:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmp_hal_status = ADC_Enable(hadc);
1250:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1251:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Start conversion if ADC is effectively enabled */
1252:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1253:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
1254:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Set ADC state                                                        */
1255:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* - Clear state bitfield related to regular group conversion results   */
1256:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* - Set state bitfield related to regular operation                    */
1257:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1258:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
1259:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY);
1260:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1261:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1262:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Reset HAL_ADC_STATE_MULTIMODE_SLAVE bit
1263:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         - if ADC instance is master or if multimode feature is not available
1264:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         - if multimode setting is disabled (ADC instance slave in independent mode) */
1265:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
ARM GAS  /tmp/ccJLHc1D.s 			page 162


1266:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
1267:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****          )
1268:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
1269:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
1270:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
1271:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
1272:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1273:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Set ADC error code */
1274:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Check if a conversion is on going on ADC group injected */
1275:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
1276:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
1277:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Reset ADC error code fields related to regular conversions only */
1278:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));
1279:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
1280:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       else
1281:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
1282:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Reset all ADC error code fields */
1283:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         ADC_CLEAR_ERRORCODE(hadc);
1284:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
1285:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1286:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Clear ADC group regular conversion flag and overrun flag               */
1287:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* (To ensure of no unknown state from potential previous ADC operations) */
1288:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
1289:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1290:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Process unlocked */
1291:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Unlock before starting ADC conversions: in case of potential         */
1292:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
1293:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
1294:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1295:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Enable conversion of regular group.                                  */
1296:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* If software start has been selected, conversion starts immediately.  */
1297:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* If external trigger has been selected, conversion will start at next */
1298:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* trigger event.                                                       */
1299:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Case of multimode enabled (when multimode feature is available):     */
1300:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /*  - if ADC is slave and dual regular conversions are enabled, ADC is  */
1301:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /*    enabled only (conversion is not started),                         */
1302:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /*  - if ADC is master, ADC is enabled and conversion is started.       */
1303:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1304:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
1305:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
1306:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
1307:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_ALTERN)
1308:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****          )
1309:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
1310:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* ADC instance is not a multimode slave instance with multimode regular conversions enable
1311:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_JAUTO) != 0UL)
1312:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
1313:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
1314:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
1315:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1316:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Start ADC group regular conversion */
1317:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         LL_ADC_REG_StartConversion(hadc->Instance);
1318:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
1319:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       else
1320:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
1321:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* ADC instance is a multimode slave instance with multimode regular conversions enabled */
1322:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
ARM GAS  /tmp/ccJLHc1D.s 			page 163


1323:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* if Master ADC JAUTO bit is set, update Slave State in setting
1324:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****            HAL_ADC_STATE_INJ_BUSY bit and in resetting HAL_ADC_STATE_INJ_EOC bit */
1325:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         tmpADC_Master = __LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance);
1326:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         if (READ_BIT(tmpADC_Master->CFGR, ADC_CFGR_JAUTO) != 0UL)
1327:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
1328:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
1329:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
1330:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1331:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
1332:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #else
1333:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_JAUTO) != 0UL)
1334:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
1335:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
1336:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
1337:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1338:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Start ADC group regular conversion */
1339:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       LL_ADC_REG_StartConversion(hadc->Instance);
1340:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
1341:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
1342:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     else
1343:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
1344:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Process unlocked */
1345:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
1346:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
1347:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
1348:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   else
1349:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
1350:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmp_hal_status = HAL_BUSY;
1351:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
1352:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1353:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Return function status */
1354:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   return tmp_hal_status;
1355:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
1356:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1357:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
1358:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  Stop ADC conversion of regular group (and injected channels in
1359:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         case of auto_injection mode), disable ADC peripheral.
1360:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note:  ADC peripheral disable is forcing stop of potential
1361:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         conversion on injected group. If injected group is under use, it
1362:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         should be preliminarily stopped using HAL_ADCEx_InjectedStop function.
1363:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param hadc ADC handle
1364:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval HAL status.
1365:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
1366:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop(ADC_HandleTypeDef *hadc)
1367:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
1368:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
1369:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1370:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Check the parameters */
1371:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1372:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1373:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Process locked */
1374:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   __HAL_LOCK(hadc);
1375:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1376:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* 1. Stop potential conversion on going, on ADC groups regular and injected */
1377:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_INJECTED_GROUP);
1378:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1379:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
ARM GAS  /tmp/ccJLHc1D.s 			page 164


1380:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
1381:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
1382:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* 2. Disable the ADC peripheral */
1383:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmp_hal_status = ADC_Disable(hadc);
1384:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1385:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Check if ADC is effectively disabled */
1386:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1387:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
1388:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Set ADC state */
1389:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1390:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
1391:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                         HAL_ADC_STATE_READY);
1392:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
1393:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
1394:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1395:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Process unlocked */
1396:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
1397:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1398:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Return function status */
1399:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   return tmp_hal_status;
1400:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
1401:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1402:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
1403:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  Wait for regular group conversion to be completed.
1404:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note   ADC conversion flags EOS (end of sequence) and EOC (end of
1405:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         conversion) are cleared by this function, with an exception:
1406:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         if low power feature "LowPowerAutoWait" is enabled, flags are
1407:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         not cleared to not interfere with this feature until data register
1408:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         is read using function HAL_ADC_GetValue().
1409:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note   This function cannot be used in a particular setup: ADC configured
1410:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         in DMA mode and polling for end of each conversion (ADC init
1411:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         parameter "EOCSelection" set to ADC_EOC_SINGLE_CONV).
1412:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         In this case, DMA resets the flag EOC and polling cannot be
1413:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         performed on each conversion. Nevertheless, polling can still
1414:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         be performed on the complete sequence (ADC init
1415:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         parameter "EOCSelection" set to ADC_EOC_SEQ_CONV).
1416:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param hadc ADC handle
1417:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param Timeout Timeout value in millisecond.
1418:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval HAL status
1419:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
1420:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_PollForConversion(ADC_HandleTypeDef *hadc, uint32_t Timeout)
1421:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
 760              		.loc 2 1421 1 is_stmt 1 view -0
 761              		.cfi_startproc
 762              		@ args = 0, pretend = 0, frame = 0
 763              		@ frame_needed = 0, uses_anonymous_args = 0
1422:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tickstart;
 764              		.loc 2 1422 3 view .LVU223
1423:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_Flag_End;
 765              		.loc 2 1423 3 view .LVU224
1424:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_cfgr;
 766              		.loc 2 1424 3 view .LVU225
1425:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1426:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   const ADC_TypeDef *tmpADC_Master;
 767              		.loc 2 1426 3 view .LVU226
1427:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
 768              		.loc 2 1427 3 view .LVU227
ARM GAS  /tmp/ccJLHc1D.s 			page 165


 769              		.loc 2 1427 55 is_stmt 0 view .LVU228
 770 0000 0368     		ldr	r3, [r0]
 771              		.loc 2 1427 35 view .LVU229
 772 0002 B3F1A04F 		cmp	r3, #1342177280
1421:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tickstart;
 773              		.loc 2 1421 1 view .LVU230
 774 0006 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 775              	.LCFI5:
 776              		.cfi_def_cfa_offset 24
 777              		.cfi_offset 4, -24
 778              		.cfi_offset 5, -20
 779              		.cfi_offset 6, -16
 780              		.cfi_offset 7, -12
 781              		.cfi_offset 8, -8
 782              		.cfi_offset 14, -4
1421:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tickstart;
 783              		.loc 2 1421 1 view .LVU231
 784 000a 0446     		mov	r4, r0
 785 000c 0F46     		mov	r7, r1
 786              		.loc 2 1427 35 view .LVU232
 787 000e 1DD0     		beq	.L69
 788              		.loc 2 1427 35 discriminator 2 view .LVU233
 789 0010 4148     		ldr	r0, .L89
 790              	.LVL48:
 791              		.loc 2 1427 35 discriminator 2 view .LVU234
 792 0012 424A     		ldr	r2, .L89+4
 793 0014 4249     		ldr	r1, .L89+8
 794              	.LVL49:
 795              		.loc 2 1427 35 discriminator 2 view .LVU235
 796 0016 8342     		cmp	r3, r0
 797 0018 08BF     		it	eq
 798 001a 0A46     		moveq	r2, r1
 799              	.L52:
 800              	.LVL50:
 801              	.LBB240:
 802              	.LBI240:
6284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 803              		.loc 1 6284 26 is_stmt 1 discriminator 6 view .LVU236
 804              	.LBB241:
6286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 805              		.loc 1 6286 3 discriminator 6 view .LVU237
 806              	.LBE241:
 807              	.LBE240:
1428:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
1429:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1430:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Check the parameters */
1431:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1432:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1433:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* If end of conversion selected to end of sequence conversions */
1434:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (hadc->Init.EOCSelection == ADC_EOC_SEQ_CONV)
 808              		.loc 2 1434 17 is_stmt 0 discriminator 6 view .LVU238
 809 001c A569     		ldr	r5, [r4, #24]
 810              	.LBB244:
 811              	.LBB242:
6286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 812              		.loc 1 6286 21 discriminator 6 view .LVU239
 813 001e 9668     		ldr	r6, [r2, #8]
ARM GAS  /tmp/ccJLHc1D.s 			page 166


 814              	.LBE242:
 815              	.LBE244:
 816              		.loc 2 1434 6 discriminator 6 view .LVU240
 817 0020 082D     		cmp	r5, #8
 818              	.LBB245:
 819              	.LBB243:
6286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 820              		.loc 1 6286 10 discriminator 6 view .LVU241
 821 0022 06F01F06 		and	r6, r6, #31
 822              	.LVL51:
6286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 823              		.loc 1 6286 10 discriminator 6 view .LVU242
 824              	.LBE243:
 825              	.LBE245:
1431:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 826              		.loc 2 1431 3 is_stmt 1 discriminator 6 view .LVU243
 827              		.loc 2 1434 3 discriminator 6 view .LVU244
 828              		.loc 2 1434 6 is_stmt 0 discriminator 6 view .LVU245
 829 0026 24D0     		beq	.L53
1435:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
1436:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmp_Flag_End = ADC_FLAG_EOS;
1437:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
1438:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* If end of conversion selected to end of unitary conversion */
1439:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   else /* ADC_EOC_SINGLE_CONV */
1440:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
1441:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Verification that ADC configuration is compliant with polling for      */
1442:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* each conversion:                                                       */
1443:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Particular case is ADC configured in DMA mode and ADC sequencer with   */
1444:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* several ranks and polling for end of each conversion.                  */
1445:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* For code simplicity sake, this particular case is generalized to       */
1446:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* ADC configured in DMA mode and and polling for end of each conversion. */
1447:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1448:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if ((tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 830              		.loc 2 1448 5 is_stmt 1 view .LVU246
 831              		.loc 2 1448 8 is_stmt 0 view .LVU247
 832 0028 092E     		cmp	r6, #9
 833 002a 11D8     		bhi	.L54
 834 002c 40F22122 		movw	r2, #545
 835 0030 F240     		lsrs	r2, r2, r6
 836 0032 D107     		lsls	r1, r2, #31
 837 0034 0CD5     		bpl	.L54
1449:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
1450:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_ALTERN)
1451:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        )
1452:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
1453:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Check ADC DMA mode in independent mode on ADC group regular */
1454:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_DMAEN) != 0UL)
 838              		.loc 2 1454 7 is_stmt 1 view .LVU248
 839              		.loc 2 1454 11 is_stmt 0 view .LVU249
 840 0036 DB68     		ldr	r3, [r3, #12]
 841              		.loc 2 1454 10 view .LVU250
 842 0038 13F0010F 		tst	r3, #1
 843              	.L88:
1455:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
1456:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1457:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         return HAL_ERROR;
1458:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
ARM GAS  /tmp/ccJLHc1D.s 			page 167


1459:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       else
1460:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
1461:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         tmp_Flag_End = (ADC_FLAG_EOC);
1462:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
1463:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
1464:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     else
1465:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
1466:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Check ADC DMA mode in multimode on ADC group regular */
1467:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if (LL_ADC_GetMultiDMATransfer(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) != LL_ADC_MULTI_REG_
 844              		.loc 2 1467 10 discriminator 6 view .LVU251
 845 003c 18D0     		beq	.L74
1468:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
1469:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 846              		.loc 2 1469 9 is_stmt 1 view .LVU252
 847 003e E36D     		ldr	r3, [r4, #92]
 848 0040 43F02003 		orr	r3, r3, #32
 849 0044 E365     		str	r3, [r4, #92]
1470:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         return HAL_ERROR;
 850              		.loc 2 1470 9 view .LVU253
 851              		.loc 2 1470 16 is_stmt 0 view .LVU254
 852 0046 0120     		movs	r0, #1
 853              	.LVL52:
 854              	.L55:
1471:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
1472:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       else
1473:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
1474:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         tmp_Flag_End = (ADC_FLAG_EOC);
1475:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
1476:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
1477:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #else
1478:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Check ADC DMA mode */
1479:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_DMAEN) != 0UL)
1480:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
1481:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1482:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       return HAL_ERROR;
1483:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
1484:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     else
1485:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
1486:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       tmp_Flag_End = (ADC_FLAG_EOC);
1487:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
1488:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
1489:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
1490:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1491:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Get tick count */
1492:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   tickstart = HAL_GetTick();
1493:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1494:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Wait until End of unitary conversion or sequence conversions flag is raised */
1495:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   while ((hadc->Instance->ISR & tmp_Flag_End) == 0UL)
1496:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
1497:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Check if timeout is disabled (set to infinite wait) */
1498:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if (Timeout != HAL_MAX_DELAY)
1499:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
1500:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0UL))
1501:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
1502:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Update ADC state machine to timeout */
1503:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
1504:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
ARM GAS  /tmp/ccJLHc1D.s 			page 168


1505:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Process unlocked */
1506:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         __HAL_UNLOCK(hadc);
1507:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1508:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         return HAL_TIMEOUT;
1509:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
1510:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
1511:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
1512:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1513:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Update ADC state machine */
1514:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
1515:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1516:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Determine whether any further conversion upcoming on group regular       */
1517:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* by external trigger, continuous mode or scan sequence on going.          */
1518:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if ((LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance) != 0UL)
1519:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       && (hadc->Init.ContinuousConvMode == DISABLE)
1520:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      )
1521:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
1522:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Check whether end of sequence is reached */
1523:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOS))
1524:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
1525:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Set ADC state */
1526:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
1527:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1528:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == 0UL)
1529:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
1530:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_READY);
1531:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
1532:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
1533:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
1534:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1535:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Get relevant register CFGR in ADC instance of ADC master or slave        */
1536:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* in function of multimode state (for devices with multimode               */
1537:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* available).                                                              */
1538:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1539:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
1540:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
1541:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
1542:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_ALTERN)
1543:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      )
1544:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
1545:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Retrieve handle ADC CFGR register */
1546:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmp_cfgr = READ_REG(hadc->Instance->CFGR);
1547:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
1548:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   else
1549:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
1550:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Retrieve Master ADC CFGR register */
1551:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmpADC_Master = __LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance);
1552:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmp_cfgr = READ_REG(tmpADC_Master->CFGR);
1553:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
1554:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #else
1555:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Retrieve handle ADC CFGR register */
1556:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   tmp_cfgr = READ_REG(hadc->Instance->CFGR);
1557:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
1558:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1559:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Clear polled flag */
1560:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (tmp_Flag_End == ADC_FLAG_EOS)
1561:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
ARM GAS  /tmp/ccJLHc1D.s 			page 169


1562:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOS);
1563:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
1564:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   else
1565:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
1566:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Clear end of conversion EOC flag of regular group if low power feature */
1567:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* "LowPowerAutoWait " is disabled, to not interfere with this feature    */
1568:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* until data register is read using function HAL_ADC_GetValue().         */
1569:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if (READ_BIT(tmp_cfgr, ADC_CFGR_AUTDLY) == 0UL)
1570:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
1571:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS));
1572:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
1573:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
1574:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1575:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Return function status */
1576:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   return HAL_OK;
1577:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
 855              		.loc 2 1577 1 view .LVU255
 856 0048 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 857              	.LVL53:
 858              	.L69:
1427:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
 859              		.loc 2 1427 35 view .LVU256
 860 004c 344A     		ldr	r2, .L89+8
 861 004e E5E7     		b	.L52
 862              	.LVL54:
 863              	.L54:
1467:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 864              		.loc 2 1467 7 is_stmt 1 view .LVU257
1467:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 865              		.loc 2 1467 11 is_stmt 0 view .LVU258
 866 0050 B3F1A04F 		cmp	r3, #1342177280
 867 0054 0AD0     		beq	.L72
1467:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 868              		.loc 2 1467 11 discriminator 2 view .LVU259
 869 0056 3048     		ldr	r0, .L89
 870 0058 314A     		ldr	r2, .L89+8
 871 005a 3049     		ldr	r1, .L89+4
 872 005c 8342     		cmp	r3, r0
 873 005e 0CBF     		ite	eq
 874 0060 1346     		moveq	r3, r2
 875 0062 0B46     		movne	r3, r1
 876              	.L56:
 877              	.LVL55:
 878              	.LBB246:
 879              	.LBI246:
6381:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 880              		.loc 1 6381 26 is_stmt 1 discriminator 6 view .LVU260
 881              	.LBB247:
6383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 882              		.loc 1 6383 3 discriminator 6 view .LVU261
6383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 883              		.loc 1 6383 21 is_stmt 0 discriminator 6 view .LVU262
 884 0064 9B68     		ldr	r3, [r3, #8]
 885              	.LVL56:
6383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 886              		.loc 1 6383 21 discriminator 6 view .LVU263
 887              	.LBE247:
ARM GAS  /tmp/ccJLHc1D.s 			page 170


 888              	.LBE246:
1467:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 889              		.loc 2 1467 10 discriminator 6 view .LVU264
 890 0066 13F4604F 		tst	r3, #57344
 891 006a E7E7     		b	.L88
 892              	.L72:
1467:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 893              		.loc 2 1467 11 view .LVU265
 894 006c 2C4B     		ldr	r3, .L89+8
 895 006e F9E7     		b	.L56
 896              	.L74:
1461:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 897              		.loc 2 1461 22 view .LVU266
 898 0070 0425     		movs	r5, #4
 899              	.L53:
 900              	.LVL57:
1492:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 901              		.loc 2 1492 3 is_stmt 1 view .LVU267
1492:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 902              		.loc 2 1492 15 is_stmt 0 view .LVU268
 903 0072 FFF7FEFF 		bl	HAL_GetTick
 904              	.LVL58:
 905 0076 8046     		mov	r8, r0
 906              	.LVL59:
1495:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 907              		.loc 2 1495 3 is_stmt 1 view .LVU269
 908              	.L57:
1495:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 909              		.loc 2 1495 15 is_stmt 0 view .LVU270
 910 0078 2368     		ldr	r3, [r4]
 911              	.L58:
1495:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 912              		.loc 2 1495 9 is_stmt 1 view .LVU271
1495:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 913              		.loc 2 1495 25 is_stmt 0 view .LVU272
 914 007a 1A68     		ldr	r2, [r3]
1495:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 915              		.loc 2 1495 9 view .LVU273
 916 007c 2A42     		tst	r2, r5
 917 007e 2DD0     		beq	.L60
1514:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 918              		.loc 2 1514 3 is_stmt 1 view .LVU274
 919 0080 E26D     		ldr	r2, [r4, #92]
 920 0082 42F40072 		orr	r2, r2, #512
 921 0086 E265     		str	r2, [r4, #92]
1518:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       && (hadc->Init.ContinuousConvMode == DISABLE)
 922              		.loc 2 1518 3 view .LVU275
 923              	.LVL60:
 924              	.LBB248:
 925              	.LBI248:
3649:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 926              		.loc 1 3649 26 view .LVU276
 927              	.LBB249:
3651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 928              		.loc 1 3651 3 view .LVU277
3651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 929              		.loc 1 3651 12 is_stmt 0 view .LVU278
ARM GAS  /tmp/ccJLHc1D.s 			page 171


 930 0088 DA68     		ldr	r2, [r3, #12]
3651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 931              		.loc 1 3651 103 view .LVU279
 932 008a 12F4406F 		tst	r2, #3072
 933 008e 0FD1     		bne	.L62
3651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 934              		.loc 1 3651 103 view .LVU280
 935              	.LBE249:
 936              	.LBE248:
1519:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      )
 937              		.loc 2 1519 7 view .LVU281
 938 0090 627F     		ldrb	r2, [r4, #29]	@ zero_extendqisi2
 939 0092 6AB9     		cbnz	r2, .L62
1523:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 940              		.loc 2 1523 5 is_stmt 1 view .LVU282
1523:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 941              		.loc 2 1523 9 is_stmt 0 view .LVU283
 942 0094 1A68     		ldr	r2, [r3]
1523:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 943              		.loc 2 1523 8 view .LVU284
 944 0096 1007     		lsls	r0, r2, #28
 945 0098 0AD5     		bpl	.L62
1526:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 946              		.loc 2 1526 7 is_stmt 1 view .LVU285
 947 009a E26D     		ldr	r2, [r4, #92]
 948 009c 22F48072 		bic	r2, r2, #256
 949 00a0 E265     		str	r2, [r4, #92]
1528:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 950              		.loc 2 1528 7 view .LVU286
1528:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 951              		.loc 2 1528 16 is_stmt 0 view .LVU287
 952 00a2 E26D     		ldr	r2, [r4, #92]
1528:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 953              		.loc 2 1528 10 view .LVU288
 954 00a4 D104     		lsls	r1, r2, #19
1530:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 955              		.loc 2 1530 9 is_stmt 1 view .LVU289
 956 00a6 5EBF     		ittt	pl
 957 00a8 E26D     		ldrpl	r2, [r4, #92]
 958 00aa 42F00102 		orrpl	r2, r2, #1
 959 00ae E265     		strpl	r2, [r4, #92]
 960              	.L62:
1539:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 961              		.loc 2 1539 3 view .LVU290
1539:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 962              		.loc 2 1539 8 is_stmt 0 view .LVU291
 963 00b0 194A     		ldr	r2, .L89
 964 00b2 9342     		cmp	r3, r2
 965 00b4 25D0     		beq	.L75
1539:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 966              		.loc 2 1539 6 discriminator 8 view .LVU292
 967 00b6 02F58062 		add	r2, r2, #1024
 968 00ba 9342     		cmp	r3, r2
 969 00bc 08D1     		bne	.L65
1539:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 970              		.loc 2 1539 8 view .LVU293
 971 00be 1949     		ldr	r1, .L89+12
ARM GAS  /tmp/ccJLHc1D.s 			page 172


 972              	.L64:
1540:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
 973              		.loc 2 1540 7 view .LVU294
 974 00c0 092E     		cmp	r6, #9
 975 00c2 21D8     		bhi	.L66
 976 00c4 40F22122 		movw	r2, #545
 977 00c8 22FA06F6 		lsr	r6, r2, r6
 978              	.LVL61:
1540:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
 979              		.loc 2 1540 7 view .LVU295
 980 00cc F207     		lsls	r2, r6, #31
 981 00ce 1BD5     		bpl	.L66
 982              	.L65:
1546:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 983              		.loc 2 1546 5 is_stmt 1 view .LVU296
1546:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 984              		.loc 2 1546 14 is_stmt 0 view .LVU297
 985 00d0 D868     		ldr	r0, [r3, #12]
 986              	.LVL62:
 987              	.L67:
1560:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 988              		.loc 2 1560 3 is_stmt 1 view .LVU298
1560:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 989              		.loc 2 1560 6 is_stmt 0 view .LVU299
 990 00d2 082D     		cmp	r5, #8
 991 00d4 1AD1     		bne	.L68
1562:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 992              		.loc 2 1562 5 is_stmt 1 view .LVU300
 993 00d6 1D60     		str	r5, [r3]
 994              	.LVL63:
 995              	.L76:
1576:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
 996              		.loc 2 1576 10 is_stmt 0 view .LVU301
 997 00d8 0020     		movs	r0, #0
 998 00da B5E7     		b	.L55
 999              	.LVL64:
 1000              	.L60:
1498:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 1001              		.loc 2 1498 5 is_stmt 1 view .LVU302
1498:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 1002              		.loc 2 1498 8 is_stmt 0 view .LVU303
 1003 00dc 7A1C     		adds	r2, r7, #1
 1004 00de CCD0     		beq	.L58
1500:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 1005              		.loc 2 1500 7 is_stmt 1 view .LVU304
1500:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 1006              		.loc 2 1500 13 is_stmt 0 view .LVU305
 1007 00e0 FFF7FEFF 		bl	HAL_GetTick
 1008              	.LVL65:
1500:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 1009              		.loc 2 1500 27 view .LVU306
 1010 00e4 A0EB0800 		sub	r0, r0, r8
1500:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 1011              		.loc 2 1500 10 view .LVU307
 1012 00e8 B842     		cmp	r0, r7
 1013 00ea 01D8     		bhi	.L59
1500:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
ARM GAS  /tmp/ccJLHc1D.s 			page 173


 1014              		.loc 2 1500 51 discriminator 1 view .LVU308
 1015 00ec 002F     		cmp	r7, #0
 1016 00ee C3D1     		bne	.L57
 1017              	.L59:
1503:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1018              		.loc 2 1503 9 is_stmt 1 view .LVU309
 1019 00f0 E36D     		ldr	r3, [r4, #92]
 1020 00f2 43F00403 		orr	r3, r3, #4
 1021 00f6 E365     		str	r3, [r4, #92]
1506:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1022              		.loc 2 1506 9 view .LVU310
1506:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1023              		.loc 2 1506 9 view .LVU311
 1024 00f8 0023     		movs	r3, #0
 1025 00fa 84F85830 		strb	r3, [r4, #88]
1506:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1026              		.loc 2 1506 9 view .LVU312
1508:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 1027              		.loc 2 1508 9 view .LVU313
1508:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 1028              		.loc 2 1508 16 is_stmt 0 view .LVU314
 1029 00fe 0320     		movs	r0, #3
 1030 0100 A2E7     		b	.L55
 1031              	.L75:
1539:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 1032              		.loc 2 1539 8 view .LVU315
 1033 0102 4FF0A041 		mov	r1, #1342177280
 1034 0106 DBE7     		b	.L64
 1035              	.LVL66:
 1036              	.L66:
1551:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmp_cfgr = READ_REG(tmpADC_Master->CFGR);
 1037              		.loc 2 1551 5 is_stmt 1 discriminator 8 view .LVU316
1552:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 1038              		.loc 2 1552 5 discriminator 8 view .LVU317
1552:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 1039              		.loc 2 1552 14 is_stmt 0 discriminator 8 view .LVU318
 1040 0108 C868     		ldr	r0, [r1, #12]
 1041              	.LVL67:
1552:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 1042              		.loc 2 1552 14 discriminator 8 view .LVU319
 1043 010a E2E7     		b	.L67
 1044              	.LVL68:
 1045              	.L68:
1569:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 1046              		.loc 2 1569 5 is_stmt 1 view .LVU320
1569:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 1047              		.loc 2 1569 8 is_stmt 0 view .LVU321
 1048 010c 10F48040 		ands	r0, r0, #16384
 1049              	.LVL69:
1569:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 1050              		.loc 2 1569 8 view .LVU322
 1051 0110 E2D1     		bne	.L76
1571:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 1052              		.loc 2 1571 7 is_stmt 1 view .LVU323
 1053 0112 0C22     		movs	r2, #12
 1054 0114 1A60     		str	r2, [r3]
 1055 0116 97E7     		b	.L55
ARM GAS  /tmp/ccJLHc1D.s 			page 174


 1056              	.L90:
 1057              		.align	2
 1058              	.L89:
 1059 0118 00010050 		.word	1342177536
 1060 011c 00070050 		.word	1342179072
 1061 0120 00030050 		.word	1342178048
 1062 0124 00040050 		.word	1342178304
 1063              		.cfi_endproc
 1064              	.LFE363:
 1066              		.section	.text.HAL_ADC_PollForEvent,"ax",%progbits
 1067              		.align	1
 1068              		.global	HAL_ADC_PollForEvent
 1069              		.syntax unified
 1070              		.thumb
 1071              		.thumb_func
 1072              		.fpu fpv4-sp-d16
 1074              	HAL_ADC_PollForEvent:
 1075              	.LVL70:
 1076              	.LFB364:
1578:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1579:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
1580:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  Poll for ADC event.
1581:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param hadc ADC handle
1582:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param EventType the ADC event type.
1583:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          This parameter can be one of the following values:
1584:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *            @arg @ref ADC_EOSMP_EVENT  ADC End of Sampling event
1585:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *            @arg @ref ADC_AWD1_EVENT   ADC Analog watchdog 1 event (main analog watchdog, presen
1586:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *            @arg @ref ADC_AWD2_EVENT   ADC Analog watchdog 2 event (additional analog watchdog, 
1587:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *            @arg @ref ADC_AWD3_EVENT   ADC Analog watchdog 3 event (additional analog watchdog, 
1588:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *            @arg @ref ADC_OVR_EVENT    ADC Overrun event
1589:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *            @arg @ref ADC_JQOVF_EVENT  ADC Injected context queue overflow event
1590:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param Timeout Timeout value in millisecond.
1591:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note   The relevant flag is cleared if found to be set, except for ADC_FLAG_OVR.
1592:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         Indeed, the latter is reset only if hadc->Init.Overrun field is set
1593:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         to ADC_OVR_DATA_OVERWRITTEN. Otherwise, data register may be potentially overwritten
1594:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         by a new converted data as soon as OVR is cleared.
1595:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         To reset OVR flag once the preserved data is retrieved, the user can resort
1596:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         to macro __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
1597:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval HAL status
1598:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
1599:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_PollForEvent(ADC_HandleTypeDef *hadc, uint32_t EventType, uint32_t Timeou
1600:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
 1077              		.loc 2 1600 1 view -0
 1078              		.cfi_startproc
 1079              		@ args = 0, pretend = 0, frame = 0
 1080              		@ frame_needed = 0, uses_anonymous_args = 0
1601:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tickstart;
 1081              		.loc 2 1601 3 view .LVU325
1602:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1603:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Check the parameters */
1604:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 1082              		.loc 2 1604 3 view .LVU326
1605:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_EVENT_TYPE(EventType));
 1083              		.loc 2 1605 3 view .LVU327
1606:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1607:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Get tick count */
1608:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   tickstart = HAL_GetTick();
ARM GAS  /tmp/ccJLHc1D.s 			page 175


 1084              		.loc 2 1608 3 view .LVU328
1600:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tickstart;
 1085              		.loc 2 1600 1 is_stmt 0 view .LVU329
 1086 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1087              	.LCFI6:
 1088              		.cfi_def_cfa_offset 24
 1089              		.cfi_offset 3, -24
 1090              		.cfi_offset 4, -20
 1091              		.cfi_offset 5, -16
 1092              		.cfi_offset 6, -12
 1093              		.cfi_offset 7, -8
 1094              		.cfi_offset 14, -4
1600:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tickstart;
 1095              		.loc 2 1600 1 view .LVU330
 1096 0002 0446     		mov	r4, r0
 1097 0004 0D46     		mov	r5, r1
 1098 0006 1646     		mov	r6, r2
 1099              		.loc 2 1608 15 view .LVU331
 1100 0008 FFF7FEFF 		bl	HAL_GetTick
 1101              	.LVL71:
 1102              		.loc 2 1608 15 view .LVU332
 1103 000c 0746     		mov	r7, r0
 1104              	.LVL72:
1609:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1610:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Check selected event flag */
1611:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   while (__HAL_ADC_GET_FLAG(hadc, EventType) == 0UL)
 1105              		.loc 2 1611 3 is_stmt 1 view .LVU333
 1106              	.L92:
 1107              		.loc 2 1611 10 is_stmt 0 view .LVU334
 1108 000e 2368     		ldr	r3, [r4]
 1109              	.L93:
 1110              		.loc 2 1611 9 is_stmt 1 view .LVU335
 1111              		.loc 2 1611 10 is_stmt 0 view .LVU336
 1112 0010 1A68     		ldr	r2, [r3]
 1113              		.loc 2 1611 9 view .LVU337
 1114 0012 35EA0202 		bics	r2, r5, r2
 1115 0016 13D1     		bne	.L96
1612:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
1613:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Check if timeout is disabled (set to infinite wait) */
1614:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if (Timeout != HAL_MAX_DELAY)
1615:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
1616:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0UL))
1617:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
1618:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Update ADC state machine to timeout */
1619:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
1620:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1621:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Process unlocked */
1622:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         __HAL_UNLOCK(hadc);
1623:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1624:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         return HAL_TIMEOUT;
1625:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
1626:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
1627:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
1628:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1629:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   switch (EventType)
 1116              		.loc 2 1629 3 is_stmt 1 view .LVU338
 1117 0018 B5F5807F 		cmp	r5, #256
ARM GAS  /tmp/ccJLHc1D.s 			page 176


 1118 001c 3CD0     		beq	.L97
 1119 001e 21D8     		bhi	.L98
 1120 0020 022D     		cmp	r5, #2
 1121 0022 2ED0     		beq	.L99
 1122 0024 802D     		cmp	r5, #128
 1123 0026 33D0     		beq	.L100
 1124              	.L101:
1630:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
1631:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* End Of Sampling event */
1632:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     case ADC_EOSMP_EVENT:
1633:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Set ADC state */
1634:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOSMP);
1635:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1636:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Clear the End Of Sampling flag */
1637:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOSMP);
1638:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1639:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       break;
1640:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1641:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Analog watchdog (level out of window) event */
1642:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Note: In case of several analog watchdog enabled, if needed to know      */
1643:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* which one triggered and on which ADCx, test ADC state of analog watchdog */
1644:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* flags HAL_ADC_STATE_AWD1/2/3 using function "HAL_ADC_GetState()".        */
1645:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* For example:                                                             */
1646:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*  " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_AWD1) != 0UL) "          */
1647:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*  " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_AWD2) != 0UL) "          */
1648:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*  " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_AWD3) != 0UL) "          */
1649:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1650:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Check analog watchdog 1 flag */
1651:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     case ADC_AWD_EVENT:
1652:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Set ADC state */
1653:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_AWD1);
1654:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1655:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Clear ADC analog watchdog flag */
1656:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD1);
1657:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1658:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       break;
1659:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1660:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Check analog watchdog 2 flag */
1661:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     case ADC_AWD2_EVENT:
1662:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Set ADC state */
1663:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_AWD2);
1664:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1665:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Clear ADC analog watchdog flag */
1666:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD2);
1667:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1668:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       break;
1669:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1670:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Check analog watchdog 3 flag */
1671:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     case ADC_AWD3_EVENT:
1672:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Set ADC state */
1673:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_AWD3);
1674:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1675:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Clear ADC analog watchdog flag */
1676:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD3);
1677:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1678:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       break;
1679:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
ARM GAS  /tmp/ccJLHc1D.s 			page 177


1680:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Injected context queue overflow event */
1681:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     case ADC_JQOVF_EVENT:
1682:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Set ADC state */
1683:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_INJ_JQOVF);
1684:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1685:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Set ADC error code to Injected context queue overflow */
1686:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_JQOVF);
1687:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1688:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Clear ADC Injected context queue overflow flag */
1689:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JQOVF);
1690:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1691:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       break;
1692:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1693:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Overrun event */
1694:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     default: /* Case ADC_OVR_EVENT */
1695:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* If overrun is set to overwrite previous data, overrun event is not     */
1696:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* considered as an error.                                                */
1697:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* (cf ref manual "Managing conversions without using the DMA and without */
1698:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* overrun ")                                                             */
1699:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if (hadc->Init.Overrun == ADC_OVR_DATA_PRESERVED)
 1125              		.loc 2 1699 7 view .LVU339
 1126              		.loc 2 1699 10 is_stmt 0 view .LVU340
 1127 0028 E06B     		ldr	r0, [r4, #60]
 1128 002a 0028     		cmp	r0, #0
 1129 002c 3CD1     		bne	.L104
1700:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
1701:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Set ADC state */
1702:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_REG_OVR);
 1130              		.loc 2 1702 9 is_stmt 1 view .LVU341
 1131 002e E36D     		ldr	r3, [r4, #92]
 1132 0030 43F48063 		orr	r3, r3, #1024
 1133 0034 E365     		str	r3, [r4, #92]
1703:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1704:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Set ADC error code to overrun */
1705:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_OVR);
 1134              		.loc 2 1705 9 view .LVU342
 1135 0036 236E     		ldr	r3, [r4, #96]
 1136 0038 43F00203 		orr	r3, r3, #2
 1137 003c 2366     		str	r3, [r4, #96]
 1138 003e 10E0     		b	.L95
 1139              	.L96:
1614:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 1140              		.loc 2 1614 5 view .LVU343
1614:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 1141              		.loc 2 1614 8 is_stmt 0 view .LVU344
 1142 0040 721C     		adds	r2, r6, #1
 1143 0042 E5D0     		beq	.L93
1616:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 1144              		.loc 2 1616 7 is_stmt 1 view .LVU345
1616:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 1145              		.loc 2 1616 13 is_stmt 0 view .LVU346
 1146 0044 FFF7FEFF 		bl	HAL_GetTick
 1147              	.LVL73:
1616:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 1148              		.loc 2 1616 27 view .LVU347
 1149 0048 C01B     		subs	r0, r0, r7
1616:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
ARM GAS  /tmp/ccJLHc1D.s 			page 178


 1150              		.loc 2 1616 10 view .LVU348
 1151 004a B042     		cmp	r0, r6
 1152 004c 01D8     		bhi	.L94
1616:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 1153              		.loc 2 1616 51 discriminator 1 view .LVU349
 1154 004e 002E     		cmp	r6, #0
 1155 0050 DDD1     		bne	.L92
 1156              	.L94:
1619:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1157              		.loc 2 1619 9 is_stmt 1 view .LVU350
 1158 0052 E36D     		ldr	r3, [r4, #92]
 1159 0054 43F00403 		orr	r3, r3, #4
 1160 0058 E365     		str	r3, [r4, #92]
1622:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1161              		.loc 2 1622 9 view .LVU351
1622:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1162              		.loc 2 1622 9 view .LVU352
 1163 005a 0023     		movs	r3, #0
 1164 005c 84F85830 		strb	r3, [r4, #88]
1622:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1165              		.loc 2 1622 9 view .LVU353
1624:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 1166              		.loc 2 1624 9 view .LVU354
1624:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 1167              		.loc 2 1624 16 is_stmt 0 view .LVU355
 1168 0060 0320     		movs	r0, #3
 1169              	.L95:
1706:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
1707:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       else
1708:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
1709:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Clear ADC Overrun flag only if Overrun is set to ADC_OVR_DATA_OVERWRITTEN
1710:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****            otherwise, data register is potentially overwritten by new converted data as soon
1711:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****            as OVR is cleared. */
1712:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
1713:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
1714:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       break;
1715:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
1716:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1717:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Return function status */
1718:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   return HAL_OK;
1719:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
 1170              		.loc 2 1719 1 view .LVU356
 1171 0062 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1172              	.LVL74:
 1173              	.L98:
1629:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 1174              		.loc 2 1629 3 view .LVU357
 1175 0064 B5F5007F 		cmp	r5, #512
 1176 0068 1AD0     		beq	.L102
 1177 006a B5F5806F 		cmp	r5, #1024
 1178 006e DBD1     		bne	.L101
1683:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1179              		.loc 2 1683 7 is_stmt 1 view .LVU358
 1180 0070 E26D     		ldr	r2, [r4, #92]
 1181 0072 42F48042 		orr	r2, r2, #16384
 1182 0076 E265     		str	r2, [r4, #92]
1686:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
ARM GAS  /tmp/ccJLHc1D.s 			page 179


 1183              		.loc 2 1686 7 view .LVU359
 1184 0078 226E     		ldr	r2, [r4, #96]
 1185 007a 42F00802 		orr	r2, r2, #8
 1186 007e 2266     		str	r2, [r4, #96]
1689:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1187              		.loc 2 1689 7 view .LVU360
 1188 0080 03E0     		b	.L110
 1189              	.L99:
1634:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1190              		.loc 2 1634 7 view .LVU361
 1191 0082 E26D     		ldr	r2, [r4, #92]
 1192 0084 42F40062 		orr	r2, r2, #2048
 1193              	.L109:
1663:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1194              		.loc 2 1663 7 is_stmt 0 view .LVU362
 1195 0088 E265     		str	r2, [r4, #92]
 1196              	.L110:
1666:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1197              		.loc 2 1666 7 is_stmt 1 view .LVU363
 1198 008a 1D60     		str	r5, [r3]
1668:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1199              		.loc 2 1668 7 view .LVU364
 1200              	.L108:
1718:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
 1201              		.loc 2 1718 10 is_stmt 0 view .LVU365
 1202 008c 0020     		movs	r0, #0
 1203 008e E8E7     		b	.L95
 1204              	.L100:
1653:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1205              		.loc 2 1653 7 is_stmt 1 view .LVU366
 1206 0090 E26D     		ldr	r2, [r4, #92]
 1207 0092 42F48032 		orr	r2, r2, #65536
 1208 0096 F7E7     		b	.L109
 1209              	.L97:
1663:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1210              		.loc 2 1663 7 view .LVU367
 1211 0098 E26D     		ldr	r2, [r4, #92]
 1212 009a 42F40032 		orr	r2, r2, #131072
 1213 009e F3E7     		b	.L109
 1214              	.L102:
1673:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1215              		.loc 2 1673 7 view .LVU368
 1216 00a0 E26D     		ldr	r2, [r4, #92]
 1217 00a2 42F48022 		orr	r2, r2, #262144
 1218 00a6 EFE7     		b	.L109
 1219              	.L104:
1712:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 1220              		.loc 2 1712 9 view .LVU369
 1221 00a8 1022     		movs	r2, #16
 1222 00aa 1A60     		str	r2, [r3]
 1223 00ac EEE7     		b	.L108
 1224              		.cfi_endproc
 1225              	.LFE364:
 1227              		.section	.text.HAL_ADC_GetValue,"ax",%progbits
 1228              		.align	1
 1229              		.global	HAL_ADC_GetValue
 1230              		.syntax unified
ARM GAS  /tmp/ccJLHc1D.s 			page 180


 1231              		.thumb
 1232              		.thumb_func
 1233              		.fpu fpv4-sp-d16
 1235              	HAL_ADC_GetValue:
 1236              	.LVL75:
 1237              	.LFB369:
1720:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1721:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
1722:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  Enable ADC, start conversion of regular group with interruption.
1723:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note   Interruptions enabled in this function according to initialization
1724:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         setting : EOC (end of conversion), EOS (end of sequence),
1725:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         OVR overrun.
1726:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         Each of these interruptions has its dedicated callback function.
1727:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note   Case of multimode enabled (when multimode feature is available):
1728:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         HAL_ADC_Start_IT() must be called for ADC Slave first, then for
1729:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         ADC Master.
1730:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         For ADC Slave, ADC is enabled only (conversion is not started).
1731:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         For ADC Master, ADC is enabled and multimode conversion is started.
1732:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note   To guarantee a proper reset of all interruptions once all the needed
1733:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         conversions are obtained, HAL_ADC_Stop_IT() must be called to ensure
1734:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         a correct stop of the IT-based conversions.
1735:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note   By default, HAL_ADC_Start_IT() does not enable the End Of Sampling
1736:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         interruption. If required (e.g. in case of oversampling with trigger
1737:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         mode), the user must:
1738:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          1. first clear the EOSMP flag if set with macro __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EO
1739:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          2. then enable the EOSMP interrupt with macro __HAL_ADC_ENABLE_IT(hadc, ADC_IT_EOSMP)
1740:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          before calling HAL_ADC_Start_IT().
1741:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param hadc ADC handle
1742:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval HAL status
1743:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
1744:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start_IT(ADC_HandleTypeDef *hadc)
1745:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
1746:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
1747:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1748:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   const ADC_TypeDef *tmpADC_Master;
1749:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
1750:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
1751:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1752:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Check the parameters */
1753:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1754:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1755:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Perform ADC enable and conversion start if no conversion is on going */
1756:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
1757:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
1758:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Process locked */
1759:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     __HAL_LOCK(hadc);
1760:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1761:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Enable the ADC peripheral */
1762:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmp_hal_status = ADC_Enable(hadc);
1763:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1764:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Start conversion if ADC is effectively enabled */
1765:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1766:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
1767:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Set ADC state                                                        */
1768:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* - Clear state bitfield related to regular group conversion results   */
1769:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* - Set state bitfield related to regular operation                    */
1770:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
ARM GAS  /tmp/ccJLHc1D.s 			page 181


1771:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
1772:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY);
1773:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1774:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1775:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Reset HAL_ADC_STATE_MULTIMODE_SLAVE bit
1776:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         - if ADC instance is master or if multimode feature is not available
1777:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         - if multimode setting is disabled (ADC instance slave in independent mode) */
1778:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
1779:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
1780:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****          )
1781:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
1782:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
1783:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
1784:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
1785:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1786:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Set ADC error code */
1787:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Check if a conversion is on going on ADC group injected */
1788:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) != 0UL)
1789:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
1790:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Reset ADC error code fields related to regular conversions only */
1791:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));
1792:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
1793:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       else
1794:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
1795:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Reset all ADC error code fields */
1796:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         ADC_CLEAR_ERRORCODE(hadc);
1797:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
1798:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1799:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Clear ADC group regular conversion flag and overrun flag               */
1800:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* (To ensure of no unknown state from potential previous ADC operations) */
1801:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
1802:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1803:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Process unlocked */
1804:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Unlock before starting ADC conversions: in case of potential         */
1805:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
1806:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
1807:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1808:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Disable all interruptions before enabling the desired ones */
1809:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_EOC | ADC_IT_EOS | ADC_IT_OVR));
1810:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1811:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Enable ADC end of conversion interrupt */
1812:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       switch (hadc->Init.EOCSelection)
1813:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
1814:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         case ADC_EOC_SEQ_CONV:
1815:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           __HAL_ADC_ENABLE_IT(hadc, ADC_IT_EOS);
1816:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           break;
1817:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* case ADC_EOC_SINGLE_CONV */
1818:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         default:
1819:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           __HAL_ADC_ENABLE_IT(hadc, ADC_IT_EOC);
1820:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           break;
1821:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
1822:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1823:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Enable ADC overrun interrupt */
1824:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* If hadc->Init.Overrun is set to ADC_OVR_DATA_PRESERVED, only then is
1825:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****          ADC_IT_OVR enabled; otherwise data overwrite is considered as normal
1826:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****          behavior and no CPU time is lost for a non-processed interruption */
1827:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if (hadc->Init.Overrun == ADC_OVR_DATA_PRESERVED)
ARM GAS  /tmp/ccJLHc1D.s 			page 182


1828:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
1829:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         __HAL_ADC_ENABLE_IT(hadc, ADC_IT_OVR);
1830:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
1831:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1832:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Enable conversion of regular group.                                  */
1833:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* If software start has been selected, conversion starts immediately.  */
1834:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* If external trigger has been selected, conversion will start at next */
1835:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* trigger event.                                                       */
1836:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Case of multimode enabled (when multimode feature is available):     */
1837:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /*  - if ADC is slave and dual regular conversions are enabled, ADC is  */
1838:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /*    enabled only (conversion is not started),                         */
1839:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /*  - if ADC is master, ADC is enabled and conversion is started.       */
1840:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1841:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
1842:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
1843:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
1844:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_ALTERN)
1845:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****          )
1846:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
1847:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* ADC instance is not a multimode slave instance with multimode regular conversions enable
1848:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_JAUTO) != 0UL)
1849:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
1850:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
1851:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1852:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* Enable as well injected interruptions in case
1853:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****            HAL_ADCEx_InjectedStart_IT() has not been called beforehand. This
1854:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****            allows to start regular and injected conversions when JAUTO is
1855:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****            set with a single call to HAL_ADC_Start_IT() */
1856:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           switch (hadc->Init.EOCSelection)
1857:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           {
1858:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             case ADC_EOC_SEQ_CONV:
1859:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC);
1860:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOS);
1861:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               break;
1862:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             /* case ADC_EOC_SINGLE_CONV */
1863:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             default:
1864:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOS);
1865:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOC);
1866:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               break;
1867:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           }
1868:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
1869:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1870:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Start ADC group regular conversion */
1871:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         LL_ADC_REG_StartConversion(hadc->Instance);
1872:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
1873:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       else
1874:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
1875:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* ADC instance is a multimode slave instance with multimode regular conversions enabled */
1876:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
1877:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* if Master ADC JAUTO bit is set, Slave injected interruptions
1878:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****            are enabled nevertheless (for same reason as above) */
1879:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         tmpADC_Master = __LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance);
1880:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         if (READ_BIT(tmpADC_Master->CFGR, ADC_CFGR_JAUTO) != 0UL)
1881:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
1882:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* First, update Slave State in setting HAL_ADC_STATE_INJ_BUSY bit
1883:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****              and in resetting HAL_ADC_STATE_INJ_EOC bit */
1884:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
ARM GAS  /tmp/ccJLHc1D.s 			page 183


1885:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* Next, set Slave injected interruptions */
1886:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           switch (hadc->Init.EOCSelection)
1887:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           {
1888:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             case ADC_EOC_SEQ_CONV:
1889:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC);
1890:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOS);
1891:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               break;
1892:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             /* case ADC_EOC_SINGLE_CONV */
1893:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             default:
1894:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOS);
1895:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOC);
1896:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               break;
1897:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           }
1898:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
1899:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
1900:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #else
1901:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* ADC instance is not a multimode slave instance with multimode regular conversions enabled 
1902:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_JAUTO) != 0UL)
1903:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
1904:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
1905:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1906:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Enable as well injected interruptions in case
1907:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****          HAL_ADCEx_InjectedStart_IT() has not been called beforehand. This
1908:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****          allows to start regular and injected conversions when JAUTO is
1909:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****          set with a single call to HAL_ADC_Start_IT() */
1910:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         switch (hadc->Init.EOCSelection)
1911:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
1912:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           case ADC_EOC_SEQ_CONV:
1913:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC);
1914:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOS);
1915:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             break;
1916:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* case ADC_EOC_SINGLE_CONV */
1917:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           default:
1918:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOS);
1919:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOC);
1920:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             break;
1921:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
1922:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
1923:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1924:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Start ADC group regular conversion */
1925:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       LL_ADC_REG_StartConversion(hadc->Instance);
1926:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
1927:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
1928:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     else
1929:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
1930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Process unlocked */
1931:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
1932:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
1933:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1934:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
1935:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   else
1936:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
1937:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmp_hal_status = HAL_BUSY;
1938:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
1939:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1940:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Return function status */
1941:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   return tmp_hal_status;
ARM GAS  /tmp/ccJLHc1D.s 			page 184


1942:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
1943:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1944:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
1945:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  Stop ADC conversion of regular group (and injected group in
1946:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         case of auto_injection mode), disable interrution of
1947:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         end-of-conversion, disable ADC peripheral.
1948:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param hadc ADC handle
1949:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval HAL status.
1950:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
1951:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop_IT(ADC_HandleTypeDef *hadc)
1952:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
1953:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
1954:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1955:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Check the parameters */
1956:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1957:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1958:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Process locked */
1959:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   __HAL_LOCK(hadc);
1960:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1961:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* 1. Stop potential conversion on going, on ADC groups regular and injected */
1962:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_INJECTED_GROUP);
1963:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1964:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
1965:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
1966:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
1967:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Disable ADC end of conversion interrupt for regular group */
1968:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Disable ADC overrun interrupt */
1969:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_EOC | ADC_IT_EOS | ADC_IT_OVR));
1970:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1971:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* 2. Disable the ADC peripheral */
1972:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmp_hal_status = ADC_Disable(hadc);
1973:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1974:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Check if ADC is effectively disabled */
1975:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1976:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
1977:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Set ADC state */
1978:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1979:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
1980:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                         HAL_ADC_STATE_READY);
1981:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
1982:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
1983:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1984:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Process unlocked */
1985:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
1986:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1987:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Return function status */
1988:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   return tmp_hal_status;
1989:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
1990:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1991:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
1992:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  Enable ADC, start conversion of regular group and transfer result through DMA.
1993:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note   Interruptions enabled in this function:
1994:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         overrun (if applicable), DMA half transfer, DMA transfer complete.
1995:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         Each of these interruptions has its dedicated callback function.
1996:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note   Case of multimode enabled (when multimode feature is available): HAL_ADC_Start_DMA()
1997:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         is designed for single-ADC mode only. For multimode, the dedicated
1998:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         HAL_ADCEx_MultiModeStart_DMA() function must be used.
ARM GAS  /tmp/ccJLHc1D.s 			page 185


1999:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param hadc ADC handle
2000:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param pData Destination Buffer address.
2001:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param Length Number of data to be transferred from ADC peripheral to memory
2002:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval HAL status.
2003:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
2004:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start_DMA(ADC_HandleTypeDef *hadc, uint32_t *pData, uint32_t Length)
2005:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
2006:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
2007:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
2008:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
2009:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
2010:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2011:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Check the parameters */
2012:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2013:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2014:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Perform ADC enable and conversion start if no conversion is on going */
2015:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
2016:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
2017:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Process locked */
2018:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     __HAL_LOCK(hadc);
2019:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2020:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
2021:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Ensure that multimode regular conversions are not enabled.   */
2022:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Otherwise, dedicated API HAL_ADCEx_MultiModeStart_DMA() must be used.  */
2023:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if ((tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
2024:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
2025:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_ALTERN)
2026:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        )
2027:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
2028:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
2029:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Enable the ADC peripheral */
2030:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       tmp_hal_status = ADC_Enable(hadc);
2031:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2032:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Start conversion if ADC is effectively enabled */
2033:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if (tmp_hal_status == HAL_OK)
2034:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
2035:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Set ADC state                                                        */
2036:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* - Clear state bitfield related to regular group conversion results   */
2037:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* - Set state bitfield related to regular operation                    */
2038:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         ADC_STATE_CLR_SET(hadc->State,
2039:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                           HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL
2040:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                           HAL_ADC_STATE_REG_BUSY);
2041:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2042:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
2043:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Reset HAL_ADC_STATE_MULTIMODE_SLAVE bit
2044:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           - if ADC instance is master or if multimode feature is not available
2045:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           - if multimode setting is disabled (ADC instance slave in independent mode) */
2046:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
2047:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
2048:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****            )
2049:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
2050:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           CLEAR_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
2051:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
2052:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
2053:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2054:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Check if a conversion is on going on ADC group injected */
2055:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) != 0UL)
ARM GAS  /tmp/ccJLHc1D.s 			page 186


2056:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
2057:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* Reset ADC error code fields related to regular conversions only */
2058:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));
2059:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
2060:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         else
2061:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
2062:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* Reset all ADC error code fields */
2063:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           ADC_CLEAR_ERRORCODE(hadc);
2064:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
2065:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2066:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Set the DMA transfer complete callback */
2067:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->DMA_Handle->XferCpltCallback = ADC_DMAConvCplt;
2068:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2069:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Set the DMA half transfer complete callback */
2070:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->DMA_Handle->XferHalfCpltCallback = ADC_DMAHalfConvCplt;
2071:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2072:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Set the DMA error callback */
2073:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->DMA_Handle->XferErrorCallback = ADC_DMAError;
2074:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2075:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2076:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Manage ADC and DMA start: ADC overrun interruption, DMA start,     */
2077:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* ADC start (in case of SW start):                                   */
2078:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2079:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Clear regular group conversion flag and overrun flag               */
2080:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* (To ensure of no unknown state from potential previous ADC         */
2081:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* operations)                                                        */
2082:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
2083:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2084:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Process unlocked */
2085:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Unlock before starting ADC conversions: in case of potential         */
2086:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* interruption, to let the process to ADC IRQ Handler.                 */
2087:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         __HAL_UNLOCK(hadc);
2088:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2089:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* With DMA, overrun event is always considered as an error even if
2090:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****            hadc->Init.Overrun is set to ADC_OVR_DATA_OVERWRITTEN. Therefore,
2091:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****            ADC_IT_OVR is enabled. */
2092:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         __HAL_ADC_ENABLE_IT(hadc, ADC_IT_OVR);
2093:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2094:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Enable ADC DMA mode */
2095:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         SET_BIT(hadc->Instance->CFGR, ADC_CFGR_DMAEN);
2096:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2097:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Start the DMA channel */
2098:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         tmp_hal_status = HAL_DMA_Start_IT(hadc->DMA_Handle, (uint32_t)&hadc->Instance->DR, (uint32_
2099:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2100:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Enable conversion of regular group.                                  */
2101:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* If software start has been selected, conversion starts immediately.  */
2102:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* If external trigger has been selected, conversion will start at next */
2103:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* trigger event.                                                       */
2104:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Start ADC group regular conversion */
2105:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         LL_ADC_REG_StartConversion(hadc->Instance);
2106:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
2107:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       else
2108:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
2109:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Process unlocked */
2110:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         __HAL_UNLOCK(hadc);
2111:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
2112:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
ARM GAS  /tmp/ccJLHc1D.s 			page 187


2113:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
2114:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
2115:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     else
2116:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
2117:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       tmp_hal_status = HAL_ERROR;
2118:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Process unlocked */
2119:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
2120:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
2121:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
2122:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
2123:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   else
2124:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
2125:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmp_hal_status = HAL_BUSY;
2126:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
2127:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2128:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Return function status */
2129:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   return tmp_hal_status;
2130:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
2131:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2132:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
2133:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  Stop ADC conversion of regular group (and injected group in
2134:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         case of auto_injection mode), disable ADC DMA transfer, disable
2135:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         ADC peripheral.
2136:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note:  ADC peripheral disable is forcing stop of potential
2137:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         conversion on ADC group injected. If ADC group injected is under use, it
2138:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         should be preliminarily stopped using HAL_ADCEx_InjectedStop function.
2139:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note   Case of multimode enabled (when multimode feature is available):
2140:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         HAL_ADC_Stop_DMA() function is dedicated to single-ADC mode only.
2141:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         For multimode, the dedicated HAL_ADCEx_MultiModeStop_DMA() API must be used.
2142:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param hadc ADC handle
2143:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval HAL status.
2144:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
2145:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop_DMA(ADC_HandleTypeDef *hadc)
2146:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
2147:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
2148:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2149:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Check the parameters */
2150:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2151:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2152:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Process locked */
2153:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   __HAL_LOCK(hadc);
2154:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2155:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* 1. Stop potential ADC group regular conversion on going */
2156:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_INJECTED_GROUP);
2157:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2158:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
2159:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
2160:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
2161:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Disable ADC DMA (ADC DMA configuration of continous requests is kept) */
2162:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->CFGR, ADC_CFGR_DMAEN);
2163:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2164:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Disable the DMA channel (in case of DMA in circular mode or stop       */
2165:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* while DMA transfer is on going)                                        */
2166:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if (hadc->DMA_Handle->State == HAL_DMA_STATE_BUSY)
2167:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
2168:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       tmp_hal_status = HAL_DMA_Abort(hadc->DMA_Handle);
2169:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
ARM GAS  /tmp/ccJLHc1D.s 			page 188


2170:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Check if DMA channel effectively disabled */
2171:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if (tmp_hal_status != HAL_OK)
2172:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
2173:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Update ADC state machine to error */
2174:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
2175:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
2176:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
2177:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2178:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Disable ADC overrun interrupt */
2179:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_OVR);
2180:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2181:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* 2. Disable the ADC peripheral */
2182:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Update "tmp_hal_status" only if DMA channel disabling passed,          */
2183:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* to keep in memory a potential failing status.                          */
2184:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
2185:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
2186:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       tmp_hal_status = ADC_Disable(hadc);
2187:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
2188:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     else
2189:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
2190:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (void)ADC_Disable(hadc);
2191:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
2192:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2193:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Check if ADC is effectively disabled */
2194:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
2195:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
2196:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Set ADC state */
2197:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
2198:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
2199:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                         HAL_ADC_STATE_READY);
2200:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
2201:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2202:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
2203:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2204:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Process unlocked */
2205:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
2206:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2207:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Return function status */
2208:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   return tmp_hal_status;
2209:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
2210:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2211:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
2212:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  Get ADC regular group conversion result.
2213:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note   Reading register DR automatically clears ADC flag EOC
2214:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         (ADC group regular end of unitary conversion).
2215:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note   This function does not clear ADC flag EOS
2216:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         (ADC group regular end of sequence conversion).
2217:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         Occurrence of flag EOS rising:
2218:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          - If sequencer is composed of 1 rank, flag EOS is equivalent
2219:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *            to flag EOC.
2220:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          - If sequencer is composed of several ranks, during the scan
2221:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *            sequence flag EOC only is raised, at the end of the scan sequence
2222:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *            both flags EOC and EOS are raised.
2223:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         To clear this flag, either use function:
2224:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         in programming model IT: @ref HAL_ADC_IRQHandler(), in programming
2225:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         model polling: @ref HAL_ADC_PollForConversion()
2226:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         or @ref __HAL_ADC_CLEAR_FLAG(&hadc, ADC_FLAG_EOS).
ARM GAS  /tmp/ccJLHc1D.s 			page 189


2227:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param hadc ADC handle
2228:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval ADC group regular conversion data
2229:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
2230:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** uint32_t HAL_ADC_GetValue(ADC_HandleTypeDef *hadc)
2231:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
 1238              		.loc 2 2231 1 view -0
 1239              		.cfi_startproc
 1240              		@ args = 0, pretend = 0, frame = 0
 1241              		@ frame_needed = 0, uses_anonymous_args = 0
 1242              		@ link register save eliminated.
2232:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Check the parameters */
2233:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 1243              		.loc 2 2233 3 view .LVU371
2234:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2235:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Note: EOC flag is not cleared here by software because automatically     */
2236:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /*       cleared by hardware when reading register DR.                      */
2237:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2238:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Return ADC converted value */
2239:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   return hadc->Instance->DR;
 1244              		.loc 2 2239 3 view .LVU372
 1245              		.loc 2 2239 14 is_stmt 0 view .LVU373
 1246 0000 0368     		ldr	r3, [r0]
 1247              		.loc 2 2239 24 view .LVU374
 1248 0002 186C     		ldr	r0, [r3, #64]
 1249              	.LVL76:
2240:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
 1250              		.loc 2 2240 1 view .LVU375
 1251 0004 7047     		bx	lr
 1252              		.cfi_endproc
 1253              	.LFE369:
 1255              		.section	.text.HAL_ADC_StartSampling,"ax",%progbits
 1256              		.align	1
 1257              		.global	HAL_ADC_StartSampling
 1258              		.syntax unified
 1259              		.thumb
 1260              		.thumb_func
 1261              		.fpu fpv4-sp-d16
 1263              	HAL_ADC_StartSampling:
 1264              	.LVL77:
 1265              	.LFB370:
2241:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2242:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
2243:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  Start ADC conversion sampling phase of regular group
2244:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note:  This function should only be called to start sampling when
2245:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         - @ref ADC_SAMPLING_MODE_TRIGGER_CONTROLED sampling
2246:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         mode has been selected
2247:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         - @ref ADC_SOFTWARE_START has been selected as trigger source
2248:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param hadc ADC handle
2249:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval HAL status.
2250:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
2251:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_StartSampling(ADC_HandleTypeDef *hadc)
2252:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
 1266              		.loc 2 2252 1 is_stmt 1 view -0
 1267              		.cfi_startproc
 1268              		@ args = 0, pretend = 0, frame = 0
 1269              		@ frame_needed = 0, uses_anonymous_args = 0
 1270              		@ link register save eliminated.
ARM GAS  /tmp/ccJLHc1D.s 			page 190


2253:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Check the parameters */
2254:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 1271              		.loc 2 2254 3 view .LVU377
2255:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2256:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Start sampling */
2257:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   SET_BIT(hadc->Instance->CFGR2, ADC_CFGR2_SWTRIG);
 1272              		.loc 2 2257 3 view .LVU378
 1273 0000 0268     		ldr	r2, [r0]
 1274 0002 1369     		ldr	r3, [r2, #16]
 1275 0004 43F00073 		orr	r3, r3, #33554432
 1276 0008 1361     		str	r3, [r2, #16]
2258:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2259:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Return function status */
2260:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   return HAL_OK;
 1277              		.loc 2 2260 3 view .LVU379
2261:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
 1278              		.loc 2 2261 1 is_stmt 0 view .LVU380
 1279 000a 0020     		movs	r0, #0
 1280              	.LVL78:
 1281              		.loc 2 2261 1 view .LVU381
 1282 000c 7047     		bx	lr
 1283              		.cfi_endproc
 1284              	.LFE370:
 1286              		.section	.text.HAL_ADC_StopSampling,"ax",%progbits
 1287              		.align	1
 1288              		.global	HAL_ADC_StopSampling
 1289              		.syntax unified
 1290              		.thumb
 1291              		.thumb_func
 1292              		.fpu fpv4-sp-d16
 1294              	HAL_ADC_StopSampling:
 1295              	.LVL79:
 1296              	.LFB371:
2262:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2263:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
2264:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  Stop ADC conversion sampling phase of regular group and start conversion
2265:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note:  This function should only be called to stop sampling when
2266:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         - @ref ADC_SAMPLING_MODE_TRIGGER_CONTROLED sampling
2267:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         mode has been selected
2268:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         - @ref ADC_SOFTWARE_START has been selected as trigger source
2269:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         - after sampling has been started using @ref HAL_ADC_StartSampling.
2270:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param hadc ADC handle
2271:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval HAL status.
2272:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
2273:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_StopSampling(ADC_HandleTypeDef *hadc)
2274:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
 1297              		.loc 2 2274 1 is_stmt 1 view -0
 1298              		.cfi_startproc
 1299              		@ args = 0, pretend = 0, frame = 0
 1300              		@ frame_needed = 0, uses_anonymous_args = 0
 1301              		@ link register save eliminated.
2275:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Check the parameters */
2276:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 1302              		.loc 2 2276 3 view .LVU383
2277:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2278:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Start sampling */
2279:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->CFGR2, ADC_CFGR2_SWTRIG);
ARM GAS  /tmp/ccJLHc1D.s 			page 191


 1303              		.loc 2 2279 3 view .LVU384
 1304 0000 0268     		ldr	r2, [r0]
 1305 0002 1369     		ldr	r3, [r2, #16]
 1306 0004 23F00073 		bic	r3, r3, #33554432
 1307 0008 1361     		str	r3, [r2, #16]
2280:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2281:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Return function status */
2282:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   return HAL_OK;
 1308              		.loc 2 2282 3 view .LVU385
2283:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
 1309              		.loc 2 2283 1 is_stmt 0 view .LVU386
 1310 000a 0020     		movs	r0, #0
 1311              	.LVL80:
 1312              		.loc 2 2283 1 view .LVU387
 1313 000c 7047     		bx	lr
 1314              		.cfi_endproc
 1315              	.LFE371:
 1317              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 1318              		.align	1
 1319              		.weak	HAL_ADC_ConvCpltCallback
 1320              		.syntax unified
 1321              		.thumb
 1322              		.thumb_func
 1323              		.fpu fpv4-sp-d16
 1325              	HAL_ADC_ConvCpltCallback:
 1326              	.LFB391:
 1327              		.cfi_startproc
 1328              		@ args = 0, pretend = 0, frame = 0
 1329              		@ frame_needed = 0, uses_anonymous_args = 0
 1330              		@ link register save eliminated.
 1331 0000 7047     		bx	lr
 1332              		.cfi_endproc
 1333              	.LFE391:
 1335              		.section	.text.HAL_ADC_ConvHalfCpltCallback,"ax",%progbits
 1336              		.align	1
 1337              		.weak	HAL_ADC_ConvHalfCpltCallback
 1338              		.syntax unified
 1339              		.thumb
 1340              		.thumb_func
 1341              		.fpu fpv4-sp-d16
 1343              	HAL_ADC_ConvHalfCpltCallback:
 1344              	.LFB393:
 1345              		.cfi_startproc
 1346              		@ args = 0, pretend = 0, frame = 0
 1347              		@ frame_needed = 0, uses_anonymous_args = 0
 1348              		@ link register save eliminated.
 1349 0000 7047     		bx	lr
 1350              		.cfi_endproc
 1351              	.LFE393:
 1353              		.section	.text.ADC_DMAHalfConvCplt,"ax",%progbits
 1354              		.align	1
 1355              		.global	ADC_DMAHalfConvCplt
 1356              		.syntax unified
 1357              		.thumb
 1358              		.thumb_func
 1359              		.fpu fpv4-sp-d16
 1361              	ADC_DMAHalfConvCplt:
ARM GAS  /tmp/ccJLHc1D.s 			page 192


 1362              	.LVL81:
 1363              	.LFB385:
2284:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2285:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
2286:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  Handle ADC interrupt request.
2287:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param hadc ADC handle
2288:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval None
2289:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
2290:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** void HAL_ADC_IRQHandler(ADC_HandleTypeDef *hadc)
2291:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
2292:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t overrun_error = 0UL; /* flag set if overrun occurrence has to be considered as an error 
2293:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_isr = hadc->Instance->ISR;
2294:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_ier = hadc->Instance->IER;
2295:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_adc_inj_is_trigger_source_sw_start;
2296:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_adc_reg_is_trigger_source_sw_start;
2297:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_cfgr;
2298:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
2299:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   const ADC_TypeDef *tmpADC_Master;
2300:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
2301:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
2302:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2303:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Check the parameters */
2304:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2305:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
2306:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2307:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* ========== Check End of Sampling flag for ADC group regular ========== */
2308:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_EOSMP) == ADC_FLAG_EOSMP) && ((tmp_ier & ADC_IT_EOSMP) == ADC_IT_EOSMP))
2309:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
2310:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Update state machine on end of sampling status if not in error state */
2311:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if ((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) == 0UL)
2312:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
2313:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Set ADC state */
2314:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOSMP);
2315:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
2316:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2317:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* End Of Sampling callback */
2318:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2319:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     hadc->EndOfSamplingCallback(hadc);
2320:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #else
2321:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     HAL_ADCEx_EndOfSamplingCallback(hadc);
2322:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2323:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2324:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Clear regular group conversion flag */
2325:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOSMP);
2326:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
2327:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2328:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* ====== Check ADC group regular end of unitary conversion sequence conversions ===== */
2329:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if ((((tmp_isr & ADC_FLAG_EOC) == ADC_FLAG_EOC) && ((tmp_ier & ADC_IT_EOC) == ADC_IT_EOC)) ||
2330:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS)))
2331:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
2332:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Update state machine on conversion status if not in error state */
2333:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if ((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) == 0UL)
2334:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
2335:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Set ADC state */
2336:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
2337:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
2338:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
ARM GAS  /tmp/ccJLHc1D.s 			page 193


2339:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Determine whether any further conversion upcoming on group regular     */
2340:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* by external trigger, continuous mode or scan sequence on going         */
2341:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* to disable interruption.                                               */
2342:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if (LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance) != 0UL)
2343:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
2344:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Get relevant register CFGR in ADC instance of ADC master or slave    */
2345:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* in function of multimode state (for devices with multimode           */
2346:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* available).                                                          */
2347:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
2348:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
2349:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
2350:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
2351:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_ALTERN)
2352:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****          )
2353:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
2354:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* check CONT bit directly in handle ADC CFGR register */
2355:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         tmp_cfgr = READ_REG(hadc->Instance->CFGR);
2356:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
2357:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       else
2358:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
2359:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* else need to check Master ADC CONT bit */
2360:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         tmpADC_Master = __LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance);
2361:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         tmp_cfgr = READ_REG(tmpADC_Master->CFGR);
2362:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
2363:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #else
2364:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       tmp_cfgr = READ_REG(hadc->Instance->CFGR);
2365:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
2366:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2367:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Carry on if continuous mode is disabled */
2368:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if (READ_BIT(tmp_cfgr, ADC_CFGR_CONT) != ADC_CFGR_CONT)
2369:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
2370:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* If End of Sequence is reached, disable interrupts */
2371:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOS))
2372:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
2373:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* Allowed to modify bits ADC_IT_EOC/ADC_IT_EOS only if bit         */
2374:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* ADSTART==0 (no conversion on going)                              */
2375:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
2376:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           {
2377:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             /* Disable ADC end of sequence conversion interrupt */
2378:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             /* Note: Overrun interrupt was enabled with EOC interrupt in      */
2379:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             /* HAL_Start_IT(), but is not disabled here because can be used   */
2380:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             /* by overrun IRQ process below.                                  */
2381:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC | ADC_IT_EOS);
2382:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2383:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             /* Set ADC state */
2384:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
2385:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2386:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == 0UL)
2387:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             {
2388:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               SET_BIT(hadc->State, HAL_ADC_STATE_READY);
2389:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             }
2390:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           }
2391:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           else
2392:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           {
2393:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             /* Change ADC state to error state */
2394:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
2395:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
ARM GAS  /tmp/ccJLHc1D.s 			page 194


2396:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             /* Set ADC error code to ADC peripheral internal error */
2397:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
2398:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           }
2399:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
2400:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
2401:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
2402:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2403:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Conversion complete callback */
2404:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Note: Into callback function "HAL_ADC_ConvCpltCallback()",             */
2405:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*       to determine if conversion has been triggered from EOC or EOS,   */
2406:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*       possibility to use:                                              */
2407:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*        " if( __HAL_ADC_GET_FLAG(&hadc, ADC_FLAG_EOS)) "                */
2408:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2409:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     hadc->ConvCpltCallback(hadc);
2410:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #else
2411:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     HAL_ADC_ConvCpltCallback(hadc);
2412:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2413:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2414:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Clear regular group conversion flag */
2415:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Note: in case of overrun set to ADC_OVR_DATA_PRESERVED, end of         */
2416:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*       conversion flags clear induces the release of the preserved data.*/
2417:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*       Therefore, if the preserved data value is needed, it must be     */
2418:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*       read preliminarily into HAL_ADC_ConvCpltCallback().              */
2419:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS));
2420:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
2421:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2422:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* ====== Check ADC group injected end of unitary conversion sequence conversions ===== */
2423:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if ((((tmp_isr & ADC_FLAG_JEOC) == ADC_FLAG_JEOC) && ((tmp_ier & ADC_IT_JEOC) == ADC_IT_JEOC)) ||
2424:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_JEOS) == ADC_FLAG_JEOS) && ((tmp_ier & ADC_IT_JEOS) == ADC_IT_JEOS)))
2425:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
2426:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Update state machine on conversion status if not in error state */
2427:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if ((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) == 0UL)
2428:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
2429:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Set ADC state */
2430:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_INJ_EOC);
2431:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
2432:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2433:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Retrieve ADC configuration */
2434:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmp_adc_inj_is_trigger_source_sw_start = LL_ADC_INJ_IsTriggerSourceSWStart(hadc->Instance);
2435:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmp_adc_reg_is_trigger_source_sw_start = LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance);
2436:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Get relevant register CFGR in ADC instance of ADC master or slave  */
2437:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* in function of multimode state (for devices with multimode         */
2438:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* available).                                                        */
2439:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
2440:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
2441:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
2442:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_REG_SIMULT)
2443:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_REG_INTERL)
2444:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        )
2445:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
2446:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       tmp_cfgr = READ_REG(hadc->Instance->CFGR);
2447:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
2448:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     else
2449:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
2450:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       tmpADC_Master = __LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance);
2451:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       tmp_cfgr = READ_REG(tmpADC_Master->CFGR);
2452:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
ARM GAS  /tmp/ccJLHc1D.s 			page 195


2453:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #else
2454:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmp_cfgr = READ_REG(hadc->Instance->CFGR);
2455:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
2456:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2457:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Disable interruption if no further conversion upcoming by injected     */
2458:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* external trigger or by automatic injected conversion with regular      */
2459:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* group having no further conversion upcoming (same conditions as        */
2460:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* regular group interruption disabling above),                           */
2461:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* and if injected scan sequence is completed.                            */
2462:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if ((tmp_adc_inj_is_trigger_source_sw_start != 0UL)            ||
2463:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         ((READ_BIT(tmp_cfgr, ADC_CFGR_JAUTO) == 0UL)      &&
2464:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****          ((tmp_adc_reg_is_trigger_source_sw_start != 0UL)  &&
2465:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           (READ_BIT(tmp_cfgr, ADC_CFGR_CONT) == 0UL))))
2466:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
2467:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* If End of Sequence is reached, disable interrupts */
2468:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_JEOS))
2469:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
2470:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Particular case if injected contexts queue is enabled:             */
2471:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* when the last context has been fully processed, JSQR is reset      */
2472:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* by the hardware. Even if no injected conversion is planned to come */
2473:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* (queue empty, triggers are ignored), it can start again            */
2474:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* immediately after setting a new context (JADSTART is still set).   */
2475:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Therefore, state of HAL ADC injected group is kept to busy.        */
2476:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         if (READ_BIT(tmp_cfgr, ADC_CFGR_JQM) == 0UL)
2477:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
2478:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* Allowed to modify bits ADC_IT_JEOC/ADC_IT_JEOS only if bit       */
2479:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* JADSTART==0 (no conversion on going)                             */
2480:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           if (LL_ADC_INJ_IsConversionOngoing(hadc->Instance) == 0UL)
2481:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           {
2482:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             /* Disable ADC end of sequence conversion interrupt  */
2483:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC | ADC_IT_JEOS);
2484:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2485:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             /* Set ADC state */
2486:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);
2487:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2488:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             if ((hadc->State & HAL_ADC_STATE_REG_BUSY) == 0UL)
2489:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             {
2490:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               SET_BIT(hadc->State, HAL_ADC_STATE_READY);
2491:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             }
2492:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           }
2493:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           else
2494:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           {
2495:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             /* Update ADC state machine to error */
2496:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
2497:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2498:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             /* Set ADC error code to ADC peripheral internal error */
2499:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
2500:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           }
2501:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
2502:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
2503:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
2504:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2505:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Injected Conversion complete callback */
2506:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Note:  HAL_ADCEx_InjectedConvCpltCallback can resort to
2507:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               if( __HAL_ADC_GET_FLAG(&hadc, ADC_FLAG_JEOS)) or
2508:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               if( __HAL_ADC_GET_FLAG(&hadc, ADC_FLAG_JEOC)) to determine whether
2509:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               interruption has been triggered by end of conversion or end of
ARM GAS  /tmp/ccJLHc1D.s 			page 196


2510:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               sequence.    */
2511:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2512:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     hadc->InjectedConvCpltCallback(hadc);
2513:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #else
2514:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     HAL_ADCEx_InjectedConvCpltCallback(hadc);
2515:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2516:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2517:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Clear injected group conversion flag */
2518:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JEOC | ADC_FLAG_JEOS);
2519:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
2520:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2521:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* ========== Check Analog watchdog 1 flag ========== */
2522:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_AWD1) == ADC_FLAG_AWD1) && ((tmp_ier & ADC_IT_AWD1) == ADC_IT_AWD1))
2523:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
2524:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Set ADC state */
2525:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD1);
2526:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2527:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Level out of window 1 callback */
2528:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2529:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     hadc->LevelOutOfWindowCallback(hadc);
2530:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #else
2531:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     HAL_ADC_LevelOutOfWindowCallback(hadc);
2532:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2533:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2534:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Clear ADC analog watchdog flag */
2535:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD1);
2536:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
2537:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2538:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* ========== Check analog watchdog 2 flag ========== */
2539:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_AWD2) == ADC_FLAG_AWD2) && ((tmp_ier & ADC_IT_AWD2) == ADC_IT_AWD2))
2540:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
2541:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Set ADC state */
2542:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD2);
2543:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2544:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Level out of window 2 callback */
2545:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2546:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     hadc->LevelOutOfWindow2Callback(hadc);
2547:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #else
2548:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     HAL_ADCEx_LevelOutOfWindow2Callback(hadc);
2549:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2550:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2551:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Clear ADC analog watchdog flag */
2552:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD2);
2553:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
2554:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2555:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* ========== Check analog watchdog 3 flag ========== */
2556:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_AWD3) == ADC_FLAG_AWD3) && ((tmp_ier & ADC_IT_AWD3) == ADC_IT_AWD3))
2557:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
2558:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Set ADC state */
2559:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD3);
2560:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2561:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Level out of window 3 callback */
2562:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2563:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     hadc->LevelOutOfWindow3Callback(hadc);
2564:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #else
2565:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     HAL_ADCEx_LevelOutOfWindow3Callback(hadc);
2566:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
ARM GAS  /tmp/ccJLHc1D.s 			page 197


2567:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2568:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Clear ADC analog watchdog flag */
2569:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD3);
2570:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
2571:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2572:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* ========== Check Overrun flag ========== */
2573:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_OVR) == ADC_FLAG_OVR) && ((tmp_ier & ADC_IT_OVR) == ADC_IT_OVR))
2574:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
2575:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* If overrun is set to overwrite previous data (default setting),        */
2576:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* overrun event is not considered as an error.                           */
2577:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* (cf ref manual "Managing conversions without using the DMA and without */
2578:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* overrun ")                                                             */
2579:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Exception for usage with DMA overrun event always considered as an     */
2580:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* error.                                                                 */
2581:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if (hadc->Init.Overrun == ADC_OVR_DATA_PRESERVED)
2582:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
2583:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       overrun_error = 1UL;
2584:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
2585:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     else
2586:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
2587:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Check DMA configuration */
2588:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
2589:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if (tmp_multimode_config != LL_ADC_MULTI_INDEPENDENT)
2590:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
2591:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Multimode (when feature is available) is enabled,
2592:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****            Common Control Register MDMA bits must be checked. */
2593:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         if (LL_ADC_GetMultiDMATransfer(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) != LL_ADC_MULTI_RE
2594:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
2595:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           overrun_error = 1UL;
2596:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
2597:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
2598:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       else
2599:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
2600:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
2601:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Multimode not set or feature not available or ADC independent */
2602:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         if ((hadc->Instance->CFGR & ADC_CFGR_DMAEN) != 0UL)
2603:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
2604:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           overrun_error = 1UL;
2605:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
2606:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
2607:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
2608:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2609:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if (overrun_error == 1UL)
2610:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
2611:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Change ADC state to error state */
2612:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_OVR);
2613:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2614:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Set ADC error code to overrun */
2615:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_OVR);
2616:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2617:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Error callback */
2618:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Note: In case of overrun, ADC conversion data is preserved until     */
2619:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /*       flag OVR is reset.                                             */
2620:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /*       Therefore, old ADC conversion data can be retrieved in         */
2621:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /*       function "HAL_ADC_ErrorCallback()".                            */
2622:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2623:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       hadc->ErrorCallback(hadc);
ARM GAS  /tmp/ccJLHc1D.s 			page 198


2624:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #else
2625:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       HAL_ADC_ErrorCallback(hadc);
2626:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2627:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
2628:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2629:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Clear ADC overrun flag */
2630:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
2631:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
2632:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2633:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* ========== Check Injected context queue overflow flag ========== */
2634:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_JQOVF) == ADC_FLAG_JQOVF) && ((tmp_ier & ADC_IT_JQOVF) == ADC_IT_JQOVF))
2635:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
2636:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Change ADC state to overrun state */
2637:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_INJ_JQOVF);
2638:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2639:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Set ADC error code to Injected context queue overflow */
2640:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_JQOVF);
2641:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2642:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Clear the Injected context queue overflow flag */
2643:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JQOVF);
2644:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2645:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Injected context queue overflow callback */
2646:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2647:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     hadc->InjectedQueueOverflowCallback(hadc);
2648:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #else
2649:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     HAL_ADCEx_InjectedQueueOverflowCallback(hadc);
2650:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2651:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
2652:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2653:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
2654:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2655:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
2656:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  Conversion complete callback in non-blocking mode.
2657:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param hadc ADC handle
2658:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval None
2659:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
2660:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** __weak void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef *hadc)
2661:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
2662:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
2663:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   UNUSED(hadc);
2664:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2665:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
2666:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             function HAL_ADC_ConvCpltCallback must be implemented in the user file.
2667:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****    */
2668:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
2669:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2670:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
2671:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  Conversion DMA half-transfer callback in non-blocking mode.
2672:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param hadc ADC handle
2673:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval None
2674:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
2675:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** __weak void HAL_ADC_ConvHalfCpltCallback(ADC_HandleTypeDef *hadc)
2676:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
2677:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
2678:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   UNUSED(hadc);
2679:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2680:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
ARM GAS  /tmp/ccJLHc1D.s 			page 199


2681:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             function HAL_ADC_ConvHalfCpltCallback must be implemented in the user file.
2682:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
2683:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
2684:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2685:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
2686:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  Analog watchdog 1 callback in non-blocking mode.
2687:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param hadc ADC handle
2688:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval None
2689:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
2690:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** __weak void HAL_ADC_LevelOutOfWindowCallback(ADC_HandleTypeDef *hadc)
2691:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
2692:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
2693:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   UNUSED(hadc);
2694:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2695:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
2696:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             function HAL_ADC_LevelOutOfWindowCallback must be implemented in the user file.
2697:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
2698:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
2699:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2700:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
2701:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  ADC error callback in non-blocking mode
2702:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         (ADC conversion with interruption or transfer by DMA).
2703:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note   In case of error due to overrun when using ADC with DMA transfer
2704:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         (HAL ADC handle parameter "ErrorCode" to state "HAL_ADC_ERROR_OVR"):
2705:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         - Reinitialize the DMA using function "HAL_ADC_Stop_DMA()".
2706:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         - If needed, restart a new ADC conversion using function
2707:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *           "HAL_ADC_Start_DMA()"
2708:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *           (this function is also clearing overrun flag)
2709:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param hadc ADC handle
2710:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval None
2711:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
2712:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** __weak void HAL_ADC_ErrorCallback(ADC_HandleTypeDef *hadc)
2713:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
2714:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
2715:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   UNUSED(hadc);
2716:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2717:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
2718:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             function HAL_ADC_ErrorCallback must be implemented in the user file.
2719:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
2720:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
2721:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2722:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
2723:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @}
2724:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
2725:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2726:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group3 Peripheral Control functions
2727:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief    Peripheral Control functions
2728:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *
2729:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** @verbatim
2730:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****  ===============================================================================
2731:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****              ##### Peripheral Control functions #####
2732:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****  ===============================================================================
2733:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     [..]  This section provides functions allowing to:
2734:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (+) Configure channels on regular group
2735:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (+) Configure the analog watchdog
2736:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2737:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** @endverbatim
ARM GAS  /tmp/ccJLHc1D.s 			page 200


2738:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @{
2739:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
2740:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2741:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
2742:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  Configure a channel to be assigned to ADC group regular.
2743:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note   In case of usage of internal measurement channels:
2744:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         Vbat/VrefInt/TempSensor.
2745:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         These internal paths can be disabled using function
2746:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         HAL_ADC_DeInit().
2747:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note   Possibility to update parameters on the fly:
2748:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         This function initializes channel into ADC group regular,
2749:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         following calls to this function can be used to reconfigure
2750:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         some parameters of structure "ADC_ChannelConfTypeDef" on the fly,
2751:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         without resetting the ADC.
2752:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         The setting of these parameters is conditioned to ADC state:
2753:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         Refer to comments of structure "ADC_ChannelConfTypeDef".
2754:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param hadc ADC handle
2755:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param sConfig Structure of ADC channel assigned to ADC group regular.
2756:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval HAL status
2757:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
2758:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_ConfigChannel(ADC_HandleTypeDef *hadc, ADC_ChannelConfTypeDef *sConfig)
2759:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
2760:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
2761:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmpOffsetShifted;
2762:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_config_internal_channel;
2763:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0;
2764:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
2765:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
2766:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2767:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Check the parameters */
2768:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2769:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_REGULAR_RANK(sConfig->Rank));
2770:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));
2771:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_SINGLE_DIFFERENTIAL(sConfig->SingleDiff));
2772:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_OFFSET_NUMBER(sConfig->OffsetNumber));
2773:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), sConfig->Offset));
2774:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2775:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* if ROVSE is set, the value of the OFFSETy_EN bit in ADCx_OFRy register is
2776:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      ignored (considered as reset) */
2777:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(!((sConfig->OffsetNumber != ADC_OFFSET_NONE) && (hadc->Init.OversamplingMode == ENAB
2778:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2779:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Verification of channel number */
2780:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (sConfig->SingleDiff != ADC_DIFFERENTIAL_ENDED)
2781:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
2782:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     assert_param(IS_ADC_CHANNEL(hadc, sConfig->Channel));
2783:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
2784:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   else
2785:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
2786:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     assert_param(IS_ADC_DIFF_CHANNEL(hadc, sConfig->Channel));
2787:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
2788:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2789:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Process locked */
2790:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   __HAL_LOCK(hadc);
2791:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2792:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Parameters update conditioned to ADC state:                              */
2793:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
2794:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* conversion on going on regular group:                                    */
ARM GAS  /tmp/ccJLHc1D.s 			page 201


2795:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /*  - Channel number                                                        */
2796:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /*  - Channel rank                                                          */
2797:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
2798:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
2799:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Set ADC group regular sequence: channel on the selected scan sequence rank */
2800:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     LL_ADC_REG_SetSequencerRanks(hadc->Instance, sConfig->Rank, sConfig->Channel);
2801:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2802:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Parameters update conditioned to ADC state:                              */
2803:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Parameters that can be updated when ADC is disabled or enabled without   */
2804:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* conversion on going on regular group:                                    */
2805:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*  - Channel sampling time                                                 */
2806:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*  - Channel offset                                                        */
2807:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
2808:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
2809:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if ((tmp_adc_is_conversion_on_going_regular == 0UL)
2810:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         && (tmp_adc_is_conversion_on_going_injected == 0UL)
2811:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        )
2812:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
2813:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Manage specific case of sampling time 3.5 cycles replacing 2.5 cyles */
2814:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if (sConfig->SamplingTime == ADC_SAMPLETIME_3CYCLES_5)
2815:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
2816:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Set sampling time of the selected ADC channel */
2817:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         LL_ADC_SetChannelSamplingTime(hadc->Instance, sConfig->Channel, LL_ADC_SAMPLINGTIME_2CYCLES
2818:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2819:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Set ADC sampling time common configuration */
2820:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         LL_ADC_SetSamplingTimeCommonConfig(hadc->Instance, LL_ADC_SAMPLINGTIME_COMMON_3C5_REPL_2C5)
2821:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
2822:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       else
2823:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
2824:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Set sampling time of the selected ADC channel */
2825:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         LL_ADC_SetChannelSamplingTime(hadc->Instance, sConfig->Channel, sConfig->SamplingTime);
2826:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2827:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Set ADC sampling time common configuration */
2828:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         LL_ADC_SetSamplingTimeCommonConfig(hadc->Instance, LL_ADC_SAMPLINGTIME_COMMON_DEFAULT);
2829:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
2830:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2831:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Configure the offset: offset enable/disable, channel, offset value */
2832:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2833:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Shift the offset with respect to the selected ADC resolution. */
2834:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Offset has to be left-aligned on bit 11, the LSB (right bits) are set to 0 */
2835:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       tmpOffsetShifted = ADC_OFFSET_SHIFT_RESOLUTION(hadc, (uint32_t)sConfig->Offset);
2836:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2837:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if (sConfig->OffsetNumber != ADC_OFFSET_NONE)
2838:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
2839:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Set ADC selected offset number */
2840:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         LL_ADC_SetOffset(hadc->Instance, sConfig->OffsetNumber, sConfig->Channel, tmpOffsetShifted)
2841:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2842:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         assert_param(IS_ADC_OFFSET_SIGN(sConfig->OffsetSign));
2843:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         assert_param(IS_FUNCTIONAL_STATE(sConfig->OffsetSaturation));
2844:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Set ADC selected offset sign & saturation */
2845:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         LL_ADC_SetOffsetSign(hadc->Instance, sConfig->OffsetNumber, sConfig->OffsetSign);
2846:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         LL_ADC_SetOffsetSaturation(hadc->Instance, sConfig->OffsetNumber, (sConfig->OffsetSaturatio
2847:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
2848:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       else
2849:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
2850:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Scan each offset register to check if the selected channel is targeted. */
2851:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* If this is the case, the corresponding offset number is disabled.       */
ARM GAS  /tmp/ccJLHc1D.s 			page 202


2852:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         if(__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_1))
2853:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
2854:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_1, LL_ADC_OFFSET_DISABLE);
2855:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
2856:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         if(__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_2))
2857:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
2858:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_2, LL_ADC_OFFSET_DISABLE);
2859:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
2860:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         if(__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_3))
2861:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
2862:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_3, LL_ADC_OFFSET_DISABLE);
2863:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
2864:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         if(__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_4))
2865:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
2866:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_4, LL_ADC_OFFSET_DISABLE);
2867:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
2868:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
2869:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
2870:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2871:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Parameters update conditioned to ADC state:                              */
2872:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Parameters that can be updated only when ADC is disabled:                */
2873:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*  - Single or differential mode                                           */
2874:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
2875:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
2876:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Set mode single-ended or differential input of the selected ADC channel */
2877:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       LL_ADC_SetChannelSingleDiff(hadc->Instance, sConfig->Channel, sConfig->SingleDiff);
2878:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2879:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Configuration of differential mode */
2880:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if (sConfig->SingleDiff == ADC_DIFFERENTIAL_ENDED)
2881:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
2882:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Set sampling time of the selected ADC channel */
2883:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Note: ADC channel number masked with value "0x1F" to ensure shift value within 32 bits r
2884:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         LL_ADC_SetChannelSamplingTime(hadc->Instance,
2885:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                       (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_T
2886:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                       sConfig->SamplingTime);
2887:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
2888:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2889:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
2890:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2891:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Management of internal measurement channels: Vbat/VrefInt/TempSensor.  */
2892:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* If internal channel selected, enable dedicated internal buffers and    */
2893:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* paths.                                                                 */
2894:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Note: these internal measurement paths can be disabled using           */
2895:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* HAL_ADC_DeInit().                                                      */
2896:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2897:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if (__LL_ADC_IS_CHANNEL_INTERNAL(sConfig->Channel))
2898:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
2899:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       tmp_config_internal_channel = LL_ADC_GetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->I
2900:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2901:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* If the requested internal measurement path has already been enabled, */
2902:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* bypass the configuration processing.                                 */
2903:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if (((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR_ADC1) || (sConfig->Channel == ADC_CHANNEL_TE
2904:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_TEMPSENSOR) == 0UL))
2905:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
2906:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         if (ADC_TEMPERATURE_SENSOR_INSTANCE(hadc))
2907:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
2908:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance),
ARM GAS  /tmp/ccJLHc1D.s 			page 203


2909:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                          LL_ADC_PATH_INTERNAL_TEMPSENSOR | tmp_config_internal_chan
2910:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2911:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* Delay for temperature sensor stabilization time */
2912:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* Wait loop initialization and execution */
2913:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* Note: Variable divided by 2 to compensate partially              */
2914:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /*       CPU processing cycles, scaling in us split to not          */
2915:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /*       exceed 32 bits register capacity and handle low frequency. */
2916:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           wait_loop_index = ((LL_ADC_DELAY_TEMPSENSOR_STAB_US / 10UL) * (SystemCoreClock / (100000U
2917:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           while (wait_loop_index != 0UL)
2918:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           {
2919:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             wait_loop_index--;
2920:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           }
2921:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
2922:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
2923:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       else if ((sConfig->Channel == ADC_CHANNEL_VBAT) && ((tmp_config_internal_channel & LL_ADC_PAT
2924:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
2925:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         if (ADC_BATTERY_VOLTAGE_INSTANCE(hadc))
2926:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
2927:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance),
2928:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                          LL_ADC_PATH_INTERNAL_VBAT | tmp_config_internal_channel);
2929:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
2930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
2931:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       else if ((sConfig->Channel == ADC_CHANNEL_VREFINT)
2932:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_VREFINT) == 0UL))
2933:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
2934:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         if (ADC_VREFINT_INSTANCE(hadc))
2935:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
2936:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance),
2937:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                          LL_ADC_PATH_INTERNAL_VREFINT | tmp_config_internal_channel
2938:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
2939:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
2940:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       else
2941:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
2942:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* nothing to do */
2943:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
2944:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
2945:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
2946:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2947:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* If a conversion is on going on regular group, no update on regular       */
2948:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* channel could be done on neither of the channel configuration structure  */
2949:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* parameters.                                                              */
2950:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   else
2951:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
2952:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Update ADC state machine to error */
2953:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
2954:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2955:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
2956:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
2957:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2958:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Process unlocked */
2959:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
2960:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2961:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Return function status */
2962:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   return tmp_hal_status;
2963:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
2964:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2965:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
ARM GAS  /tmp/ccJLHc1D.s 			page 204


2966:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  Configure the analog watchdog.
2967:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note   Possibility to update parameters on the fly:
2968:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         This function initializes the selected analog watchdog, successive
2969:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         calls to this function can be used to reconfigure some parameters
2970:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         of structure "ADC_AnalogWDGConfTypeDef" on the fly, without resetting
2971:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         the ADC.
2972:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         The setting of these parameters is conditioned to ADC state.
2973:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         For parameters constraints, see comments of structure
2974:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         "ADC_AnalogWDGConfTypeDef".
2975:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note   On this STM32 serie, analog watchdog thresholds can be modified
2976:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         while ADC conversion is on going.
2977:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         In this case, some constraints must be taken into account:
2978:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         the programmed threshold values are effective from the next
2979:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         ADC EOC (end of unitary conversion).
2980:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         Considering that registers write delay may happen due to
2981:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         bus activity, this might cause an uncertainty on the
2982:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         effective timing of the new programmed threshold values.
2983:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param hadc ADC handle
2984:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param AnalogWDGConfig Structure of ADC analog watchdog configuration
2985:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval HAL status
2986:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
2987:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_AnalogWDGConfig(ADC_HandleTypeDef *hadc, ADC_AnalogWDGConfTypeDef *Analog
2988:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
2989:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
2990:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmpAWDHighThresholdShifted;
2991:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmpAWDLowThresholdShifted;
2992:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
2993:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
2994:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2995:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Check the parameters */
2996:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2997:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_NUMBER(AnalogWDGConfig->WatchdogNumber));
2998:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_MODE(AnalogWDGConfig->WatchdogMode));
2999:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_FILTERING_MODE(AnalogWDGConfig->FilteringConfig));
3000:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(AnalogWDGConfig->ITMode));
3001:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3002:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if ((AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_REG)     ||
3003:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_INJEC)   ||
3004:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_REGINJEC))
3005:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
3006:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     assert_param(IS_ADC_CHANNEL(hadc, AnalogWDGConfig->Channel));
3007:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
3008:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3009:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Verify thresholds range */
3010:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (hadc->Init.OversamplingMode == ENABLE)
3011:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
3012:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Case of oversampling enabled: depending on ratio and shift configuration,
3013:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        analog watchdog thresholds can be higher than ADC resolution.
3014:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        Verify if thresholds are within maximum thresholds range. */
3015:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_RESOLUTION_12B, AnalogWDGConfig->HighThreshold));
3016:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_RESOLUTION_12B, AnalogWDGConfig->LowThreshold));
3017:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
3018:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   else
3019:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
3020:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Verify if thresholds are within the selected ADC resolution */
3021:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), AnalogWDGConfig->HighThreshold));
3022:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), AnalogWDGConfig->LowThreshold));
ARM GAS  /tmp/ccJLHc1D.s 			page 205


3023:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
3024:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3025:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Process locked */
3026:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   __HAL_LOCK(hadc);
3027:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3028:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Parameters update conditioned to ADC state:                              */
3029:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
3030:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* conversion on going on ADC groups regular and injected:                  */
3031:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /*  - Analog watchdog channels                                              */
3032:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
3033:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
3034:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if ((tmp_adc_is_conversion_on_going_regular == 0UL)
3035:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       && (tmp_adc_is_conversion_on_going_injected == 0UL)
3036:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      )
3037:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
3038:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Analog watchdog configuration */
3039:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if (AnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_1)
3040:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
3041:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Configuration of analog watchdog:                                    */
3042:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /*  - Set the analog watchdog enable mode: one or overall group of      */
3043:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /*    channels, on groups regular and-or injected.                      */
3044:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       switch (AnalogWDGConfig->WatchdogMode)
3045:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
3046:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_SINGLE_REG:
3047:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, __LL_ADC_ANALOGWD_CHANNEL_GR
3048:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                           LL_ADC_GROUP_REGULAR));
3049:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           break;
3050:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3051:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_SINGLE_INJEC:
3052:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, __LL_ADC_ANALOGWD_CHANNEL_GR
3053:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                           LL_ADC_GROUP_INJECTED));
3054:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           break;
3055:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3056:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_SINGLE_REGINJEC:
3057:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, __LL_ADC_ANALOGWD_CHANNEL_GR
3058:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                           LL_ADC_GROUP_REGULAR_INJECTED));
3059:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           break;
3060:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3061:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_ALL_REG:
3062:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, LL_ADC_AWD_ALL_CHANNELS_REG)
3063:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           break;
3064:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3065:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_ALL_INJEC:
3066:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, LL_ADC_AWD_ALL_CHANNELS_INJ)
3067:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           break;
3068:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3069:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_ALL_REGINJEC:
3070:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, LL_ADC_AWD_ALL_CHANNELS_REG_
3071:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           break;
3072:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3073:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         default: /* ADC_ANALOGWATCHDOG_NONE */
3074:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, LL_ADC_AWD_DISABLE);
3075:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           break;
3076:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
3077:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3078:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Set the filtering configuration */
3079:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       MODIFY_REG(hadc->Instance->TR1,
ARM GAS  /tmp/ccJLHc1D.s 			page 206


3080:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                  ADC_TR1_AWDFILT,
3081:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                  AnalogWDGConfig->FilteringConfig);
3082:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3083:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Update state, clear previous result related to AWD1 */
3084:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_AWD1);
3085:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3086:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Clear flag ADC analog watchdog */
3087:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Note: Flag cleared Clear the ADC Analog watchdog flag to be ready  */
3088:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* to use for HAL_ADC_IRQHandler() or HAL_ADC_PollForEvent()          */
3089:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* (in case left enabled by previous ADC operations).                 */
3090:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       LL_ADC_ClearFlag_AWD1(hadc->Instance);
3091:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3092:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Configure ADC analog watchdog interrupt */
3093:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if (AnalogWDGConfig->ITMode == ENABLE)
3094:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
3095:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         LL_ADC_EnableIT_AWD1(hadc->Instance);
3096:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
3097:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       else
3098:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
3099:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         LL_ADC_DisableIT_AWD1(hadc->Instance);
3100:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
3101:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
3102:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Case of ADC_ANALOGWATCHDOG_2 or ADC_ANALOGWATCHDOG_3 */
3103:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     else
3104:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
3105:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       switch (AnalogWDGConfig->WatchdogMode)
3106:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
3107:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_SINGLE_REG:
3108:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_SINGLE_INJEC:
3109:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_SINGLE_REGINJEC:
3110:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* Update AWD by bitfield to keep the possibility to monitor        */
3111:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* several channels by successive calls of this function.           */
3112:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           if (AnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_2)
3113:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           {
3114:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             SET_BIT(hadc->Instance->AWD2CR, (1UL << (__LL_ADC_CHANNEL_TO_DECIMAL_NB(AnalogWDGConfig
3115:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           }
3116:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           else
3117:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           {
3118:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             SET_BIT(hadc->Instance->AWD3CR, (1UL << (__LL_ADC_CHANNEL_TO_DECIMAL_NB(AnalogWDGConfig
3119:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           }
3120:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           break;
3121:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3122:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_ALL_REG:
3123:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_ALL_INJEC:
3124:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_ALL_REGINJEC:
3125:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, AnalogWDGConfig->WatchdogNumber, LL_ADC_A
3126:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           break;
3127:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3128:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         default: /* ADC_ANALOGWATCHDOG_NONE */
3129:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, AnalogWDGConfig->WatchdogNumber, LL_ADC_A
3130:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           break;
3131:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
3132:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3133:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if (AnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_2)
3134:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
3135:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Update state, clear previous result related to AWD2 */
3136:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_AWD2);
ARM GAS  /tmp/ccJLHc1D.s 			page 207


3137:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3138:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Clear flag ADC analog watchdog */
3139:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Note: Flag cleared Clear the ADC Analog watchdog flag to be ready  */
3140:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* to use for HAL_ADC_IRQHandler() or HAL_ADC_PollForEvent()          */
3141:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* (in case left enabled by previous ADC operations).                 */
3142:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         LL_ADC_ClearFlag_AWD2(hadc->Instance);
3143:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3144:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Configure ADC analog watchdog interrupt */
3145:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         if (AnalogWDGConfig->ITMode == ENABLE)
3146:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
3147:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           LL_ADC_EnableIT_AWD2(hadc->Instance);
3148:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
3149:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         else
3150:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
3151:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           LL_ADC_DisableIT_AWD2(hadc->Instance);
3152:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
3153:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
3154:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* (AnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_3) */
3155:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       else
3156:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
3157:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Update state, clear previous result related to AWD3 */
3158:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_AWD3);
3159:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3160:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Clear flag ADC analog watchdog */
3161:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Note: Flag cleared Clear the ADC Analog watchdog flag to be ready  */
3162:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* to use for HAL_ADC_IRQHandler() or HAL_ADC_PollForEvent()          */
3163:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* (in case left enabled by previous ADC operations).                 */
3164:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         LL_ADC_ClearFlag_AWD3(hadc->Instance);
3165:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3166:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Configure ADC analog watchdog interrupt */
3167:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         if (AnalogWDGConfig->ITMode == ENABLE)
3168:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
3169:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           LL_ADC_EnableIT_AWD3(hadc->Instance);
3170:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
3171:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         else
3172:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
3173:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           LL_ADC_DisableIT_AWD3(hadc->Instance);
3174:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
3175:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
3176:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
3177:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3178:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
3179:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3180:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Analog watchdog thresholds configuration */
3181:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (AnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_1)
3182:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
3183:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Shift the offset with respect to the selected ADC resolution:        */
3184:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Thresholds have to be left-aligned on bit 11, the LSB (right bits)   */
3185:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* are set to 0.                                                        */
3186:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmpAWDHighThresholdShifted = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->HighThre
3187:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmpAWDLowThresholdShifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowThres
3188:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
3189:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Case of ADC_ANALOGWATCHDOG_2 and ADC_ANALOGWATCHDOG_3 */
3190:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   else
3191:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
3192:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Shift the offset with respect to the selected ADC resolution:        */
3193:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Thresholds have to be left-aligned on bit 7, the LSB (right bits)    */
ARM GAS  /tmp/ccJLHc1D.s 			page 208


3194:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* are set to 0.                                                        */
3195:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmpAWDHighThresholdShifted = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->HighThr
3196:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmpAWDLowThresholdShifted  = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowThre
3197:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
3198:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3199:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Set ADC analog watchdog thresholds value of both thresholds high and low */
3200:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   LL_ADC_ConfigAnalogWDThresholds(hadc->Instance, AnalogWDGConfig->WatchdogNumber, tmpAWDHighThresh
3201:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                   tmpAWDLowThresholdShifted);
3202:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3203:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Process unlocked */
3204:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
3205:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3206:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Return function status */
3207:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   return tmp_hal_status;
3208:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
3209:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3210:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3211:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
3212:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @}
3213:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
3214:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3215:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group4 Peripheral State functions
3216:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *  @brief    ADC Peripheral State functions
3217:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *
3218:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** @verbatim
3219:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****  ===============================================================================
3220:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             ##### Peripheral state and errors functions #####
3221:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****  ===============================================================================
3222:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     [..]
3223:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     This subsection provides functions to get in run-time the status of the
3224:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     peripheral.
3225:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (+) Check the ADC state
3226:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (+) Check the ADC error code
3227:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3228:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** @endverbatim
3229:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @{
3230:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
3231:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3232:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
3233:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  Return the ADC handle state.
3234:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note   ADC state machine is managed by bitfields, ADC status must be
3235:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         compared with states bits.
3236:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         For example:
3237:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *           " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_REG_BUSY) != 0UL) "
3238:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *           " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_AWD1) != 0UL) "
3239:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param hadc ADC handle
3240:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval ADC handle state (bitfield on 32 bits)
3241:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
3242:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** uint32_t HAL_ADC_GetState(ADC_HandleTypeDef *hadc)
3243:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
3244:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Check the parameters */
3245:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
3246:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3247:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Return ADC handle state */
3248:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   return hadc->State;
3249:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
3250:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
ARM GAS  /tmp/ccJLHc1D.s 			page 209


3251:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
3252:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  Return the ADC error code.
3253:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param hadc ADC handle
3254:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval ADC error code (bitfield on 32 bits)
3255:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
3256:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** uint32_t HAL_ADC_GetError(ADC_HandleTypeDef *hadc)
3257:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
3258:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Check the parameters */
3259:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
3260:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3261:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   return hadc->ErrorCode;
3262:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
3263:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3264:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
3265:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @}
3266:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
3267:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3268:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
3269:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @}
3270:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
3271:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3272:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /** @defgroup ADC_Private_Functions ADC Private Functions
3273:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @{
3274:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
3275:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3276:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
3277:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  Stop ADC conversion.
3278:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param hadc ADC handle
3279:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param ConversionGroup ADC group regular and/or injected.
3280:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          This parameter can be one of the following values:
3281:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *            @arg @ref ADC_REGULAR_GROUP           ADC regular conversion type.
3282:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *            @arg @ref ADC_INJECTED_GROUP          ADC injected conversion type.
3283:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *            @arg @ref ADC_REGULAR_INJECTED_GROUP  ADC regular and injected conversion type.
3284:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval HAL status.
3285:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
3286:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** HAL_StatusTypeDef ADC_ConversionStop(ADC_HandleTypeDef *hadc, uint32_t ConversionGroup)
3287:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
3288:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tickstart;
3289:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t Conversion_Timeout_CPU_cycles = 0UL;
3290:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t conversion_group_reassigned = ConversionGroup;
3291:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_ADC_CR_ADSTART_JADSTART;
3292:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
3293:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
3294:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3295:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Check the parameters */
3296:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
3297:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_CONVERSION_GROUP(ConversionGroup));
3298:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3299:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Verification if ADC is not already stopped (on regular and injected      */
3300:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* groups) to bypass this function if not needed.                           */
3301:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
3302:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
3303:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if ((tmp_adc_is_conversion_on_going_regular != 0UL)
3304:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       || (tmp_adc_is_conversion_on_going_injected != 0UL)
3305:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      )
3306:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
3307:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Particular case of continuous auto-injection mode combined with        */
ARM GAS  /tmp/ccJLHc1D.s 			page 210


3308:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* auto-delay mode.                                                       */
3309:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* In auto-injection mode, regular group stop ADC_CR_ADSTP is used (not   */
3310:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* injected group stop ADC_CR_JADSTP).                                    */
3311:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Procedure to be followed: Wait until JEOS=1, clear JEOS, set ADSTP=1   */
3312:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* (see reference manual).                                                */
3313:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if (((hadc->Instance->CFGR & ADC_CFGR_JAUTO) != 0UL)
3314:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         && (hadc->Init.ContinuousConvMode == ENABLE)
3315:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         && (hadc->Init.LowPowerAutoWait == ENABLE)
3316:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        )
3317:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
3318:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Use stop of regular group */
3319:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       conversion_group_reassigned = ADC_REGULAR_GROUP;
3320:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3321:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Wait until JEOS=1 (maximum Timeout: 4 injected conversions) */
3322:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       while (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_JEOS) == 0UL)
3323:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
3324:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         if (Conversion_Timeout_CPU_cycles >= (ADC_CONVERSION_TIME_MAX_CPU_CYCLES * 4UL))
3325:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
3326:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* Update ADC state machine to error */
3327:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
3328:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3329:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* Set ADC error code to ADC peripheral internal error */
3330:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
3331:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3332:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           return HAL_ERROR;
3333:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
3334:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         Conversion_Timeout_CPU_cycles ++;
3335:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
3336:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3337:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Clear JEOS */
3338:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JEOS);
3339:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
3340:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3341:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Stop potential conversion on going on ADC group regular */
3342:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if (conversion_group_reassigned != ADC_INJECTED_GROUP)
3343:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
3344:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Software is allowed to set ADSTP only when ADSTART=1 and ADDIS=0 */
3345:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) != 0UL)
3346:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
3347:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         if (LL_ADC_IsDisableOngoing(hadc->Instance) == 0UL)
3348:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
3349:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* Stop ADC group regular conversion */
3350:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           LL_ADC_REG_StopConversion(hadc->Instance);
3351:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
3352:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
3353:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
3354:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3355:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Stop potential conversion on going on ADC group injected */
3356:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if (conversion_group_reassigned != ADC_REGULAR_GROUP)
3357:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
3358:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Software is allowed to set JADSTP only when JADSTART=1 and ADDIS=0 */
3359:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if (LL_ADC_INJ_IsConversionOngoing(hadc->Instance) != 0UL)
3360:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
3361:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         if (LL_ADC_IsDisableOngoing(hadc->Instance) == 0UL)
3362:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
3363:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* Stop ADC group injected conversion */
3364:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           LL_ADC_INJ_StopConversion(hadc->Instance);
ARM GAS  /tmp/ccJLHc1D.s 			page 211


3365:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
3366:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
3367:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
3368:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3369:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Selection of start and stop bits with respect to the regular or injected group */
3370:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     switch (conversion_group_reassigned)
3371:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
3372:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       case ADC_REGULAR_INJECTED_GROUP:
3373:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         tmp_ADC_CR_ADSTART_JADSTART = (ADC_CR_ADSTART | ADC_CR_JADSTART);
3374:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
3375:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       case ADC_INJECTED_GROUP:
3376:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         tmp_ADC_CR_ADSTART_JADSTART = ADC_CR_JADSTART;
3377:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
3378:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Case ADC_REGULAR_GROUP only*/
3379:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       default:
3380:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         tmp_ADC_CR_ADSTART_JADSTART = ADC_CR_ADSTART;
3381:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
3382:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
3383:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3384:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Wait for conversion effectively stopped */
3385:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tickstart = HAL_GetTick();
3386:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3387:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     while ((hadc->Instance->CR & tmp_ADC_CR_ADSTART_JADSTART) != 0UL)
3388:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
3389:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if ((HAL_GetTick() - tickstart) > ADC_STOP_CONVERSION_TIMEOUT)
3390:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
3391:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Update ADC state machine to error */
3392:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
3393:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3394:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Set ADC error code to ADC peripheral internal error */
3395:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
3396:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3397:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         return HAL_ERROR;
3398:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
3399:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
3400:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3401:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
3402:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3403:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Return HAL status */
3404:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   return HAL_OK;
3405:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
3406:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3407:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3408:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3409:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
3410:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  Enable the selected ADC.
3411:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note   Prerequisite condition to use this function: ADC must be disabled
3412:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         and voltage regulator must be enabled (done into HAL_ADC_Init()).
3413:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param hadc ADC handle
3414:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval HAL status.
3415:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
3416:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** HAL_StatusTypeDef ADC_Enable(ADC_HandleTypeDef *hadc)
3417:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
3418:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tickstart;
3419:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3420:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* ADC enable and wait for ADC ready (in case of ADC is disabled or         */
3421:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* enabling phase not yet completed: flag ADC ready not yet set).           */
ARM GAS  /tmp/ccJLHc1D.s 			page 212


3422:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Timeout implemented to not be stuck if ADC cannot be enabled (possible   */
3423:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* causes: ADC clock not running, ...).                                     */
3424:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
3425:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
3426:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Check if conditions to enable the ADC are fulfilled */
3427:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if ((hadc->Instance->CR & (ADC_CR_ADCAL | ADC_CR_JADSTP | ADC_CR_ADSTP | ADC_CR_JADSTART | ADC_
3428:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
3429:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Update ADC state machine to error */
3430:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
3431:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3432:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Set ADC error code to ADC peripheral internal error */
3433:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
3434:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3435:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       return HAL_ERROR;
3436:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
3437:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3438:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Enable the ADC peripheral */
3439:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     LL_ADC_Enable(hadc->Instance);
3440:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3441:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Wait for ADC effectively enabled */
3442:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tickstart = HAL_GetTick();
3443:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3444:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     while (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_RDY) == 0UL)
3445:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
3446:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /*  If ADEN bit is set less than 4 ADC clock cycles after the ADCAL bit
3447:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           has been cleared (after a calibration), ADEN bit is reset by the
3448:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           calibration logic.
3449:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           The workaround is to continue setting ADEN until ADRDY is becomes 1.
3450:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           Additionally, ADC_ENABLE_TIMEOUT is defined to encompass this
3451:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           4 ADC clock cycle duration */
3452:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Note: Test of ADC enabled required due to hardware constraint to     */
3453:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /*       not enable ADC if already enabled.                             */
3454:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
3455:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
3456:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         LL_ADC_Enable(hadc->Instance);
3457:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
3458:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3459:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if ((HAL_GetTick() - tickstart) > ADC_ENABLE_TIMEOUT)
3460:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
3461:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Update ADC state machine to error */
3462:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
3463:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3464:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Set ADC error code to ADC peripheral internal error */
3465:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
3466:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3467:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         return HAL_ERROR;
3468:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
3469:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
3470:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
3471:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3472:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Return HAL status */
3473:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   return HAL_OK;
3474:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
3475:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3476:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
3477:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  Disable the selected ADC.
3478:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note   Prerequisite condition to use this function: ADC conversions must be
ARM GAS  /tmp/ccJLHc1D.s 			page 213


3479:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         stopped.
3480:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param hadc ADC handle
3481:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval HAL status.
3482:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
3483:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** HAL_StatusTypeDef ADC_Disable(ADC_HandleTypeDef *hadc)
3484:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
3485:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tickstart;
3486:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   const uint32_t tmp_adc_is_disable_on_going = LL_ADC_IsDisableOngoing(hadc->Instance);
3487:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3488:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Verification if ADC is not already disabled:                             */
3489:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Note: forbidden to disable ADC (set bit ADC_CR_ADDIS) if ADC is already  */
3490:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /*       disabled.                                                          */
3491:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if ((LL_ADC_IsEnabled(hadc->Instance) != 0UL)
3492:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       && (tmp_adc_is_disable_on_going == 0UL)
3493:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      )
3494:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
3495:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Check if conditions to disable the ADC are fulfilled */
3496:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if ((hadc->Instance->CR & (ADC_CR_JADSTART | ADC_CR_ADSTART | ADC_CR_ADEN)) == ADC_CR_ADEN)
3497:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
3498:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Disable the ADC peripheral */
3499:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       LL_ADC_Disable(hadc->Instance);
3500:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOSMP | ADC_FLAG_RDY));
3501:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
3502:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     else
3503:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
3504:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Update ADC state machine to error */
3505:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
3506:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3507:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Set ADC error code to ADC peripheral internal error */
3508:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
3509:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3510:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       return HAL_ERROR;
3511:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
3512:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3513:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Wait for ADC effectively disabled */
3514:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Get tick count */
3515:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tickstart = HAL_GetTick();
3516:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3517:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     while ((hadc->Instance->CR & ADC_CR_ADEN) != 0UL)
3518:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
3519:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if ((HAL_GetTick() - tickstart) > ADC_DISABLE_TIMEOUT)
3520:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
3521:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Update ADC state machine to error */
3522:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
3523:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3524:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Set ADC error code to ADC peripheral internal error */
3525:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
3526:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3527:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         return HAL_ERROR;
3528:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
3529:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
3530:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
3531:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3532:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Return HAL status */
3533:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   return HAL_OK;
3534:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
3535:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
ARM GAS  /tmp/ccJLHc1D.s 			page 214


3536:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
3537:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  DMA transfer complete callback.
3538:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param hdma pointer to DMA handle.
3539:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval None
3540:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
3541:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** void ADC_DMAConvCplt(DMA_HandleTypeDef *hdma)
3542:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
3543:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
3544:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   ADC_HandleTypeDef *hadc = (ADC_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
3545:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3546:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Update state machine on conversion status if not in error state */
3547:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if ((hadc->State & (HAL_ADC_STATE_ERROR_INTERNAL | HAL_ADC_STATE_ERROR_DMA)) == 0UL)
3548:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
3549:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Set ADC state */
3550:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
3551:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3552:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Determine whether any further conversion upcoming on group regular     */
3553:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* by external trigger, continuous mode or scan sequence on going         */
3554:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* to disable interruption.                                               */
3555:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Is it the end of the regular sequence ? */
3556:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if ((hadc->Instance->ISR & ADC_FLAG_EOS) != 0UL)
3557:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
3558:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Are conversions software-triggered ? */
3559:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if (LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance) != 0UL)
3560:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
3561:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Is CONT bit set ? */
3562:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_CONT) == 0UL)
3563:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
3564:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* CONT bit is not set, no more conversions expected */
3565:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
3566:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == 0UL)
3567:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           {
3568:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             SET_BIT(hadc->State, HAL_ADC_STATE_READY);
3569:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           }
3570:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
3571:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
3572:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
3573:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     else
3574:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
3575:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* DMA End of Transfer interrupt was triggered but conversions sequence
3576:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****          is not over. If DMACFG is set to 0, conversions are stopped. */
3577:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_DMACFG) == 0UL)
3578:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
3579:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* DMACFG bit is not set, conversions are stopped. */
3580:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
3581:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == 0UL)
3582:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
3583:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_READY);
3584:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
3585:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
3586:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
3587:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3588:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Conversion complete callback */
3589:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
3590:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     hadc->ConvCpltCallback(hadc);
3591:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #else
3592:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     HAL_ADC_ConvCpltCallback(hadc);
ARM GAS  /tmp/ccJLHc1D.s 			page 215


3593:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
3594:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
3595:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   else /* DMA and-or internal error occurred */
3596:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
3597:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if ((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) != 0UL)
3598:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
3599:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Call HAL ADC Error Callback function */
3600:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
3601:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       hadc->ErrorCallback(hadc);
3602:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #else
3603:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       HAL_ADC_ErrorCallback(hadc);
3604:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
3605:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
3606:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     else
3607:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
3608:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Call ADC DMA error callback */
3609:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       hadc->DMA_Handle->XferErrorCallback(hdma);
3610:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
3611:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
3612:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
3613:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3614:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
3615:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  DMA half transfer complete callback.
3616:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param hdma pointer to DMA handle.
3617:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval None
3618:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
3619:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** void ADC_DMAHalfConvCplt(DMA_HandleTypeDef *hdma)
3620:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
 1364              		.loc 2 3620 1 is_stmt 1 view -0
 1365              		.cfi_startproc
 1366              		@ args = 0, pretend = 0, frame = 0
 1367              		@ frame_needed = 0, uses_anonymous_args = 0
3621:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
3622:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   ADC_HandleTypeDef *hadc = (ADC_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 1368              		.loc 2 3622 3 view .LVU389
3623:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3624:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Half conversion callback */
3625:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
3626:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   hadc->ConvHalfCpltCallback(hadc);
3627:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #else
3628:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_ADC_ConvHalfCpltCallback(hadc);
 1369              		.loc 2 3628 3 view .LVU390
3620:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
 1370              		.loc 2 3620 1 is_stmt 0 view .LVU391
 1371 0000 08B5     		push	{r3, lr}
 1372              	.LCFI7:
 1373              		.cfi_def_cfa_offset 8
 1374              		.cfi_offset 3, -8
 1375              		.cfi_offset 14, -4
 1376              		.loc 2 3628 3 view .LVU392
 1377 0002 806A     		ldr	r0, [r0, #40]
 1378              	.LVL82:
 1379              		.loc 2 3628 3 view .LVU393
 1380 0004 FFF7FEFF 		bl	HAL_ADC_ConvHalfCpltCallback
 1381              	.LVL83:
3629:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
3630:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
ARM GAS  /tmp/ccJLHc1D.s 			page 216


 1382              		.loc 2 3630 1 view .LVU394
 1383 0008 08BD     		pop	{r3, pc}
 1384              		.cfi_endproc
 1385              	.LFE385:
 1387              		.section	.text.HAL_ADC_LevelOutOfWindowCallback,"ax",%progbits
 1388              		.align	1
 1389              		.weak	HAL_ADC_LevelOutOfWindowCallback
 1390              		.syntax unified
 1391              		.thumb
 1392              		.thumb_func
 1393              		.fpu fpv4-sp-d16
 1395              	HAL_ADC_LevelOutOfWindowCallback:
 1396              	.LFB395:
 1397              		.cfi_startproc
 1398              		@ args = 0, pretend = 0, frame = 0
 1399              		@ frame_needed = 0, uses_anonymous_args = 0
 1400              		@ link register save eliminated.
 1401 0000 7047     		bx	lr
 1402              		.cfi_endproc
 1403              	.LFE395:
 1405              		.section	.text.HAL_ADC_ErrorCallback,"ax",%progbits
 1406              		.align	1
 1407              		.weak	HAL_ADC_ErrorCallback
 1408              		.syntax unified
 1409              		.thumb
 1410              		.thumb_func
 1411              		.fpu fpv4-sp-d16
 1413              	HAL_ADC_ErrorCallback:
 1414              	.LFB397:
 1415              		.cfi_startproc
 1416              		@ args = 0, pretend = 0, frame = 0
 1417              		@ frame_needed = 0, uses_anonymous_args = 0
 1418              		@ link register save eliminated.
 1419 0000 7047     		bx	lr
 1420              		.cfi_endproc
 1421              	.LFE397:
 1423              		.section	.text.HAL_ADC_IRQHandler,"ax",%progbits
 1424              		.align	1
 1425              		.global	HAL_ADC_IRQHandler
 1426              		.syntax unified
 1427              		.thumb
 1428              		.thumb_func
 1429              		.fpu fpv4-sp-d16
 1431              	HAL_ADC_IRQHandler:
 1432              	.LVL84:
 1433              	.LFB372:
2291:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t overrun_error = 0UL; /* flag set if overrun occurrence has to be considered as an error 
 1434              		.loc 2 2291 1 is_stmt 1 view -0
 1435              		.cfi_startproc
 1436              		@ args = 0, pretend = 0, frame = 0
 1437              		@ frame_needed = 0, uses_anonymous_args = 0
2292:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_isr = hadc->Instance->ISR;
 1438              		.loc 2 2292 3 view .LVU396
2293:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_ier = hadc->Instance->IER;
 1439              		.loc 2 2293 3 view .LVU397
2293:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_ier = hadc->Instance->IER;
 1440              		.loc 2 2293 26 is_stmt 0 view .LVU398
ARM GAS  /tmp/ccJLHc1D.s 			page 217


 1441 0000 0268     		ldr	r2, [r0]
2300:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
 1442              		.loc 2 2300 35 view .LVU399
 1443 0002 B2F1A04F 		cmp	r2, #1342177280
2291:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t overrun_error = 0UL; /* flag set if overrun occurrence has to be considered as an error 
 1444              		.loc 2 2291 1 view .LVU400
 1445 0006 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1446              	.LCFI8:
 1447              		.cfi_def_cfa_offset 24
 1448              		.cfi_offset 3, -24
 1449              		.cfi_offset 4, -20
 1450              		.cfi_offset 5, -16
 1451              		.cfi_offset 6, -12
 1452              		.cfi_offset 7, -8
 1453              		.cfi_offset 14, -4
2293:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_ier = hadc->Instance->IER;
 1454              		.loc 2 2293 12 view .LVU401
 1455 0008 1668     		ldr	r6, [r2]
 1456              	.LVL85:
2294:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_adc_inj_is_trigger_source_sw_start;
 1457              		.loc 2 2294 3 is_stmt 1 view .LVU402
2294:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_adc_inj_is_trigger_source_sw_start;
 1458              		.loc 2 2294 12 is_stmt 0 view .LVU403
 1459 000a 5568     		ldr	r5, [r2, #4]
 1460              	.LVL86:
2295:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_adc_reg_is_trigger_source_sw_start;
 1461              		.loc 2 2295 3 is_stmt 1 view .LVU404
2296:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_cfgr;
 1462              		.loc 2 2296 3 view .LVU405
2297:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
 1463              		.loc 2 2297 3 view .LVU406
2299:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
 1464              		.loc 2 2299 3 view .LVU407
2300:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
 1465              		.loc 2 2300 3 view .LVU408
2291:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t overrun_error = 0UL; /* flag set if overrun occurrence has to be considered as an error 
 1466              		.loc 2 2291 1 is_stmt 0 view .LVU409
 1467 000c 0446     		mov	r4, r0
2300:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
 1468              		.loc 2 2300 35 view .LVU410
 1469 000e 00F00E81 		beq	.L157
2300:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
 1470              		.loc 2 2300 35 discriminator 2 view .LVU411
 1471 0012 9C48     		ldr	r0, .L239
 1472              	.LVL87:
2300:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
 1473              		.loc 2 2300 35 discriminator 2 view .LVU412
 1474 0014 9C4B     		ldr	r3, .L239+4
 1475 0016 9D49     		ldr	r1, .L239+8
 1476 0018 8242     		cmp	r2, r0
 1477 001a 18BF     		it	ne
 1478 001c 0B46     		movne	r3, r1
 1479              	.L120:
 1480              	.LVL88:
 1481              	.LBB262:
 1482              	.LBI262:
6284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
ARM GAS  /tmp/ccJLHc1D.s 			page 218


 1483              		.loc 1 6284 26 is_stmt 1 discriminator 6 view .LVU413
 1484              	.LBB263:
6286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 1485              		.loc 1 6286 3 discriminator 6 view .LVU414
6286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 1486              		.loc 1 6286 21 is_stmt 0 discriminator 6 view .LVU415
 1487 001e 9F68     		ldr	r7, [r3, #8]
 1488              	.LBE263:
 1489              	.LBE262:
2308:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 1490              		.loc 2 2308 6 discriminator 6 view .LVU416
 1491 0020 B307     		lsls	r3, r6, #30
 1492              	.LVL89:
 1493              	.LBB265:
 1494              	.LBB264:
6286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 1495              		.loc 1 6286 10 discriminator 6 view .LVU417
 1496 0022 07F01F07 		and	r7, r7, #31
 1497              	.LVL90:
6286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 1498              		.loc 1 6286 10 discriminator 6 view .LVU418
 1499              	.LBE264:
 1500              	.LBE265:
2304:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
 1501              		.loc 2 2304 3 is_stmt 1 discriminator 6 view .LVU419
2305:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1502              		.loc 2 2305 3 discriminator 6 view .LVU420
2308:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 1503              		.loc 2 2308 3 discriminator 6 view .LVU421
2308:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 1504              		.loc 2 2308 6 is_stmt 0 discriminator 6 view .LVU422
 1505 0026 0ED5     		bpl	.L121
2308:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 1506              		.loc 2 2308 54 discriminator 1 view .LVU423
 1507 0028 A807     		lsls	r0, r5, #30
 1508 002a 0CD5     		bpl	.L121
2311:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 1509              		.loc 2 2311 5 is_stmt 1 view .LVU424
2311:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 1510              		.loc 2 2311 14 is_stmt 0 view .LVU425
 1511 002c E36D     		ldr	r3, [r4, #92]
2311:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 1512              		.loc 2 2311 8 view .LVU426
 1513 002e D906     		lsls	r1, r3, #27
2314:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 1514              		.loc 2 2314 7 is_stmt 1 view .LVU427
 1515 0030 5EBF     		ittt	pl
 1516 0032 E36D     		ldrpl	r3, [r4, #92]
 1517 0034 43F40063 		orrpl	r3, r3, #2048
 1518 0038 E365     		strpl	r3, [r4, #92]
2321:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1519              		.loc 2 2321 5 view .LVU428
 1520 003a 2046     		mov	r0, r4
 1521 003c FFF7FEFF 		bl	HAL_ADCEx_EndOfSamplingCallback
 1522              	.LVL91:
2325:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 1523              		.loc 2 2325 5 view .LVU429
ARM GAS  /tmp/ccJLHc1D.s 			page 219


 1524 0040 2368     		ldr	r3, [r4]
 1525 0042 0222     		movs	r2, #2
 1526 0044 1A60     		str	r2, [r3]
 1527              	.L121:
2329:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS)))
 1528              		.loc 2 2329 3 view .LVU430
2329:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS)))
 1529              		.loc 2 2329 6 is_stmt 0 view .LVU431
 1530 0046 7207     		lsls	r2, r6, #29
 1531 0048 01D5     		bpl	.L123
2329:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS)))
 1532              		.loc 2 2329 51 discriminator 1 view .LVU432
 1533 004a 6B07     		lsls	r3, r5, #29
 1534 004c 03D4     		bmi	.L124
 1535              	.L123:
2329:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS)))
 1536              		.loc 2 2329 94 discriminator 3 view .LVU433
 1537 004e 3007     		lsls	r0, r6, #28
 1538 0050 40D5     		bpl	.L125
2330:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 1539              		.loc 2 2330 51 view .LVU434
 1540 0052 2907     		lsls	r1, r5, #28
 1541 0054 3ED5     		bpl	.L125
 1542              	.L124:
2333:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 1543              		.loc 2 2333 5 is_stmt 1 view .LVU435
2333:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 1544              		.loc 2 2333 14 is_stmt 0 view .LVU436
 1545 0056 E36D     		ldr	r3, [r4, #92]
2342:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 1546              		.loc 2 2342 9 view .LVU437
 1547 0058 2068     		ldr	r0, [r4]
2333:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 1548              		.loc 2 2333 8 view .LVU438
 1549 005a DA06     		lsls	r2, r3, #27
2336:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 1550              		.loc 2 2336 7 is_stmt 1 view .LVU439
 1551 005c 5EBF     		ittt	pl
 1552 005e E36D     		ldrpl	r3, [r4, #92]
 1553 0060 43F40073 		orrpl	r3, r3, #512
 1554 0064 E365     		strpl	r3, [r4, #92]
2342:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 1555              		.loc 2 2342 5 view .LVU440
 1556              	.LVL92:
 1557              	.LBB266:
 1558              	.LBI266:
3649:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 1559              		.loc 1 3649 26 view .LVU441
 1560              	.LBB267:
3651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 1561              		.loc 1 3651 3 view .LVU442
3651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 1562              		.loc 1 3651 12 is_stmt 0 view .LVU443
 1563 0066 C368     		ldr	r3, [r0, #12]
3651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 1564              		.loc 1 3651 103 view .LVU444
 1565 0068 13F4406F 		tst	r3, #3072
ARM GAS  /tmp/ccJLHc1D.s 			page 220


 1566 006c 2CD1     		bne	.L128
 1567              	.LVL93:
3651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 1568              		.loc 1 3651 103 view .LVU445
 1569              	.LBE267:
 1570              	.LBE266:
2348:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 1571              		.loc 2 2348 7 is_stmt 1 view .LVU446
2348:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 1572              		.loc 2 2348 12 is_stmt 0 view .LVU447
 1573 006e 854B     		ldr	r3, .L239
 1574 0070 9842     		cmp	r0, r3
 1575 0072 00F0DE80 		beq	.L159
2348:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 1576              		.loc 2 2348 10 discriminator 8 view .LVU448
 1577 0076 03F58063 		add	r3, r3, #1024
 1578 007a 9842     		cmp	r0, r3
 1579 007c 09D1     		bne	.L130
2348:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 1580              		.loc 2 2348 12 view .LVU449
 1581 007e 844A     		ldr	r2, .L239+12
 1582              	.L129:
2349:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
 1583              		.loc 2 2349 11 view .LVU450
 1584 0080 092F     		cmp	r7, #9
 1585 0082 00F2D980 		bhi	.L131
 1586 0086 40F22123 		movw	r3, #545
 1587 008a FB40     		lsrs	r3, r3, r7
 1588 008c DB07     		lsls	r3, r3, #31
 1589 008e 40F1D380 		bpl	.L131
 1590              	.L130:
2355:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 1591              		.loc 2 2355 9 is_stmt 1 view .LVU451
2355:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 1592              		.loc 2 2355 18 is_stmt 0 view .LVU452
 1593 0092 C368     		ldr	r3, [r0, #12]
 1594              	.LVL94:
 1595              	.L132:
2368:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 1596              		.loc 2 2368 7 is_stmt 1 view .LVU453
2368:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 1597              		.loc 2 2368 10 is_stmt 0 view .LVU454
 1598 0094 9904     		lsls	r1, r3, #18
 1599 0096 17D4     		bmi	.L128
2371:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 1600              		.loc 2 2371 9 is_stmt 1 view .LVU455
2371:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 1601              		.loc 2 2371 13 is_stmt 0 view .LVU456
 1602 0098 0368     		ldr	r3, [r0]
 1603              	.LVL95:
2371:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 1604              		.loc 2 2371 12 view .LVU457
 1605 009a 1A07     		lsls	r2, r3, #28
 1606 009c 14D5     		bpl	.L128
2375:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           {
 1607              		.loc 2 2375 11 is_stmt 1 view .LVU458
2375:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           {
ARM GAS  /tmp/ccJLHc1D.s 			page 221


 1608              		.loc 2 2375 15 is_stmt 0 view .LVU459
 1609 009e FFF7FEFF 		bl	LL_ADC_REG_IsConversionOngoing
 1610              	.LVL96:
2375:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           {
 1611              		.loc 2 2375 14 view .LVU460
 1612 00a2 0028     		cmp	r0, #0
 1613 00a4 40F0CA80 		bne	.L134
2381:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1614              		.loc 2 2381 13 is_stmt 1 view .LVU461
 1615 00a8 2268     		ldr	r2, [r4]
 1616 00aa 5368     		ldr	r3, [r2, #4]
 1617 00ac 23F00C03 		bic	r3, r3, #12
 1618 00b0 5360     		str	r3, [r2, #4]
2384:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1619              		.loc 2 2384 13 view .LVU462
 1620 00b2 E36D     		ldr	r3, [r4, #92]
 1621 00b4 23F48073 		bic	r3, r3, #256
 1622 00b8 E365     		str	r3, [r4, #92]
2386:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             {
 1623              		.loc 2 2386 13 view .LVU463
2386:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             {
 1624              		.loc 2 2386 22 is_stmt 0 view .LVU464
 1625 00ba E36D     		ldr	r3, [r4, #92]
2386:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             {
 1626              		.loc 2 2386 16 view .LVU465
 1627 00bc DB04     		lsls	r3, r3, #19
 1628 00be 03D4     		bmi	.L128
2388:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             }
 1629              		.loc 2 2388 15 is_stmt 1 view .LVU466
 1630 00c0 E36D     		ldr	r3, [r4, #92]
 1631 00c2 43F00103 		orr	r3, r3, #1
 1632 00c6 E365     		str	r3, [r4, #92]
 1633              	.L128:
2411:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1634              		.loc 2 2411 5 view .LVU467
 1635 00c8 2046     		mov	r0, r4
 1636 00ca FFF7FEFF 		bl	HAL_ADC_ConvCpltCallback
 1637              	.LVL97:
2419:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 1638              		.loc 2 2419 5 view .LVU468
 1639 00ce 2368     		ldr	r3, [r4]
 1640 00d0 0C22     		movs	r2, #12
 1641 00d2 1A60     		str	r2, [r3]
 1642              	.L125:
2423:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_JEOS) == ADC_FLAG_JEOS) && ((tmp_ier & ADC_IT_JEOS) == ADC_IT_JEOS)))
 1643              		.loc 2 2423 3 view .LVU469
2423:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_JEOS) == ADC_FLAG_JEOS) && ((tmp_ier & ADC_IT_JEOS) == ADC_IT_JEOS)))
 1644              		.loc 2 2423 6 is_stmt 0 view .LVU470
 1645 00d4 B006     		lsls	r0, r6, #26
 1646 00d6 01D5     		bpl	.L135
2423:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_JEOS) == ADC_FLAG_JEOS) && ((tmp_ier & ADC_IT_JEOS) == ADC_IT_JEOS)))
 1647              		.loc 2 2423 53 discriminator 1 view .LVU471
 1648 00d8 A906     		lsls	r1, r5, #26
 1649 00da 03D4     		bmi	.L136
 1650              	.L135:
2423:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_JEOS) == ADC_FLAG_JEOS) && ((tmp_ier & ADC_IT_JEOS) == ADC_IT_JEOS)))
 1651              		.loc 2 2423 98 discriminator 3 view .LVU472
ARM GAS  /tmp/ccJLHc1D.s 			page 222


 1652 00dc 7206     		lsls	r2, r6, #25
 1653 00de 41D5     		bpl	.L137
2424:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 1654              		.loc 2 2424 53 view .LVU473
 1655 00e0 6B06     		lsls	r3, r5, #25
 1656 00e2 3FD5     		bpl	.L137
 1657              	.L136:
2427:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 1658              		.loc 2 2427 5 is_stmt 1 view .LVU474
2427:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 1659              		.loc 2 2427 14 is_stmt 0 view .LVU475
 1660 00e4 E36D     		ldr	r3, [r4, #92]
2440:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 1661              		.loc 2 2440 10 view .LVU476
 1662 00e6 674A     		ldr	r2, .L239
2427:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 1663              		.loc 2 2427 8 view .LVU477
 1664 00e8 D806     		lsls	r0, r3, #27
2430:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 1665              		.loc 2 2430 7 is_stmt 1 view .LVU478
 1666 00ea 5EBF     		ittt	pl
 1667 00ec E36D     		ldrpl	r3, [r4, #92]
 1668 00ee 43F40053 		orrpl	r3, r3, #8192
 1669 00f2 E365     		strpl	r3, [r4, #92]
2434:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmp_adc_reg_is_trigger_source_sw_start = LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance);
 1670              		.loc 2 2434 5 view .LVU479
2434:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmp_adc_reg_is_trigger_source_sw_start = LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance);
 1671              		.loc 2 2434 46 is_stmt 0 view .LVU480
 1672 00f4 2368     		ldr	r3, [r4]
 1673              	.LVL98:
 1674              	.LBB268:
 1675              	.LBI268:
4436:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 1676              		.loc 1 4436 26 is_stmt 1 view .LVU481
 1677              	.LBB269:
4438:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 1678              		.loc 1 4438 3 view .LVU482
4438:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 1679              		.loc 1 4438 12 is_stmt 0 view .LVU483
 1680 00f6 D96C     		ldr	r1, [r3, #76]
 1681              	.LBE269:
 1682              	.LBE268:
 1683              	.LBB271:
 1684              	.LBB272:
3651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 1685              		.loc 1 3651 12 view .LVU484
 1686 00f8 D868     		ldr	r0, [r3, #12]
 1687              	.LBE272:
 1688              	.LBE271:
2440:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 1689              		.loc 2 2440 10 view .LVU485
 1690 00fa 9342     		cmp	r3, r2
 1691              	.LBB275:
 1692              	.LBB270:
4438:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 1693              		.loc 1 4438 12 view .LVU486
 1694 00fc 01F4C071 		and	r1, r1, #384
ARM GAS  /tmp/ccJLHc1D.s 			page 223


 1695              	.LVL99:
4438:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 1696              		.loc 1 4438 12 view .LVU487
 1697              	.LBE270:
 1698              	.LBE275:
2435:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Get relevant register CFGR in ADC instance of ADC master or slave  */
 1699              		.loc 2 2435 5 is_stmt 1 view .LVU488
 1700              	.LBB276:
 1701              	.LBI271:
3649:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 1702              		.loc 1 3649 26 view .LVU489
 1703              	.LBB273:
3651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 1704              		.loc 1 3651 3 view .LVU490
3651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 1705              		.loc 1 3651 3 is_stmt 0 view .LVU491
 1706              	.LBE273:
 1707              	.LBE276:
2440:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 1708              		.loc 2 2440 5 is_stmt 1 view .LVU492
2440:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 1709              		.loc 2 2440 10 is_stmt 0 view .LVU493
 1710 0100 00F0A580 		beq	.L160
2440:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 1711              		.loc 2 2440 8 discriminator 8 view .LVU494
 1712 0104 02F58062 		add	r2, r2, #1024
 1713 0108 9342     		cmp	r3, r2
 1714 010a 08D1     		bne	.L140
2440:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 1715              		.loc 2 2440 10 view .LVU495
 1716 010c A2F58072 		sub	r2, r2, #256
 1717              	.L139:
2441:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_REG_SIMULT)
 1718              		.loc 2 2441 9 view .LVU496
 1719 0110 2FB1     		cbz	r7, .L140
2442:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_REG_INTERL)
 1720              		.loc 2 2442 9 view .LVU497
 1721 0112 A7F1060C 		sub	ip, r7, #6
 1722 0116 BCF1010F 		cmp	ip, #1
 1723 011a 00F29B80 		bhi	.L141
 1724              	.L140:
2446:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 1725              		.loc 2 2446 7 is_stmt 1 view .LVU498
2446:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 1726              		.loc 2 2446 16 is_stmt 0 view .LVU499
 1727 011e DA68     		ldr	r2, [r3, #12]
 1728              	.LVL100:
 1729              	.L142:
2462:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         ((READ_BIT(tmp_cfgr, ADC_CFGR_JAUTO) == 0UL)      &&
 1730              		.loc 2 2462 5 is_stmt 1 view .LVU500
2462:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         ((READ_BIT(tmp_cfgr, ADC_CFGR_JAUTO) == 0UL)      &&
 1731              		.loc 2 2462 8 is_stmt 0 view .LVU501
 1732 0120 29B1     		cbz	r1, .L143
2464:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           (READ_BIT(tmp_cfgr, ADC_CFGR_CONT) == 0UL))))
 1733              		.loc 2 2464 60 discriminator 1 view .LVU502
 1734 0122 5C49     		ldr	r1, .L239+16
 1735              	.LVL101:
ARM GAS  /tmp/ccJLHc1D.s 			page 224


 1736              	.LBB277:
 1737              	.LBB274:
3651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 1738              		.loc 1 3651 12 discriminator 1 view .LVU503
 1739 0124 00F44060 		and	r0, r0, #3072
 1740              	.LVL102:
3651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 1741              		.loc 1 3651 12 discriminator 1 view .LVU504
 1742              	.LBE274:
 1743              	.LBE277:
2464:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           (READ_BIT(tmp_cfgr, ADC_CFGR_CONT) == 0UL))))
 1744              		.loc 2 2464 60 discriminator 1 view .LVU505
 1745 0128 1140     		ands	r1, r1, r2
 1746 012a 0143     		orrs	r1, r0, r1
 1747 012c 14D1     		bne	.L144
 1748              	.L143:
2468:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 1749              		.loc 2 2468 7 is_stmt 1 view .LVU506
2468:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 1750              		.loc 2 2468 11 is_stmt 0 view .LVU507
 1751 012e 1968     		ldr	r1, [r3]
2468:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 1752              		.loc 2 2468 10 view .LVU508
 1753 0130 4906     		lsls	r1, r1, #25
 1754 0132 11D5     		bpl	.L144
2476:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 1755              		.loc 2 2476 9 is_stmt 1 view .LVU509
2476:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 1756              		.loc 2 2476 12 is_stmt 0 view .LVU510
 1757 0134 9202     		lsls	r2, r2, #10
 1758              	.LVL103:
2476:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 1759              		.loc 2 2476 12 view .LVU511
 1760 0136 0FD4     		bmi	.L144
2480:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           {
 1761              		.loc 2 2480 11 is_stmt 1 view .LVU512
 1762              	.LVL104:
 1763              	.LBB278:
 1764              	.LBI278:
6968:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 1765              		.loc 1 6968 26 view .LVU513
 1766              	.LBB279:
 1767              		.loc 1 6970 3 view .LVU514
 1768              		.loc 1 6970 12 is_stmt 0 view .LVU515
 1769 0138 9A68     		ldr	r2, [r3, #8]
 1770              		.loc 1 6970 76 view .LVU516
 1771 013a 1007     		lsls	r0, r2, #28
 1772 013c 00F18C80 		bmi	.L146
 1773              	.LVL105:
 1774              		.loc 1 6970 76 view .LVU517
 1775              	.LBE279:
 1776              	.LBE278:
2483:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1777              		.loc 2 2483 13 is_stmt 1 view .LVU518
 1778 0140 5A68     		ldr	r2, [r3, #4]
 1779 0142 22F06002 		bic	r2, r2, #96
 1780 0146 5A60     		str	r2, [r3, #4]
ARM GAS  /tmp/ccJLHc1D.s 			page 225


2486:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1781              		.loc 2 2486 13 view .LVU519
 1782 0148 E36D     		ldr	r3, [r4, #92]
 1783 014a 23F48053 		bic	r3, r3, #4096
 1784 014e E365     		str	r3, [r4, #92]
2488:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             {
 1785              		.loc 2 2488 13 view .LVU520
2488:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             {
 1786              		.loc 2 2488 22 is_stmt 0 view .LVU521
 1787 0150 E36D     		ldr	r3, [r4, #92]
2488:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             {
 1788              		.loc 2 2488 16 view .LVU522
 1789 0152 D905     		lsls	r1, r3, #23
 1790 0154 40F18980 		bpl	.L147
 1791              	.L144:
2514:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1792              		.loc 2 2514 5 is_stmt 1 view .LVU523
 1793 0158 2046     		mov	r0, r4
 1794 015a FFF7FEFF 		bl	HAL_ADCEx_InjectedConvCpltCallback
 1795              	.LVL106:
2518:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 1796              		.loc 2 2518 5 view .LVU524
 1797 015e 2368     		ldr	r3, [r4]
 1798 0160 6022     		movs	r2, #96
 1799 0162 1A60     		str	r2, [r3]
 1800              	.L137:
2522:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 1801              		.loc 2 2522 3 view .LVU525
2522:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 1802              		.loc 2 2522 6 is_stmt 0 view .LVU526
 1803 0164 3206     		lsls	r2, r6, #24
 1804 0166 0BD5     		bpl	.L148
2522:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 1805              		.loc 2 2522 52 discriminator 1 view .LVU527
 1806 0168 2B06     		lsls	r3, r5, #24
 1807 016a 09D5     		bpl	.L148
2525:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1808              		.loc 2 2525 5 is_stmt 1 view .LVU528
 1809 016c E36D     		ldr	r3, [r4, #92]
 1810 016e 43F48033 		orr	r3, r3, #65536
 1811 0172 E365     		str	r3, [r4, #92]
2531:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1812              		.loc 2 2531 5 view .LVU529
 1813 0174 2046     		mov	r0, r4
 1814 0176 FFF7FEFF 		bl	HAL_ADC_LevelOutOfWindowCallback
 1815              	.LVL107:
2535:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 1816              		.loc 2 2535 5 view .LVU530
 1817 017a 2368     		ldr	r3, [r4]
 1818 017c 8022     		movs	r2, #128
 1819 017e 1A60     		str	r2, [r3]
 1820              	.L148:
2539:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 1821              		.loc 2 2539 3 view .LVU531
2539:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 1822              		.loc 2 2539 6 is_stmt 0 view .LVU532
 1823 0180 F005     		lsls	r0, r6, #23
ARM GAS  /tmp/ccJLHc1D.s 			page 226


 1824 0182 0CD5     		bpl	.L149
2539:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 1825              		.loc 2 2539 52 discriminator 1 view .LVU533
 1826 0184 E905     		lsls	r1, r5, #23
 1827 0186 0AD5     		bpl	.L149
2542:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1828              		.loc 2 2542 5 is_stmt 1 view .LVU534
 1829 0188 E36D     		ldr	r3, [r4, #92]
 1830 018a 43F40033 		orr	r3, r3, #131072
 1831 018e E365     		str	r3, [r4, #92]
2548:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1832              		.loc 2 2548 5 view .LVU535
 1833 0190 2046     		mov	r0, r4
 1834 0192 FFF7FEFF 		bl	HAL_ADCEx_LevelOutOfWindow2Callback
 1835              	.LVL108:
2552:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 1836              		.loc 2 2552 5 view .LVU536
 1837 0196 2368     		ldr	r3, [r4]
 1838 0198 4FF48072 		mov	r2, #256
 1839 019c 1A60     		str	r2, [r3]
 1840              	.L149:
2556:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 1841              		.loc 2 2556 3 view .LVU537
2556:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 1842              		.loc 2 2556 6 is_stmt 0 view .LVU538
 1843 019e B205     		lsls	r2, r6, #22
 1844 01a0 0CD5     		bpl	.L150
2556:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 1845              		.loc 2 2556 52 discriminator 1 view .LVU539
 1846 01a2 AB05     		lsls	r3, r5, #22
 1847 01a4 0AD5     		bpl	.L150
2559:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1848              		.loc 2 2559 5 is_stmt 1 view .LVU540
 1849 01a6 E36D     		ldr	r3, [r4, #92]
 1850 01a8 43F48023 		orr	r3, r3, #262144
 1851 01ac E365     		str	r3, [r4, #92]
2565:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1852              		.loc 2 2565 5 view .LVU541
 1853 01ae 2046     		mov	r0, r4
 1854 01b0 FFF7FEFF 		bl	HAL_ADCEx_LevelOutOfWindow3Callback
 1855              	.LVL109:
2569:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 1856              		.loc 2 2569 5 view .LVU542
 1857 01b4 2368     		ldr	r3, [r4]
 1858 01b6 4FF40072 		mov	r2, #512
 1859 01ba 1A60     		str	r2, [r3]
 1860              	.L150:
2573:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 1861              		.loc 2 2573 3 view .LVU543
2573:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 1862              		.loc 2 2573 6 is_stmt 0 view .LVU544
 1863 01bc F006     		lsls	r0, r6, #27
 1864 01be 21D5     		bpl	.L151
2573:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 1865              		.loc 2 2573 50 discriminator 1 view .LVU545
 1866 01c0 E906     		lsls	r1, r5, #27
 1867 01c2 1FD5     		bpl	.L151
ARM GAS  /tmp/ccJLHc1D.s 			page 227


2581:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 1868              		.loc 2 2581 5 is_stmt 1 view .LVU546
2581:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 1869              		.loc 2 2581 8 is_stmt 0 view .LVU547
 1870 01c4 E36B     		ldr	r3, [r4, #60]
 1871 01c6 7BB1     		cbz	r3, .L152
2589:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 1872              		.loc 2 2589 7 is_stmt 1 view .LVU548
 1873 01c8 2268     		ldr	r2, [r4]
2589:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 1874              		.loc 2 2589 10 is_stmt 0 view .LVU549
 1875 01ca 002F     		cmp	r7, #0
 1876 01cc 54D0     		beq	.L153
2593:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 1877              		.loc 2 2593 9 is_stmt 1 view .LVU550
2593:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 1878              		.loc 2 2593 13 is_stmt 0 view .LVU551
 1879 01ce B2F1A04F 		cmp	r2, #1342177280
 1880 01d2 4FD0     		beq	.L161
2593:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 1881              		.loc 2 2593 13 discriminator 2 view .LVU552
 1882 01d4 2B48     		ldr	r0, .L239
 1883 01d6 2C4B     		ldr	r3, .L239+4
 1884 01d8 2C49     		ldr	r1, .L239+8
 1885 01da 8242     		cmp	r2, r0
 1886 01dc 18BF     		it	ne
 1887 01de 0B46     		movne	r3, r1
 1888              	.L154:
 1889              	.LVL110:
 1890              	.LBB280:
 1891              	.LBI280:
6381:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 1892              		.loc 1 6381 26 is_stmt 1 discriminator 6 view .LVU553
 1893              	.LBB281:
6383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 1894              		.loc 1 6383 3 discriminator 6 view .LVU554
6383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 1895              		.loc 1 6383 21 is_stmt 0 discriminator 6 view .LVU555
 1896 01e0 9B68     		ldr	r3, [r3, #8]
 1897              	.LVL111:
6383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 1898              		.loc 1 6383 21 discriminator 6 view .LVU556
 1899              	.LBE281:
 1900              	.LBE280:
2593:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 1901              		.loc 2 2593 12 discriminator 6 view .LVU557
 1902 01e2 13F4604F 		tst	r3, #57344
 1903              	.L238:
2602:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 1904              		.loc 2 2602 12 view .LVU558
 1905 01e6 0AD0     		beq	.L155
 1906              	.L152:
 1907              	.LVL112:
2612:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1908              		.loc 2 2612 7 is_stmt 1 view .LVU559
 1909 01e8 E36D     		ldr	r3, [r4, #92]
 1910 01ea 43F48063 		orr	r3, r3, #1024
ARM GAS  /tmp/ccJLHc1D.s 			page 228


 1911 01ee E365     		str	r3, [r4, #92]
2615:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1912              		.loc 2 2615 7 view .LVU560
 1913 01f0 236E     		ldr	r3, [r4, #96]
 1914 01f2 43F00203 		orr	r3, r3, #2
 1915 01f6 2366     		str	r3, [r4, #96]
2625:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1916              		.loc 2 2625 7 view .LVU561
 1917 01f8 2046     		mov	r0, r4
 1918 01fa FFF7FEFF 		bl	HAL_ADC_ErrorCallback
 1919              	.LVL113:
 1920              	.L155:
2630:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 1921              		.loc 2 2630 5 view .LVU562
 1922 01fe 2368     		ldr	r3, [r4]
 1923 0200 1022     		movs	r2, #16
 1924 0202 1A60     		str	r2, [r3]
 1925              	.L151:
2634:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 1926              		.loc 2 2634 3 view .LVU563
2634:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 1927              		.loc 2 2634 6 is_stmt 0 view .LVU564
 1928 0204 7205     		lsls	r2, r6, #21
 1929 0206 3BD5     		bpl	.L119
2634:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 1930              		.loc 2 2634 54 discriminator 1 view .LVU565
 1931 0208 6B05     		lsls	r3, r5, #21
 1932 020a 39D5     		bpl	.L119
2637:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1933              		.loc 2 2637 5 is_stmt 1 view .LVU566
 1934 020c E36D     		ldr	r3, [r4, #92]
 1935 020e 43F48043 		orr	r3, r3, #16384
 1936 0212 E365     		str	r3, [r4, #92]
2640:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1937              		.loc 2 2640 5 view .LVU567
 1938 0214 236E     		ldr	r3, [r4, #96]
 1939 0216 43F00803 		orr	r3, r3, #8
 1940 021a 2366     		str	r3, [r4, #96]
2643:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1941              		.loc 2 2643 5 view .LVU568
 1942 021c 2368     		ldr	r3, [r4]
 1943 021e 4FF48062 		mov	r2, #1024
 1944 0222 1A60     		str	r2, [r3]
2649:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1945              		.loc 2 2649 5 view .LVU569
 1946 0224 2046     		mov	r0, r4
2653:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1947              		.loc 2 2653 1 is_stmt 0 view .LVU570
 1948 0226 BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 1949              	.LCFI9:
 1950              		.cfi_remember_state
 1951              		.cfi_restore 14
 1952              		.cfi_restore 7
 1953              		.cfi_restore 6
 1954              		.cfi_restore 5
 1955              		.cfi_restore 4
 1956              		.cfi_restore 3
ARM GAS  /tmp/ccJLHc1D.s 			page 229


 1957              		.cfi_def_cfa_offset 0
 1958              	.LVL114:
2649:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1959              		.loc 2 2649 5 view .LVU571
 1960 022a FFF7FEBF 		b	HAL_ADCEx_InjectedQueueOverflowCallback
 1961              	.LVL115:
 1962              	.L157:
 1963              	.LCFI10:
 1964              		.cfi_restore_state
2300:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
 1965              		.loc 2 2300 35 view .LVU572
 1966 022e 164B     		ldr	r3, .L239+4
 1967 0230 F5E6     		b	.L120
 1968              	.LVL116:
 1969              	.L159:
2348:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 1970              		.loc 2 2348 12 view .LVU573
 1971 0232 4FF0A042 		mov	r2, #1342177280
 1972 0236 23E7     		b	.L129
 1973              	.L131:
2360:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         tmp_cfgr = READ_REG(tmpADC_Master->CFGR);
 1974              		.loc 2 2360 9 is_stmt 1 discriminator 8 view .LVU574
 1975              	.LVL117:
2361:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 1976              		.loc 2 2361 9 discriminator 8 view .LVU575
2361:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 1977              		.loc 2 2361 18 is_stmt 0 discriminator 8 view .LVU576
 1978 0238 D368     		ldr	r3, [r2, #12]
 1979              	.LVL118:
2361:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 1980              		.loc 2 2361 18 discriminator 8 view .LVU577
 1981 023a 2BE7     		b	.L132
 1982              	.LVL119:
 1983              	.L134:
2394:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1984              		.loc 2 2394 13 is_stmt 1 view .LVU578
 1985 023c E36D     		ldr	r3, [r4, #92]
 1986 023e 43F01003 		orr	r3, r3, #16
 1987 0242 E365     		str	r3, [r4, #92]
2397:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           }
 1988              		.loc 2 2397 13 view .LVU579
 1989 0244 236E     		ldr	r3, [r4, #96]
 1990 0246 43F00103 		orr	r3, r3, #1
 1991 024a 2366     		str	r3, [r4, #96]
 1992 024c 3CE7     		b	.L128
 1993              	.LVL120:
 1994              	.L160:
2440:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 1995              		.loc 2 2440 10 is_stmt 0 view .LVU580
 1996 024e 4FF0A042 		mov	r2, #1342177280
 1997 0252 5DE7     		b	.L139
 1998              	.L141:
2450:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       tmp_cfgr = READ_REG(tmpADC_Master->CFGR);
 1999              		.loc 2 2450 7 is_stmt 1 discriminator 8 view .LVU581
 2000              	.LVL121:
2451:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 2001              		.loc 2 2451 7 discriminator 8 view .LVU582
ARM GAS  /tmp/ccJLHc1D.s 			page 230


2451:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 2002              		.loc 2 2451 16 is_stmt 0 discriminator 8 view .LVU583
 2003 0254 D268     		ldr	r2, [r2, #12]
 2004              	.LVL122:
2451:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 2005              		.loc 2 2451 16 discriminator 8 view .LVU584
 2006 0256 63E7     		b	.L142
 2007              	.LVL123:
 2008              	.L146:
2496:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 2009              		.loc 2 2496 13 is_stmt 1 view .LVU585
 2010 0258 E36D     		ldr	r3, [r4, #92]
 2011 025a 43F01003 		orr	r3, r3, #16
 2012 025e E365     		str	r3, [r4, #92]
2499:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           }
 2013              		.loc 2 2499 13 view .LVU586
 2014 0260 236E     		ldr	r3, [r4, #96]
 2015 0262 43F00103 		orr	r3, r3, #1
 2016 0266 2366     		str	r3, [r4, #96]
 2017 0268 76E7     		b	.L144
 2018              	.L147:
2490:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             }
 2019              		.loc 2 2490 15 view .LVU587
 2020 026a E36D     		ldr	r3, [r4, #92]
 2021 026c 43F00103 		orr	r3, r3, #1
 2022 0270 E365     		str	r3, [r4, #92]
 2023 0272 71E7     		b	.L144
 2024              	.L161:
2593:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 2025              		.loc 2 2593 13 is_stmt 0 view .LVU588
 2026 0274 044B     		ldr	r3, .L239+4
 2027 0276 B3E7     		b	.L154
 2028              	.L153:
2602:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 2029              		.loc 2 2602 9 is_stmt 1 view .LVU589
2602:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 2030              		.loc 2 2602 28 is_stmt 0 view .LVU590
 2031 0278 D368     		ldr	r3, [r2, #12]
2602:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 2032              		.loc 2 2602 12 view .LVU591
 2033 027a 13F0010F 		tst	r3, #1
 2034 027e B2E7     		b	.L238
 2035              	.LVL124:
 2036              	.L119:
2653:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 2037              		.loc 2 2653 1 view .LVU592
 2038 0280 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2039              	.LVL125:
 2040              	.L240:
2653:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 2041              		.loc 2 2653 1 view .LVU593
 2042 0282 00BF     		.align	2
 2043              	.L239:
 2044 0284 00010050 		.word	1342177536
 2045 0288 00030050 		.word	1342178048
 2046 028c 00070050 		.word	1342179072
 2047 0290 00040050 		.word	1342178304
ARM GAS  /tmp/ccJLHc1D.s 			page 231


 2048 0294 00200002 		.word	33562624
 2049              		.cfi_endproc
 2050              	.LFE372:
 2052              		.section	.text.ADC_DMAConvCplt,"ax",%progbits
 2053              		.align	1
 2054              		.global	ADC_DMAConvCplt
 2055              		.syntax unified
 2056              		.thumb
 2057              		.thumb_func
 2058              		.fpu fpv4-sp-d16
 2060              	ADC_DMAConvCplt:
 2061              	.LVL126:
 2062              	.LFB384:
3542:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
 2063              		.loc 2 3542 1 is_stmt 1 view -0
 2064              		.cfi_startproc
 2065              		@ args = 0, pretend = 0, frame = 0
 2066              		@ frame_needed = 0, uses_anonymous_args = 0
3544:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 2067              		.loc 2 3544 3 view .LVU595
3544:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 2068              		.loc 2 3544 22 is_stmt 0 view .LVU596
 2069 0000 836A     		ldr	r3, [r0, #40]
 2070              	.LVL127:
3547:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 2071              		.loc 2 3547 3 is_stmt 1 view .LVU597
3547:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 2072              		.loc 2 3547 12 is_stmt 0 view .LVU598
 2073 0002 DA6D     		ldr	r2, [r3, #92]
3547:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 2074              		.loc 2 3547 6 view .LVU599
 2075 0004 12F0500F 		tst	r2, #80
3542:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
 2076              		.loc 2 3542 1 view .LVU600
 2077 0008 10B5     		push	{r4, lr}
 2078              	.LCFI11:
 2079              		.cfi_def_cfa_offset 8
 2080              		.cfi_offset 4, -8
 2081              		.cfi_offset 14, -4
3550:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 2082              		.loc 2 3550 5 view .LVU601
 2083 000a DA6D     		ldr	r2, [r3, #92]
3547:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 2084              		.loc 2 3547 6 view .LVU602
 2085 000c 21D1     		bne	.L242
3550:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 2086              		.loc 2 3550 5 is_stmt 1 view .LVU603
 2087 000e 42F40072 		orr	r2, r2, #512
 2088 0012 DA65     		str	r2, [r3, #92]
3556:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 2089              		.loc 2 3556 5 view .LVU604
3556:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 2090              		.loc 2 3556 14 is_stmt 0 view .LVU605
 2091 0014 1A68     		ldr	r2, [r3]
3556:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 2092              		.loc 2 3556 24 view .LVU606
 2093 0016 1168     		ldr	r1, [r2]
ARM GAS  /tmp/ccJLHc1D.s 			page 232


3556:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 2094              		.loc 2 3556 8 view .LVU607
 2095 0018 0807     		lsls	r0, r1, #28
 2096              	.LVL128:
3556:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 2097              		.loc 2 3556 8 view .LVU608
 2098 001a 16D5     		bpl	.L243
3559:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 2099              		.loc 2 3559 7 is_stmt 1 view .LVU609
 2100              	.LVL129:
 2101              	.LBB284:
 2102              	.LBI284:
3649:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 2103              		.loc 1 3649 26 view .LVU610
 2104              	.LBB285:
3651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2105              		.loc 1 3651 3 view .LVU611
3651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2106              		.loc 1 3651 12 is_stmt 0 view .LVU612
 2107 001c D168     		ldr	r1, [r2, #12]
3651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2108              		.loc 1 3651 103 view .LVU613
 2109 001e 11F4406F 		tst	r1, #3072
 2110 0022 0ED1     		bne	.L245
 2111              	.LVL130:
3651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2112              		.loc 1 3651 103 view .LVU614
 2113              	.LBE285:
 2114              	.LBE284:
3562:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 2115              		.loc 2 3562 9 is_stmt 1 view .LVU615
3562:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 2116              		.loc 2 3562 13 is_stmt 0 view .LVU616
 2117 0024 D268     		ldr	r2, [r2, #12]
3562:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 2118              		.loc 2 3562 12 view .LVU617
 2119 0026 12F4005F 		tst	r2, #8192
 2120              	.L253:
3577:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 2121              		.loc 2 3577 10 view .LVU618
 2122 002a 0AD1     		bne	.L245
3580:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == 0UL)
 2123              		.loc 2 3580 9 is_stmt 1 view .LVU619
 2124 002c DA6D     		ldr	r2, [r3, #92]
 2125 002e 22F48072 		bic	r2, r2, #256
 2126 0032 DA65     		str	r2, [r3, #92]
3581:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 2127              		.loc 2 3581 9 view .LVU620
3581:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 2128              		.loc 2 3581 18 is_stmt 0 view .LVU621
 2129 0034 DA6D     		ldr	r2, [r3, #92]
3581:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 2130              		.loc 2 3581 12 view .LVU622
 2131 0036 D104     		lsls	r1, r2, #19
3583:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
 2132              		.loc 2 3583 11 is_stmt 1 view .LVU623
 2133 0038 5EBF     		ittt	pl
ARM GAS  /tmp/ccJLHc1D.s 			page 233


 2134 003a DA6D     		ldrpl	r2, [r3, #92]
 2135 003c 42F00102 		orrpl	r2, r2, #1
 2136 0040 DA65     		strpl	r2, [r3, #92]
 2137              	.L245:
3592:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 2138              		.loc 2 3592 5 view .LVU624
 2139 0042 1846     		mov	r0, r3
 2140 0044 FFF7FEFF 		bl	HAL_ADC_ConvCpltCallback
 2141              	.LVL131:
 2142              	.L241:
3612:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 2143              		.loc 2 3612 1 is_stmt 0 view .LVU625
 2144 0048 10BD     		pop	{r4, pc}
 2145              	.LVL132:
 2146              	.L243:
3577:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 2147              		.loc 2 3577 7 is_stmt 1 view .LVU626
3577:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 2148              		.loc 2 3577 11 is_stmt 0 view .LVU627
 2149 004a D268     		ldr	r2, [r2, #12]
3577:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 2150              		.loc 2 3577 10 view .LVU628
 2151 004c 12F0020F 		tst	r2, #2
 2152 0050 EBE7     		b	.L253
 2153              	.LVL133:
 2154              	.L242:
3597:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 2155              		.loc 2 3597 5 is_stmt 1 view .LVU629
3597:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 2156              		.loc 2 3597 8 is_stmt 0 view .LVU630
 2157 0052 D206     		lsls	r2, r2, #27
 2158 0054 03D5     		bpl	.L248
3603:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 2159              		.loc 2 3603 7 is_stmt 1 view .LVU631
 2160 0056 1846     		mov	r0, r3
 2161              	.LVL134:
3603:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 2162              		.loc 2 3603 7 is_stmt 0 view .LVU632
 2163 0058 FFF7FEFF 		bl	HAL_ADC_ErrorCallback
 2164              	.LVL135:
3603:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 2165              		.loc 2 3603 7 view .LVU633
 2166 005c F4E7     		b	.L241
 2167              	.LVL136:
 2168              	.L248:
3609:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 2169              		.loc 2 3609 7 is_stmt 1 view .LVU634
3609:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 2170              		.loc 2 3609 23 is_stmt 0 view .LVU635
 2171 005e 5B6D     		ldr	r3, [r3, #84]
 2172              	.LVL137:
3612:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 2173              		.loc 2 3612 1 view .LVU636
 2174 0060 BDE81040 		pop	{r4, lr}
 2175              	.LCFI12:
 2176              		.cfi_restore 14
 2177              		.cfi_restore 4
ARM GAS  /tmp/ccJLHc1D.s 			page 234


 2178              		.cfi_def_cfa_offset 0
3609:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 2179              		.loc 2 3609 7 view .LVU637
 2180 0064 5B6B     		ldr	r3, [r3, #52]
 2181 0066 1847     		bx	r3	@ indirect register sibling call
 2182              	.LVL138:
3609:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 2183              		.loc 2 3609 7 view .LVU638
 2184              		.cfi_endproc
 2185              	.LFE384:
 2187              		.section	.text.ADC_DMAError,"ax",%progbits
 2188              		.align	1
 2189              		.global	ADC_DMAError
 2190              		.syntax unified
 2191              		.thumb
 2192              		.thumb_func
 2193              		.fpu fpv4-sp-d16
 2195              	ADC_DMAError:
 2196              	.LVL139:
 2197              	.LFB386:
3631:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3632:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
3633:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  DMA error callback.
3634:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param hdma pointer to DMA handle.
3635:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval None
3636:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
3637:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** void ADC_DMAError(DMA_HandleTypeDef *hdma)
3638:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
 2198              		.loc 2 3638 1 is_stmt 1 view -0
 2199              		.cfi_startproc
 2200              		@ args = 0, pretend = 0, frame = 0
 2201              		@ frame_needed = 0, uses_anonymous_args = 0
3639:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
3640:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   ADC_HandleTypeDef *hadc = (ADC_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 2202              		.loc 2 3640 3 view .LVU640
 2203              		.loc 2 3640 22 is_stmt 0 view .LVU641
 2204 0000 806A     		ldr	r0, [r0, #40]
 2205              	.LVL140:
3641:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3642:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Set ADC state */
3643:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
 2206              		.loc 2 3643 3 is_stmt 1 view .LVU642
3638:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
 2207              		.loc 2 3638 1 is_stmt 0 view .LVU643
 2208 0002 08B5     		push	{r3, lr}
 2209              	.LCFI13:
 2210              		.cfi_def_cfa_offset 8
 2211              		.cfi_offset 3, -8
 2212              		.cfi_offset 14, -4
 2213              		.loc 2 3643 3 view .LVU644
 2214 0004 C36D     		ldr	r3, [r0, #92]
 2215 0006 43F04003 		orr	r3, r3, #64
 2216 000a C365     		str	r3, [r0, #92]
3644:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3645:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Set ADC error code to DMA error */
3646:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_DMA);
 2217              		.loc 2 3646 3 is_stmt 1 view .LVU645
ARM GAS  /tmp/ccJLHc1D.s 			page 235


 2218 000c 036E     		ldr	r3, [r0, #96]
 2219 000e 43F00403 		orr	r3, r3, #4
 2220 0012 0366     		str	r3, [r0, #96]
3647:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3648:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Error callback */
3649:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
3650:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   hadc->ErrorCallback(hadc);
3651:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #else
3652:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_ADC_ErrorCallback(hadc);
 2221              		.loc 2 3652 3 view .LVU646
 2222 0014 FFF7FEFF 		bl	HAL_ADC_ErrorCallback
 2223              	.LVL141:
3653:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
3654:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
 2224              		.loc 2 3654 1 is_stmt 0 view .LVU647
 2225 0018 08BD     		pop	{r3, pc}
 2226              		.cfi_endproc
 2227              	.LFE386:
 2229              		.section	.text.HAL_ADC_ConfigChannel,"ax",%progbits
 2230              		.align	1
 2231              		.global	HAL_ADC_ConfigChannel
 2232              		.syntax unified
 2233              		.thumb
 2234              		.thumb_func
 2235              		.fpu fpv4-sp-d16
 2237              	HAL_ADC_ConfigChannel:
 2238              	.LVL142:
 2239              	.LFB377:
2759:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2240              		.loc 2 2759 1 is_stmt 1 view -0
 2241              		.cfi_startproc
 2242              		@ args = 0, pretend = 0, frame = 8
 2243              		@ frame_needed = 0, uses_anonymous_args = 0
2760:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 2244              		.loc 2 2760 3 view .LVU649
2761:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_config_internal_channel;
 2245              		.loc 2 2761 3 view .LVU650
2762:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0;
 2246              		.loc 2 2762 3 view .LVU651
2763:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
 2247              		.loc 2 2763 3 view .LVU652
2759:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2248              		.loc 2 2759 1 is_stmt 0 view .LVU653
 2249 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 2250              	.LCFI14:
 2251              		.cfi_def_cfa_offset 32
 2252              		.cfi_offset 4, -20
 2253              		.cfi_offset 5, -16
 2254              		.cfi_offset 6, -12
 2255              		.cfi_offset 7, -8
 2256              		.cfi_offset 14, -4
2763:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
 2257              		.loc 2 2763 17 view .LVU654
 2258 0002 0023     		movs	r3, #0
 2259 0004 0193     		str	r3, [sp, #4]
2764:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
 2260              		.loc 2 2764 3 is_stmt 1 view .LVU655
ARM GAS  /tmp/ccJLHc1D.s 			page 236


2765:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 2261              		.loc 2 2765 3 view .LVU656
2768:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_REGULAR_RANK(sConfig->Rank));
 2262              		.loc 2 2768 3 view .LVU657
2769:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));
 2263              		.loc 2 2769 3 view .LVU658
2770:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_SINGLE_DIFFERENTIAL(sConfig->SingleDiff));
 2264              		.loc 2 2770 3 view .LVU659
2771:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_OFFSET_NUMBER(sConfig->OffsetNumber));
 2265              		.loc 2 2771 3 view .LVU660
2772:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), sConfig->Offset));
 2266              		.loc 2 2772 3 view .LVU661
2773:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 2267              		.loc 2 2773 3 view .LVU662
2777:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 2268              		.loc 2 2777 3 view .LVU663
2780:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 2269              		.loc 2 2780 3 view .LVU664
2786:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 2270              		.loc 2 2786 5 view .LVU665
2790:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 2271              		.loc 2 2790 3 view .LVU666
2790:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 2272              		.loc 2 2790 3 view .LVU667
 2273 0006 90F85830 		ldrb	r3, [r0, #88]	@ zero_extendqisi2
 2274 000a 012B     		cmp	r3, #1
2759:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2275              		.loc 2 2759 1 is_stmt 0 view .LVU668
 2276 000c 0546     		mov	r5, r0
 2277 000e 0C46     		mov	r4, r1
2790:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 2278              		.loc 2 2790 3 view .LVU669
 2279 0010 00F0D881 		beq	.L300
2790:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 2280              		.loc 2 2790 3 is_stmt 1 discriminator 2 view .LVU670
 2281 0014 0123     		movs	r3, #1
 2282 0016 80F85830 		strb	r3, [r0, #88]
2790:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 2283              		.loc 2 2790 3 discriminator 2 view .LVU671
2797:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 2284              		.loc 2 2797 3 discriminator 2 view .LVU672
2797:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 2285              		.loc 2 2797 7 is_stmt 0 discriminator 2 view .LVU673
 2286 001a 0068     		ldr	r0, [r0]
 2287              	.LVL143:
2797:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 2288              		.loc 2 2797 7 discriminator 2 view .LVU674
 2289 001c FFF7FEFF 		bl	LL_ADC_REG_IsConversionOngoing
 2290              	.LVL144:
2797:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 2291              		.loc 2 2797 6 discriminator 2 view .LVU675
 2292 0020 0028     		cmp	r0, #0
 2293 0022 40F0AC81 		bne	.L257
2800:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 2294              		.loc 2 2800 5 is_stmt 1 view .LVU676
 2295 0026 4A68     		ldr	r2, [r1, #4]
 2296 0028 2868     		ldr	r0, [r5]
ARM GAS  /tmp/ccJLHc1D.s 			page 237


 2297              	.LVL145:
 2298              	.LBB358:
 2299              	.LBI358:
3993:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 2300              		.loc 1 3993 22 view .LVU677
 2301              	.LBB359:
3999:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 2302              		.loc 1 3999 3 view .LVU678
4001:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
 2303              		.loc 1 4001 3 is_stmt 0 view .LVU679
 2304 002a 2368     		ldr	r3, [r4]
3999:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 2305              		.loc 1 3999 34 view .LVU680
 2306 002c 9109     		lsrs	r1, r2, #6
 2307              	.LVL146:
3999:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 2308              		.loc 1 3999 34 view .LVU681
 2309 002e 01F00C01 		and	r1, r1, #12
 2310 0032 00F13007 		add	r7, r0, #48
 2311              	.LVL147:
4001:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
 2312              		.loc 1 4001 3 is_stmt 1 view .LVU682
 2313 0036 02F01F02 		and	r2, r2, #31
 2314              	.LVL148:
4001:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
 2315              		.loc 1 4001 3 is_stmt 0 view .LVU683
 2316 003a CE59     		ldr	r6, [r1, r7]
 2317 003c 4FF01F0C 		mov	ip, #31
 2318 0040 C3F38463 		ubfx	r3, r3, #26, #5
 2319              	.LVL149:
4001:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
 2320              		.loc 1 4001 3 view .LVU684
 2321 0044 9340     		lsls	r3, r3, r2
 2322 0046 0CFA02F2 		lsl	r2, ip, r2
 2323 004a 26EA0202 		bic	r2, r6, r2
 2324 004e 1343     		orrs	r3, r3, r2
 2325 0050 CB51     		str	r3, [r1, r7]
 2326              	.LVL150:
4001:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
 2327              		.loc 1 4001 3 view .LVU685
 2328              	.LBE359:
 2329              	.LBE358:
2807:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 2330              		.loc 2 2807 5 is_stmt 1 view .LVU686
2807:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 2331              		.loc 2 2807 46 is_stmt 0 view .LVU687
 2332 0052 FFF7FEFF 		bl	LL_ADC_REG_IsConversionOngoing
 2333              	.LVL151:
 2334 0056 0646     		mov	r6, r0
 2335              	.LVL152:
2808:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if ((tmp_adc_is_conversion_on_going_regular == 0UL)
 2336              		.loc 2 2808 5 is_stmt 1 view .LVU688
2808:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if ((tmp_adc_is_conversion_on_going_regular == 0UL)
 2337              		.loc 2 2808 47 is_stmt 0 view .LVU689
 2338 0058 2868     		ldr	r0, [r5]
 2339              	.LVL153:
 2340              	.LBB360:
ARM GAS  /tmp/ccJLHc1D.s 			page 238


 2341              	.LBI360:
6968:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 2342              		.loc 1 6968 26 is_stmt 1 view .LVU690
 2343              	.LBB361:
 2344              		.loc 1 6970 3 view .LVU691
 2345              		.loc 1 6970 12 is_stmt 0 view .LVU692
 2346 005a 8368     		ldr	r3, [r0, #8]
 2347 005c 03F00803 		and	r3, r3, #8
 2348              		.loc 1 6970 76 view .LVU693
 2349 0060 1E43     		orrs	r6, r3, r6
 2350              	.LVL154:
 2351              		.loc 1 6970 76 view .LVU694
 2352 0062 3CD1     		bne	.L259
 2353              	.LVL155:
 2354              		.loc 1 6970 76 view .LVU695
 2355              	.LBE361:
 2356              	.LBE360:
2809:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         && (tmp_adc_is_conversion_on_going_injected == 0UL)
 2357              		.loc 2 2809 5 is_stmt 1 view .LVU696
2814:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 2358              		.loc 2 2814 7 view .LVU697
2814:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 2359              		.loc 2 2814 18 is_stmt 0 view .LVU698
 2360 0064 A268     		ldr	r2, [r4, #8]
 2361 0066 2168     		ldr	r1, [r4]
2814:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 2362              		.loc 2 2814 10 view .LVU699
 2363 0068 B2F1004F 		cmp	r2, #-2147483648
 2364 006c 7AD1     		bne	.L260
2817:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 2365              		.loc 2 2817 9 is_stmt 1 view .LVU700
 2366 006e 3246     		mov	r2, r6
 2367 0070 FFF7FEFF 		bl	LL_ADC_SetChannelSamplingTime
 2368              	.LVL156:
2820:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 2369              		.loc 2 2820 9 view .LVU701
 2370 0074 2A68     		ldr	r2, [r5]
 2371              	.LVL157:
 2372              	.LBB362:
 2373              	.LBI362:
3462:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 2374              		.loc 1 3462 22 view .LVU702
 2375              	.LBB363:
3464:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2376              		.loc 1 3464 3 view .LVU703
 2377 0076 5369     		ldr	r3, [r2, #20]
 2378 0078 43F00043 		orr	r3, r3, #-2147483648
 2379              	.LVL158:
 2380              	.L308:
3464:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2381              		.loc 1 3464 3 is_stmt 0 view .LVU704
 2382              	.LBE363:
 2383              	.LBE362:
 2384              	.LBB364:
 2385              	.LBB365:
 2386 007c 5361     		str	r3, [r2, #20]
 2387              	.LBE365:
ARM GAS  /tmp/ccJLHc1D.s 			page 239


 2388              	.LBE364:
2835:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 2389              		.loc 2 2835 7 is_stmt 1 view .LVU705
2837:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 2390              		.loc 2 2837 18 is_stmt 0 view .LVU706
 2391 007e 2769     		ldr	r7, [r4, #16]
2835:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 2392              		.loc 2 2835 26 view .LVU707
 2393 0080 2868     		ldr	r0, [r5]
 2394 0082 2268     		ldr	r2, [r4]
 2395 0084 C168     		ldr	r1, [r0, #12]
 2396              	.LVL159:
2837:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 2397              		.loc 2 2837 7 is_stmt 1 view .LVU708
2837:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 2398              		.loc 2 2837 10 is_stmt 0 view .LVU709
 2399 0086 042F     		cmp	r7, #4
 2400 0088 00F16003 		add	r3, r0, #96
 2401 008c 71D0     		beq	.L262
2840:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 2402              		.loc 2 2840 9 is_stmt 1 view .LVU710
 2403              	.LVL160:
 2404              	.LBB367:
 2405              	.LBI367:
3122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 2406              		.loc 1 3122 22 view .LVU711
 2407              	.LBB368:
3124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 2408              		.loc 1 3124 3 view .LVU712
3126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
 2409              		.loc 1 3126 3 view .LVU713
 2410              	.LBE368:
 2411              	.LBE367:
2835:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 2412              		.loc 2 2835 26 is_stmt 0 view .LVU714
 2413 008e C1F3C101 		ubfx	r1, r1, #3, #2
 2414              	.LVL161:
2835:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 2415              		.loc 2 2835 26 view .LVU715
 2416 0092 4800     		lsls	r0, r1, #1
 2417              	.LVL162:
2835:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 2418              		.loc 2 2835 24 view .LVU716
 2419 0094 6169     		ldr	r1, [r4, #20]
 2420              	.LBB371:
 2421              	.LBB369:
3126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
 2422              		.loc 1 3126 3 view .LVU717
 2423 0096 53F827C0 		ldr	ip, [r3, r7, lsl #2]
 2424              	.LBE369:
 2425              	.LBE371:
2835:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 2426              		.loc 2 2835 24 view .LVU718
 2427 009a 8140     		lsls	r1, r1, r0
 2428              	.LBB372:
 2429              	.LBB370:
3126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
ARM GAS  /tmp/ccJLHc1D.s 			page 240


 2430              		.loc 1 3126 3 view .LVU719
 2431 009c BB48     		ldr	r0, .L313
 2432 009e 02F0F842 		and	r2, r2, #2080374784
 2433              	.LVL163:
3126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
 2434              		.loc 1 3126 3 view .LVU720
 2435 00a2 0CEA0000 		and	r0, ip, r0
 2436 00a6 1043     		orrs	r0, r0, r2
 2437 00a8 0143     		orrs	r1, r1, r0
 2438 00aa 41F00041 		orr	r1, r1, #-2147483648
 2439 00ae 43F82710 		str	r1, [r3, r7, lsl #2]
 2440              	.LVL164:
3126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
 2441              		.loc 1 3126 3 view .LVU721
 2442              	.LBE370:
 2443              	.LBE372:
2842:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         assert_param(IS_FUNCTIONAL_STATE(sConfig->OffsetSaturation));
 2444              		.loc 2 2842 9 is_stmt 1 view .LVU722
2843:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Set ADC selected offset sign & saturation */
 2445              		.loc 2 2843 9 view .LVU723
2845:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         LL_ADC_SetOffsetSaturation(hadc->Instance, sConfig->OffsetNumber, (sConfig->OffsetSaturatio
 2446              		.loc 2 2845 9 view .LVU724
 2447              	.LBB373:
 2448              	.LBI373:
3319:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 2449              		.loc 1 3319 22 view .LVU725
 2450              	.LBB374:
3321:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 2451              		.loc 1 3321 3 view .LVU726
3321:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 2452              		.loc 1 3321 34 is_stmt 0 view .LVU727
 2453 00b2 2169     		ldr	r1, [r4, #16]
 2454              	.LVL165:
3323:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_OFR1_OFFSETPOS,
 2455              		.loc 1 3323 3 is_stmt 1 view .LVU728
 2456 00b4 A069     		ldr	r0, [r4, #24]
 2457 00b6 53F82120 		ldr	r2, [r3, r1, lsl #2]
 2458 00ba 22F08072 		bic	r2, r2, #16777216
 2459 00be 0243     		orrs	r2, r2, r0
 2460 00c0 43F82120 		str	r2, [r3, r1, lsl #2]
 2461              	.LVL166:
3323:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_OFR1_OFFSETPOS,
 2462              		.loc 1 3323 3 is_stmt 0 view .LVU729
 2463              	.LBE374:
 2464              	.LBE373:
2846:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 2465              		.loc 2 2846 9 is_stmt 1 view .LVU730
 2466 00c4 2269     		ldr	r2, [r4, #16]
 2467 00c6 217F     		ldrb	r1, [r4, #28]	@ zero_extendqisi2
 2468              	.LBB375:
 2469              	.LBB376:
3378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_OFR1_SATEN,
 2470              		.loc 1 3378 3 is_stmt 0 view .LVU731
 2471 00c8 53F82200 		ldr	r0, [r3, r2, lsl #2]
 2472              	.LBE376:
 2473              	.LBE375:
2846:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
ARM GAS  /tmp/ccJLHc1D.s 			page 241


 2474              		.loc 2 2846 9 view .LVU732
 2475 00cc 0129     		cmp	r1, #1
 2476 00ce 08BF     		it	eq
 2477 00d0 4FF00076 		moveq	r6, #33554432
 2478              	.LVL167:
 2479              	.LBB378:
 2480              	.LBI375:
3374:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 2481              		.loc 1 3374 22 is_stmt 1 view .LVU733
 2482              	.LBB377:
3376:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 2483              		.loc 1 3376 3 view .LVU734
3378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_OFR1_SATEN,
 2484              		.loc 1 3378 3 view .LVU735
 2485 00d4 20F00070 		bic	r0, r0, #33554432
 2486 00d8 0643     		orrs	r6, r6, r0
 2487              	.LVL168:
3378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_OFR1_SATEN,
 2488              		.loc 1 3378 3 is_stmt 0 view .LVU736
 2489 00da 43F82260 		str	r6, [r3, r2, lsl #2]
 2490              	.LVL169:
 2491              	.L259:
3378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_OFR1_SATEN,
 2492              		.loc 1 3378 3 view .LVU737
 2493              	.LBE377:
 2494              	.LBE378:
2874:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 2495              		.loc 2 2874 5 is_stmt 1 view .LVU738
2874:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 2496              		.loc 2 2874 9 is_stmt 0 view .LVU739
 2497 00de 2868     		ldr	r0, [r5]
 2498              	.LVL170:
 2499              	.LBB379:
 2500              	.LBI379:
6621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 2501              		.loc 1 6621 26 is_stmt 1 view .LVU740
 2502              	.LBB380:
6623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2503              		.loc 1 6623 3 view .LVU741
6623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2504              		.loc 1 6623 12 is_stmt 0 view .LVU742
 2505 00e0 8368     		ldr	r3, [r0, #8]
 2506              	.LVL171:
6623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2507              		.loc 1 6623 12 view .LVU743
 2508              	.LBE380:
 2509              	.LBE379:
2874:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 2510              		.loc 2 2874 8 view .LVU744
 2511 00e2 DF07     		lsls	r7, r3, #31
 2512 00e4 33D4     		bmi	.L277
2877:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 2513              		.loc 2 2877 7 view .LVU745
 2514 00e6 E668     		ldr	r6, [r4, #12]
 2515 00e8 2368     		ldr	r3, [r4]
2877:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 2516              		.loc 2 2877 7 is_stmt 1 view .LVU746
ARM GAS  /tmp/ccJLHc1D.s 			page 242


 2517              	.LVL172:
 2518              	.LBB381:
 2519              	.LBI381:
5397:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 2520              		.loc 1 5397 22 view .LVU747
 2521              	.LBB382:
5402:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
 2522              		.loc 1 5402 3 view .LVU748
 2523 00ea A94A     		ldr	r2, .L313+4
 2524 00ec D0F8B010 		ldr	r1, [r0, #176]
 2525 00f0 06F0180C 		and	ip, r6, #24
 2526 00f4 C3F31207 		ubfx	r7, r3, #0, #19
 2527 00f8 22FA0CF2 		lsr	r2, r2, ip
 2528 00fc 1A40     		ands	r2, r2, r3
 2529 00fe 21EA0701 		bic	r1, r1, r7
 2530 0102 0A43     		orrs	r2, r2, r1
 2531 0104 C0F8B020 		str	r2, [r0, #176]
 2532              	.LVL173:
5402:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
 2533              		.loc 1 5402 3 is_stmt 0 view .LVU749
 2534              	.LBE382:
 2535              	.LBE381:
2880:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 2536              		.loc 2 2880 7 is_stmt 1 view .LVU750
2880:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 2537              		.loc 2 2880 10 is_stmt 0 view .LVU751
 2538 0108 A24A     		ldr	r2, .L313+8
 2539 010a 9642     		cmp	r6, r2
 2540 010c 1FD1     		bne	.L277
2884:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                       (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_T
 2541              		.loc 2 2884 9 is_stmt 1 view .LVU752
2885:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 2542              		.loc 2 2885 50 is_stmt 0 view .LVU753
 2543 010e 002F     		cmp	r7, #0
 2544 0110 40F08480 		bne	.L279
2885:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 2545              		.loc 2 2885 50 discriminator 1 view .LVU754
 2546 0114 990E     		lsrs	r1, r3, #26
 2547 0116 0131     		adds	r1, r1, #1
 2548 0118 01F01F06 		and	r6, r1, #31
 2549 011c 8906     		lsls	r1, r1, #26
 2550 011e 01F0F842 		and	r2, r1, #2080374784
2884:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                       (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_T
 2551              		.loc 2 2884 9 discriminator 1 view .LVU755
 2552 0122 092E     		cmp	r6, #9
 2553 0124 4FF00101 		mov	r1, #1
 2554 0128 01FA06F1 		lsl	r1, r1, r6
 2555 012c 00F2A780 		bhi	.L281
 2556              	.L280:
2885:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 2557              		.loc 2 2885 50 discriminator 10 view .LVU756
 2558 0130 1143     		orrs	r1, r1, r2
 2559 0132 002F     		cmp	r7, #0
 2560 0134 40F08D80 		bne	.L283
2885:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 2561              		.loc 2 2885 50 discriminator 11 view .LVU757
 2562 0138 9E0E     		lsrs	r6, r3, #26
ARM GAS  /tmp/ccJLHc1D.s 			page 243


 2563              	.L309:
2885:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 2564              		.loc 2 2885 50 discriminator 12 view .LVU758
 2565 013a 0136     		adds	r6, r6, #1
 2566 013c 06F01F06 		and	r6, r6, #31
 2567 0140 06EB4606 		add	r6, r6, r6, lsl #1
 2568 0144 3605     		lsls	r6, r6, #20
2884:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                       (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_T
 2569              		.loc 2 2884 9 discriminator 12 view .LVU759
 2570 0146 3143     		orrs	r1, r1, r6
 2571              	.L285:
2884:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                       (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_T
 2572              		.loc 2 2884 9 discriminator 1 view .LVU760
 2573 0148 A268     		ldr	r2, [r4, #8]
 2574 014a FFF7FEFF 		bl	LL_ADC_SetChannelSamplingTime
 2575              	.LVL174:
 2576              	.L277:
2897:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 2577              		.loc 2 2897 5 is_stmt 1 view .LVU761
2897:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 2578              		.loc 2 2897 9 is_stmt 0 view .LVU762
 2579 014e 2168     		ldr	r1, [r4]
2897:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 2580              		.loc 2 2897 8 view .LVU763
 2581 0150 914B     		ldr	r3, .L313+12
 2582 0152 1942     		tst	r1, r3
 2583 0154 40F0A680 		bne	.L288
 2584              	.LVL175:
 2585              	.L312:
2760:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 2586              		.loc 2 2760 21 discriminator 6 view .LVU764
 2587 0158 0020     		movs	r0, #0
 2588              	.LVL176:
 2589              	.L289:
2959:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 2590              		.loc 2 2959 3 is_stmt 1 view .LVU765
2959:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 2591              		.loc 2 2959 3 view .LVU766
 2592 015a 0023     		movs	r3, #0
 2593 015c 85F85830 		strb	r3, [r5, #88]
2959:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 2594              		.loc 2 2959 3 view .LVU767
2962:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
 2595              		.loc 2 2962 3 view .LVU768
 2596              	.LVL177:
 2597              	.L256:
2963:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 2598              		.loc 2 2963 1 is_stmt 0 view .LVU769
 2599 0160 03B0     		add	sp, sp, #12
 2600              	.LCFI15:
 2601              		.cfi_remember_state
 2602              		.cfi_def_cfa_offset 20
 2603              		@ sp needed
 2604 0162 F0BD     		pop	{r4, r5, r6, r7, pc}
 2605              	.LVL178:
 2606              	.L260:
 2607              	.LCFI16:
ARM GAS  /tmp/ccJLHc1D.s 			page 244


 2608              		.cfi_restore_state
2825:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 2609              		.loc 2 2825 9 is_stmt 1 view .LVU770
 2610 0164 FFF7FEFF 		bl	LL_ADC_SetChannelSamplingTime
 2611              	.LVL179:
2828:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 2612              		.loc 2 2828 9 view .LVU771
 2613 0168 2A68     		ldr	r2, [r5]
 2614              	.LVL180:
 2615              	.LBB383:
 2616              	.LBI364:
3462:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 2617              		.loc 1 3462 22 view .LVU772
 2618              	.LBB366:
3464:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2619              		.loc 1 3464 3 view .LVU773
 2620 016a 5369     		ldr	r3, [r2, #20]
 2621 016c 23F00043 		bic	r3, r3, #-2147483648
 2622 0170 84E7     		b	.L308
 2623              	.LVL181:
 2624              	.L262:
3464:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2625              		.loc 1 3464 3 is_stmt 0 view .LVU774
 2626              	.LBE366:
 2627              	.LBE383:
2852:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 2628              		.loc 2 2852 9 is_stmt 1 view .LVU775
 2629              	.LBB384:
 2630              	.LBI384:
3205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 2631              		.loc 1 3205 26 view .LVU776
 2632              	.LBB385:
3207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 2633              		.loc 1 3207 3 view .LVU777
3209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2634              		.loc 1 3209 3 view .LVU778
3209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2635              		.loc 1 3209 10 is_stmt 0 view .LVU779
 2636 0172 016E     		ldr	r1, [r0, #96]
 2637              	.LVL182:
3209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2638              		.loc 1 3209 10 view .LVU780
 2639              	.LBE385:
 2640              	.LBE384:
 2641              	.LBB386:
 2642              	.LBI386:
3205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 2643              		.loc 1 3205 26 is_stmt 1 view .LVU781
 2644              	.LBB387:
3207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 2645              		.loc 1 3207 3 view .LVU782
3209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2646              		.loc 1 3209 3 view .LVU783
3209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2647              		.loc 1 3209 10 is_stmt 0 view .LVU784
 2648 0174 016E     		ldr	r1, [r0, #96]
 2649              	.LVL183:
ARM GAS  /tmp/ccJLHc1D.s 			page 245


3209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2650              		.loc 1 3209 10 view .LVU785
 2651              	.LBE387:
 2652              	.LBE386:
2852:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 2653              		.loc 2 2852 104 view .LVU786
 2654 0176 C2F31206 		ubfx	r6, r2, #0, #19
2852:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 2655              		.loc 2 2852 12 view .LVU787
 2656 017a C1F38461 		ubfx	r1, r1, #26, #5
2852:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 2657              		.loc 2 2852 104 view .LVU788
 2658 017e 002E     		cmp	r6, #0
 2659 0180 38D1     		bne	.L264
2852:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 2660              		.loc 2 2852 104 discriminator 5 view .LVU789
 2661 0182 C2F38462 		ubfx	r2, r2, #26, #5
 2662              	.L265:
2852:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 2663              		.loc 2 2852 11 discriminator 8 view .LVU790
 2664 0186 9142     		cmp	r1, r2
2854:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
 2665              		.loc 2 2854 11 is_stmt 1 discriminator 8 view .LVU791
 2666              	.LVL184:
 2667              	.LBB388:
 2668              	.LBI388:
3264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 2669              		.loc 1 3264 22 discriminator 8 view .LVU792
 2670              	.LBB389:
3266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 2671              		.loc 1 3266 3 discriminator 8 view .LVU793
3268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN,
 2672              		.loc 1 3268 3 discriminator 8 view .LVU794
 2673 0188 02BF     		ittt	eq
 2674 018a 026E     		ldreq	r2, [r0, #96]
 2675 018c 22F00042 		biceq	r2, r2, #-2147483648
 2676 0190 0266     		streq	r2, [r0, #96]
 2677              	.LVL185:
3268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN,
 2678              		.loc 1 3268 3 is_stmt 0 discriminator 8 view .LVU795
 2679              	.LBE389:
 2680              	.LBE388:
2856:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 2681              		.loc 2 2856 9 is_stmt 1 discriminator 8 view .LVU796
 2682              	.LBB390:
 2683              	.LBI390:
3205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 2684              		.loc 1 3205 26 discriminator 8 view .LVU797
 2685              	.LBB391:
3207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 2686              		.loc 1 3207 3 discriminator 8 view .LVU798
3209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2687              		.loc 1 3209 3 discriminator 8 view .LVU799
3209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2688              		.loc 1 3209 10 is_stmt 0 discriminator 8 view .LVU800
 2689 0192 5A68     		ldr	r2, [r3, #4]
 2690              	.LVL186:
ARM GAS  /tmp/ccJLHc1D.s 			page 246


3209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2691              		.loc 1 3209 10 discriminator 8 view .LVU801
 2692              	.LBE391:
 2693              	.LBE390:
 2694              	.LBB392:
 2695              	.LBI392:
3205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 2696              		.loc 1 3205 26 is_stmt 1 discriminator 8 view .LVU802
 2697              	.LBB393:
3207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 2698              		.loc 1 3207 3 discriminator 8 view .LVU803
3209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2699              		.loc 1 3209 3 discriminator 8 view .LVU804
 2700              	.LBE393:
 2701              	.LBE392:
2856:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 2702              		.loc 2 2856 104 is_stmt 0 discriminator 8 view .LVU805
 2703 0194 2268     		ldr	r2, [r4]
 2704              	.LBB395:
 2705              	.LBB394:
3209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2706              		.loc 1 3209 10 discriminator 8 view .LVU806
 2707 0196 5968     		ldr	r1, [r3, #4]
 2708              	.LVL187:
3209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2709              		.loc 1 3209 10 discriminator 8 view .LVU807
 2710              	.LBE394:
 2711              	.LBE395:
2856:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 2712              		.loc 2 2856 104 discriminator 8 view .LVU808
 2713 0198 C2F31200 		ubfx	r0, r2, #0, #19
2856:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 2714              		.loc 2 2856 12 discriminator 8 view .LVU809
 2715 019c C1F38461 		ubfx	r1, r1, #26, #5
2856:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 2716              		.loc 2 2856 104 discriminator 8 view .LVU810
 2717 01a0 68BB     		cbnz	r0, .L267
2856:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 2718              		.loc 2 2856 104 discriminator 5 view .LVU811
 2719 01a2 C2F38462 		ubfx	r2, r2, #26, #5
 2720              	.L268:
2856:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 2721              		.loc 2 2856 11 discriminator 8 view .LVU812
 2722 01a6 9142     		cmp	r1, r2
2858:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
 2723              		.loc 2 2858 11 is_stmt 1 discriminator 8 view .LVU813
 2724              	.LVL188:
 2725              	.LBB396:
 2726              	.LBI396:
3264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 2727              		.loc 1 3264 22 discriminator 8 view .LVU814
 2728              	.LBB397:
3266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 2729              		.loc 1 3266 3 discriminator 8 view .LVU815
3268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN,
 2730              		.loc 1 3268 3 discriminator 8 view .LVU816
 2731 01a8 02BF     		ittt	eq
ARM GAS  /tmp/ccJLHc1D.s 			page 247


 2732 01aa 5A68     		ldreq	r2, [r3, #4]
 2733 01ac 22F00042 		biceq	r2, r2, #-2147483648
 2734 01b0 5A60     		streq	r2, [r3, #4]
 2735              	.LVL189:
3268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN,
 2736              		.loc 1 3268 3 is_stmt 0 discriminator 8 view .LVU817
 2737              	.LBE397:
 2738              	.LBE396:
2860:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 2739              		.loc 2 2860 9 is_stmt 1 discriminator 8 view .LVU818
 2740              	.LBB398:
 2741              	.LBI398:
3205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 2742              		.loc 1 3205 26 discriminator 8 view .LVU819
 2743              	.LBB399:
3207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 2744              		.loc 1 3207 3 discriminator 8 view .LVU820
3209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2745              		.loc 1 3209 3 discriminator 8 view .LVU821
3209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2746              		.loc 1 3209 10 is_stmt 0 discriminator 8 view .LVU822
 2747 01b2 9A68     		ldr	r2, [r3, #8]
 2748              	.LVL190:
3209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2749              		.loc 1 3209 10 discriminator 8 view .LVU823
 2750              	.LBE399:
 2751              	.LBE398:
 2752              	.LBB400:
 2753              	.LBI400:
3205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 2754              		.loc 1 3205 26 is_stmt 1 discriminator 8 view .LVU824
 2755              	.LBB401:
3207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 2756              		.loc 1 3207 3 discriminator 8 view .LVU825
3209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2757              		.loc 1 3209 3 discriminator 8 view .LVU826
 2758              	.LBE401:
 2759              	.LBE400:
2860:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 2760              		.loc 2 2860 104 is_stmt 0 discriminator 8 view .LVU827
 2761 01b4 2268     		ldr	r2, [r4]
 2762              	.LBB403:
 2763              	.LBB402:
3209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2764              		.loc 1 3209 10 discriminator 8 view .LVU828
 2765 01b6 9968     		ldr	r1, [r3, #8]
 2766              	.LVL191:
3209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2767              		.loc 1 3209 10 discriminator 8 view .LVU829
 2768              	.LBE402:
 2769              	.LBE403:
2860:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 2770              		.loc 2 2860 104 discriminator 8 view .LVU830
 2771 01b8 C2F31200 		ubfx	r0, r2, #0, #19
2860:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 2772              		.loc 2 2860 12 discriminator 8 view .LVU831
 2773 01bc C1F38461 		ubfx	r1, r1, #26, #5
ARM GAS  /tmp/ccJLHc1D.s 			page 248


2860:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 2774              		.loc 2 2860 104 discriminator 8 view .LVU832
 2775 01c0 10BB     		cbnz	r0, .L270
2860:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 2776              		.loc 2 2860 104 discriminator 5 view .LVU833
 2777 01c2 C2F38462 		ubfx	r2, r2, #26, #5
 2778              	.L271:
2860:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 2779              		.loc 2 2860 11 discriminator 8 view .LVU834
 2780 01c6 9142     		cmp	r1, r2
2862:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
 2781              		.loc 2 2862 11 is_stmt 1 discriminator 8 view .LVU835
 2782              	.LVL192:
 2783              	.LBB404:
 2784              	.LBI404:
3264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 2785              		.loc 1 3264 22 discriminator 8 view .LVU836
 2786              	.LBB405:
3266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 2787              		.loc 1 3266 3 discriminator 8 view .LVU837
3268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN,
 2788              		.loc 1 3268 3 discriminator 8 view .LVU838
 2789 01c8 02BF     		ittt	eq
 2790 01ca 9A68     		ldreq	r2, [r3, #8]
 2791 01cc 22F00042 		biceq	r2, r2, #-2147483648
 2792 01d0 9A60     		streq	r2, [r3, #8]
 2793              	.LVL193:
3268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN,
 2794              		.loc 1 3268 3 is_stmt 0 discriminator 8 view .LVU839
 2795              	.LBE405:
 2796              	.LBE404:
2864:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 2797              		.loc 2 2864 9 is_stmt 1 discriminator 8 view .LVU840
 2798              	.LBB406:
 2799              	.LBI406:
3205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 2800              		.loc 1 3205 26 discriminator 8 view .LVU841
 2801              	.LBB407:
3207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 2802              		.loc 1 3207 3 discriminator 8 view .LVU842
3209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2803              		.loc 1 3209 3 discriminator 8 view .LVU843
3209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2804              		.loc 1 3209 10 is_stmt 0 discriminator 8 view .LVU844
 2805 01d2 DA68     		ldr	r2, [r3, #12]
 2806              	.LVL194:
3209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2807              		.loc 1 3209 10 discriminator 8 view .LVU845
 2808              	.LBE407:
 2809              	.LBE406:
 2810              	.LBB408:
 2811              	.LBI408:
3205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 2812              		.loc 1 3205 26 is_stmt 1 discriminator 8 view .LVU846
 2813              	.LBB409:
3207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 2814              		.loc 1 3207 3 discriminator 8 view .LVU847
ARM GAS  /tmp/ccJLHc1D.s 			page 249


3209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2815              		.loc 1 3209 3 discriminator 8 view .LVU848
 2816              	.LBE409:
 2817              	.LBE408:
2864:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 2818              		.loc 2 2864 104 is_stmt 0 discriminator 8 view .LVU849
 2819 01d4 2268     		ldr	r2, [r4]
 2820              	.LBB411:
 2821              	.LBB410:
3209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2822              		.loc 1 3209 10 discriminator 8 view .LVU850
 2823 01d6 D968     		ldr	r1, [r3, #12]
 2824              	.LVL195:
3209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2825              		.loc 1 3209 10 discriminator 8 view .LVU851
 2826              	.LBE410:
 2827              	.LBE411:
2864:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 2828              		.loc 2 2864 104 discriminator 8 view .LVU852
 2829 01d8 C2F31200 		ubfx	r0, r2, #0, #19
2864:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 2830              		.loc 2 2864 12 discriminator 8 view .LVU853
 2831 01dc C1F38461 		ubfx	r1, r1, #26, #5
2864:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 2832              		.loc 2 2864 104 discriminator 8 view .LVU854
 2833 01e0 B8B9     		cbnz	r0, .L273
2864:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 2834              		.loc 2 2864 104 discriminator 5 view .LVU855
 2835 01e2 C2F38462 		ubfx	r2, r2, #26, #5
 2836              	.L274:
2864:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 2837              		.loc 2 2864 11 discriminator 8 view .LVU856
 2838 01e6 9142     		cmp	r1, r2
2866:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
 2839              		.loc 2 2866 11 is_stmt 1 discriminator 8 view .LVU857
 2840              	.LVL196:
 2841              	.LBB412:
 2842              	.LBI412:
3264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 2843              		.loc 1 3264 22 discriminator 8 view .LVU858
 2844              	.LBB413:
3266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 2845              		.loc 1 3266 3 discriminator 8 view .LVU859
3268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN,
 2846              		.loc 1 3268 3 discriminator 8 view .LVU860
 2847 01e8 02BF     		ittt	eq
 2848 01ea DA68     		ldreq	r2, [r3, #12]
 2849 01ec 22F00042 		biceq	r2, r2, #-2147483648
 2850 01f0 DA60     		streq	r2, [r3, #12]
3271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 2851              		.loc 1 3271 1 is_stmt 0 discriminator 8 view .LVU861
 2852 01f2 74E7     		b	.L259
 2853              	.LVL197:
 2854              	.L264:
3271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 2855              		.loc 1 3271 1 discriminator 8 view .LVU862
 2856              	.LBE413:
ARM GAS  /tmp/ccJLHc1D.s 			page 250


 2857              	.LBE412:
 2858              	.LBB414:
 2859              	.LBI414:
 2860              		.file 3 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
ARM GAS  /tmp/ccJLHc1D.s 			page 251


  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
ARM GAS  /tmp/ccJLHc1D.s 			page 252


 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 144:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 150:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 151:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 152:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 154:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 157:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 158:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 159:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 160:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 161:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 164:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/ccJLHc1D.s 			page 253


 168:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 170:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 171:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 177:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 178:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 179:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 180:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 183:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 190:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 191:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 201:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 202:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 210:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 212:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 216:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 217:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 218:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 221:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 224:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
ARM GAS  /tmp/ccJLHc1D.s 			page 254


 225:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 230:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 243:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 247:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 249:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 252:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 253:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 256:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 257:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 261:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 264:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 268:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 271:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 273:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 274:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 275:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 277:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccJLHc1D.s 			page 255


 282:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 285:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 286:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 289:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 290:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 303:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 310:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 314:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 316:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 318:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 322:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 323:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 325:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 327:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 328:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 330:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 331:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 334:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/ccJLHc1D.s 			page 256


 339:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 343:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 359:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 366:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 367:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 370:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 371:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 382:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 385:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 388:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 390:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 391:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 394:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 395:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
ARM GAS  /tmp/ccJLHc1D.s 			page 257


 396:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 400:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 406:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 407:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 412:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 413:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 415:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 418:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 420:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 421:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 422:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 424:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 425:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 426:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 427:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 428:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 429:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 432:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 433:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 434:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 435:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 436:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 438:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 439:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 440:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 442:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 446:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 447:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 448:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 450:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 451:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
ARM GAS  /tmp/ccJLHc1D.s 			page 258


 453:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 456:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 457:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 458:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 460:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 461:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 462:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 464:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 465:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 471:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 486:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 491:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 492:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 493:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 498:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 499:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 500:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 501:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 502:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 503:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 504:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 506:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 507:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 508:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 509:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccJLHc1D.s 			page 259


 510:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 511:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 513:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 518:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 520:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 521:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 522:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 537:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 540:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 541:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 542:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 544:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 548:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 552:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 554:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 557:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 558:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 560:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 564:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
ARM GAS  /tmp/ccJLHc1D.s 			page 260


 567:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 568:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 572:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 573:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 574:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 575:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 577:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 580:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 582:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 583:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 584:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 585:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 586:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 592:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 596:Drivers/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 598:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 599:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 600:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 601:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 603:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 604:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 605:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 606:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 608:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 609:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 610:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 611:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 612:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 615:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 616:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 621:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 622:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccJLHc1D.s 			page 261


 624:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 625:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 626:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 627:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 628:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 630:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 631:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 633:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 634:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 636:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 637:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 638:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 639:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 641:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 644:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 647:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 648:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 649:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 650:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 652:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 654:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 655:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 661:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 663:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 665:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 666:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 669:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 671:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 672:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 673:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 675:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/ccJLHc1D.s 			page 262


 681:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 682:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 683:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 684:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 689:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 690:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 693:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 695:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 696:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 698:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 699:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 700:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 702:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 703:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 704:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 708:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 711:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 712:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 713:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 714:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 715:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 716:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 721:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 723:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 724:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 726:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 727:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 731:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 732:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 734:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 735:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 736:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 737:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
ARM GAS  /tmp/ccJLHc1D.s 			page 263


 738:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 742:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 746:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 749:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 751:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 752:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 755:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 757:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 759:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 760:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 761:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 762:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 763:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 765:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 766:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 767:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 769:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 772:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 775:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 778:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 781:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 787:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
ARM GAS  /tmp/ccJLHc1D.s 			page 264


 795:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 796:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 797:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 799:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 800:Drivers/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 803:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 804:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 806:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 809:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 814:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 817:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 818:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 820:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 826:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 827:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 828:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 829:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 830:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 834:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 835:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 838:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 842:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 845:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 846:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 849:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccJLHc1D.s 			page 265


 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 853:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 857:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 860:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 861:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 864:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 865:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 869:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 870:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 871:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 872:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 873:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 874:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 876:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 878:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 879:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 883:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 888:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 889:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 890:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 892:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 896:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 897:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 898:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 899:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 900:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 901:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 902:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 904:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 906:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 907:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 908:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
ARM GAS  /tmp/ccJLHc1D.s 			page 266


 909:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 911:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 912:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 914:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 915:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 916:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 919:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 920:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 922:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 924:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 926:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 930:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 931:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 932:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 937:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 939:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 940:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 945:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 946:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 947:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 949:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 950:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 952:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 953:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 960:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 961:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 962:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 963:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 964:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 965:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/ccJLHc1D.s 			page 267


 966:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 967:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 968:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 969:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 970:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 971:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 972:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 973:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 974:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 975:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 976:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 977:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 978:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 979:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 980:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 981:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 2861              		.loc 3 981 31 is_stmt 1 discriminator 6 view .LVU863
 2862              	.LBB415:
 982:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 983:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 2863              		.loc 3 983 3 discriminator 6 view .LVU864
 984:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 985:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 986:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 987:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 988:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 2864              		.loc 3 988 4 discriminator 6 view .LVU865
 2865              		.syntax unified
 2866              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2867 01f4 92FAA2F2 		rbit r2, r2
 2868              	@ 0 "" 2
 2869              	.LVL198:
 989:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 990:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 991:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 992:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 993:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 994:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 995:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 996:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 997:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 998:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 999:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
1000:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1001:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 2870              		.loc 3 1001 3 discriminator 6 view .LVU866
 2871              		.loc 3 1001 3 is_stmt 0 discriminator 6 view .LVU867
 2872              		.thumb
 2873              		.syntax unified
 2874              	.LBE415:
 2875              	.LBE414:
2852:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 2876              		.loc 2 2852 104 discriminator 6 view .LVU868
 2877 01f8 B2FA82F2 		clz	r2, r2
 2878 01fc C3E7     		b	.L265
 2879              	.L267:
 2880              	.LVL199:
ARM GAS  /tmp/ccJLHc1D.s 			page 268


 2881              	.LBB416:
 2882              	.LBI416:
 981:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2883              		.loc 3 981 31 is_stmt 1 discriminator 6 view .LVU869
 2884              	.LBB417:
 983:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2885              		.loc 3 983 3 discriminator 6 view .LVU870
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2886              		.loc 3 988 4 discriminator 6 view .LVU871
 2887              		.syntax unified
 2888              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2889 01fe 92FAA2F2 		rbit r2, r2
 2890              	@ 0 "" 2
 2891              	.LVL200:
 2892              		.loc 3 1001 3 discriminator 6 view .LVU872
 2893              		.loc 3 1001 3 is_stmt 0 discriminator 6 view .LVU873
 2894              		.thumb
 2895              		.syntax unified
 2896              	.LBE417:
 2897              	.LBE416:
2856:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 2898              		.loc 2 2856 104 discriminator 6 view .LVU874
 2899 0202 B2FA82F2 		clz	r2, r2
 2900 0206 CEE7     		b	.L268
 2901              	.L270:
 2902              	.LVL201:
 2903              	.LBB418:
 2904              	.LBI418:
 981:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2905              		.loc 3 981 31 is_stmt 1 discriminator 6 view .LVU875
 2906              	.LBB419:
 983:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2907              		.loc 3 983 3 discriminator 6 view .LVU876
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2908              		.loc 3 988 4 discriminator 6 view .LVU877
 2909              		.syntax unified
 2910              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2911 0208 92FAA2F2 		rbit r2, r2
 2912              	@ 0 "" 2
 2913              	.LVL202:
 2914              		.loc 3 1001 3 discriminator 6 view .LVU878
 2915              		.loc 3 1001 3 is_stmt 0 discriminator 6 view .LVU879
 2916              		.thumb
 2917              		.syntax unified
 2918              	.LBE419:
 2919              	.LBE418:
2860:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 2920              		.loc 2 2860 104 discriminator 6 view .LVU880
 2921 020c B2FA82F2 		clz	r2, r2
 2922 0210 D9E7     		b	.L271
 2923              	.L273:
 2924              	.LVL203:
 2925              	.LBB420:
 2926              	.LBI420:
 981:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2927              		.loc 3 981 31 is_stmt 1 discriminator 6 view .LVU881
 2928              	.LBB421:
ARM GAS  /tmp/ccJLHc1D.s 			page 269


 983:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2929              		.loc 3 983 3 discriminator 6 view .LVU882
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2930              		.loc 3 988 4 discriminator 6 view .LVU883
 2931              		.syntax unified
 2932              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2933 0212 92FAA2F2 		rbit r2, r2
 2934              	@ 0 "" 2
 2935              	.LVL204:
 2936              		.loc 3 1001 3 discriminator 6 view .LVU884
 2937              		.loc 3 1001 3 is_stmt 0 discriminator 6 view .LVU885
 2938              		.thumb
 2939              		.syntax unified
 2940              	.LBE421:
 2941              	.LBE420:
2864:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 2942              		.loc 2 2864 104 discriminator 6 view .LVU886
 2943 0216 B2FA82F2 		clz	r2, r2
 2944 021a E4E7     		b	.L274
 2945              	.LVL205:
 2946              	.L279:
 2947              	.LBB422:
 2948              	.LBI422:
 981:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2949              		.loc 3 981 31 is_stmt 1 discriminator 2 view .LVU887
 2950              	.LBB423:
 983:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2951              		.loc 3 983 3 discriminator 2 view .LVU888
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2952              		.loc 3 988 4 discriminator 2 view .LVU889
 2953              		.syntax unified
 2954              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2955 021c 93FAA3F2 		rbit r2, r3
 2956              	@ 0 "" 2
 2957              	.LVL206:
 2958              		.loc 3 1001 3 discriminator 2 view .LVU890
 2959              		.loc 3 1001 3 is_stmt 0 discriminator 2 view .LVU891
 2960              		.thumb
 2961              		.syntax unified
 2962              	.LBE423:
 2963              	.LBE422:
2885:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 2964              		.loc 2 2885 50 discriminator 2 view .LVU892
 2965 0220 B2FA82F2 		clz	r2, r2
 2966 0224 0132     		adds	r2, r2, #1
 2967 0226 02F01F02 		and	r2, r2, #31
2884:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                       (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_T
 2968              		.loc 2 2884 9 discriminator 2 view .LVU893
 2969 022a 092A     		cmp	r2, #9
 2970 022c 16D8     		bhi	.L282
 2971              	.LVL207:
 2972              	.LBB424:
 2973              	.LBI424:
 981:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2974              		.loc 3 981 31 is_stmt 1 discriminator 4 view .LVU894
 2975              	.LBB425:
 983:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccJLHc1D.s 			page 270


 2976              		.loc 3 983 3 discriminator 4 view .LVU895
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2977              		.loc 3 988 4 discriminator 4 view .LVU896
 2978              		.syntax unified
 2979              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2980 022e 93FAA3F1 		rbit r1, r3
 2981              	@ 0 "" 2
 2982              	.LVL208:
 2983              		.loc 3 1001 3 discriminator 4 view .LVU897
 2984              		.loc 3 1001 3 is_stmt 0 discriminator 4 view .LVU898
 2985              		.thumb
 2986              		.syntax unified
 2987              	.LBE425:
 2988              	.LBE424:
2885:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 2989              		.loc 2 2885 50 discriminator 4 view .LVU899
 2990 0232 B1FA81F1 		clz	r1, r1
 2991 0236 0131     		adds	r1, r1, #1
 2992 0238 8906     		lsls	r1, r1, #26
 2993 023a 01F0F842 		and	r2, r1, #2080374784
 2994              	.LVL209:
 2995              	.LBB426:
 2996              	.LBI426:
 981:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2997              		.loc 3 981 31 is_stmt 1 discriminator 4 view .LVU900
 2998              	.LBB427:
 983:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2999              		.loc 3 983 3 discriminator 4 view .LVU901
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3000              		.loc 3 988 4 discriminator 4 view .LVU902
 3001              		.syntax unified
 3002              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3003 023e 93FAA3F1 		rbit r1, r3
 3004              	@ 0 "" 2
 3005              	.LVL210:
 3006              		.loc 3 1001 3 discriminator 4 view .LVU903
 3007              		.loc 3 1001 3 is_stmt 0 discriminator 4 view .LVU904
 3008              		.thumb
 3009              		.syntax unified
 3010              	.LBE427:
 3011              	.LBE426:
2885:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 3012              		.loc 2 2885 50 discriminator 4 view .LVU905
 3013 0242 B1FA81F1 		clz	r1, r1
 3014 0246 0131     		adds	r1, r1, #1
 3015 0248 01F01F06 		and	r6, r1, #31
 3016 024c 0121     		movs	r1, #1
 3017 024e B140     		lsls	r1, r1, r6
 3018 0250 6EE7     		b	.L280
 3019              	.L283:
 3020              	.LVL211:
 3021              	.LBB428:
 3022              	.LBI428:
 981:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3023              		.loc 3 981 31 is_stmt 1 discriminator 12 view .LVU906
 3024              	.LBB429:
 983:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccJLHc1D.s 			page 271


 3025              		.loc 3 983 3 discriminator 12 view .LVU907
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3026              		.loc 3 988 4 discriminator 12 view .LVU908
 3027              		.syntax unified
 3028              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3029 0252 93FAA3F6 		rbit r6, r3
 3030              	@ 0 "" 2
 3031              	.LVL212:
 3032              		.loc 3 1001 3 discriminator 12 view .LVU909
 3033              		.loc 3 1001 3 is_stmt 0 discriminator 12 view .LVU910
 3034              		.thumb
 3035              		.syntax unified
 3036              	.LBE429:
 3037              	.LBE428:
2885:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 3038              		.loc 2 2885 50 discriminator 12 view .LVU911
 3039 0256 B6FA86F6 		clz	r6, r6
 3040 025a 6EE7     		b	.L309
 3041              	.L282:
 3042              	.LVL213:
 3043              	.LBB430:
 3044              	.LBI430:
 981:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3045              		.loc 3 981 31 is_stmt 1 discriminator 14 view .LVU912
 3046              	.LBB431:
 983:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 3047              		.loc 3 983 3 discriminator 14 view .LVU913
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3048              		.loc 3 988 4 discriminator 14 view .LVU914
 3049              		.syntax unified
 3050              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3051 025c 93FAA3F1 		rbit r1, r3
 3052              	@ 0 "" 2
 3053              	.LVL214:
 3054              		.loc 3 1001 3 discriminator 14 view .LVU915
 3055              		.loc 3 1001 3 is_stmt 0 discriminator 14 view .LVU916
 3056              		.thumb
 3057              		.syntax unified
 3058              	.LBE431:
 3059              	.LBE430:
2885:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 3060              		.loc 2 2885 50 discriminator 14 view .LVU917
 3061 0260 B1FA81F1 		clz	r1, r1
 3062 0264 0131     		adds	r1, r1, #1
 3063 0266 8906     		lsls	r1, r1, #26
 3064 0268 01F0F842 		and	r2, r1, #2080374784
 3065              	.LVL215:
 3066              	.LBB432:
 3067              	.LBI432:
 981:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3068              		.loc 3 981 31 is_stmt 1 discriminator 14 view .LVU918
 3069              	.LBB433:
 983:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 3070              		.loc 3 983 3 discriminator 14 view .LVU919
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3071              		.loc 3 988 4 discriminator 14 view .LVU920
 3072              		.syntax unified
ARM GAS  /tmp/ccJLHc1D.s 			page 272


 3073              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3074 026c 93FAA3F1 		rbit r1, r3
 3075              	@ 0 "" 2
 3076              	.LVL216:
 3077              		.loc 3 1001 3 discriminator 14 view .LVU921
 3078              		.loc 3 1001 3 is_stmt 0 discriminator 14 view .LVU922
 3079              		.thumb
 3080              		.syntax unified
 3081              	.LBE433:
 3082              	.LBE432:
2885:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 3083              		.loc 2 2885 50 discriminator 14 view .LVU923
 3084 0270 B1FA81F1 		clz	r1, r1
 3085 0274 0131     		adds	r1, r1, #1
 3086 0276 01F01F06 		and	r6, r1, #31
 3087 027a 0121     		movs	r1, #1
 3088 027c B140     		lsls	r1, r1, r6
 3089              	.L281:
2885:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 3090              		.loc 2 2885 50 discriminator 20 view .LVU924
 3091 027e 1143     		orrs	r1, r1, r2
 3092 0280 5FB9     		cbnz	r7, .L286
2885:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 3093              		.loc 2 2885 50 discriminator 21 view .LVU925
 3094 0282 9A0E     		lsrs	r2, r3, #26
 3095              	.L310:
2885:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 3096              		.loc 2 2885 50 discriminator 22 view .LVU926
 3097 0284 0132     		adds	r2, r2, #1
 3098 0286 02F01F02 		and	r2, r2, #31
 3099 028a 02EB4203 		add	r3, r2, r2, lsl #1
 3100 028e 1E3B     		subs	r3, r3, #30
 3101 0290 1B05     		lsls	r3, r3, #20
 3102 0292 43F00073 		orr	r3, r3, #33554432
2884:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                       (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_T
 3103              		.loc 2 2884 9 discriminator 22 view .LVU927
 3104 0296 1943     		orrs	r1, r1, r3
 3105 0298 56E7     		b	.L285
 3106              	.L286:
 3107              	.LVL217:
 3108              	.LBB434:
 3109              	.LBI434:
 981:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3110              		.loc 3 981 31 is_stmt 1 discriminator 22 view .LVU928
 3111              	.LBB435:
 983:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 3112              		.loc 3 983 3 discriminator 22 view .LVU929
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3113              		.loc 3 988 4 discriminator 22 view .LVU930
 3114              		.syntax unified
 3115              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3116 029a 93FAA3F2 		rbit r2, r3
 3117              	@ 0 "" 2
 3118              	.LVL218:
 3119              		.loc 3 1001 3 discriminator 22 view .LVU931
 3120              		.loc 3 1001 3 is_stmt 0 discriminator 22 view .LVU932
 3121              		.thumb
ARM GAS  /tmp/ccJLHc1D.s 			page 273


 3122              		.syntax unified
 3123              	.LBE435:
 3124              	.LBE434:
2885:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 3125              		.loc 2 2885 50 discriminator 22 view .LVU933
 3126 029e B2FA82F2 		clz	r2, r2
 3127 02a2 EFE7     		b	.L310
 3128              	.L288:
2899:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 3129              		.loc 2 2899 7 is_stmt 1 view .LVU934
2899:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 3130              		.loc 2 2899 68 is_stmt 0 view .LVU935
 3131 02a4 2B68     		ldr	r3, [r5]
2899:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 3132              		.loc 2 2899 37 view .LVU936
 3133 02a6 B3F1A04F 		cmp	r3, #1342177280
 3134 02aa 2ED0     		beq	.L302
2899:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 3135              		.loc 2 2899 37 discriminator 2 view .LVU937
 3136 02ac 3B4C     		ldr	r4, .L313+16
 3137              	.LVL219:
2899:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 3138              		.loc 2 2899 37 discriminator 2 view .LVU938
 3139 02ae 3C4A     		ldr	r2, .L313+20
 3140 02b0 3C48     		ldr	r0, .L313+24
 3141 02b2 A342     		cmp	r3, r4
 3142 02b4 18BF     		it	ne
 3143 02b6 0246     		movne	r2, r0
 3144              	.L290:
 3145              	.LVL220:
 3146              	.LBB436:
 3147              	.LBI436:
2787:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 3148              		.loc 1 2787 26 is_stmt 1 discriminator 6 view .LVU939
 3149              	.LBB437:
2789:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 3150              		.loc 1 2789 3 discriminator 6 view .LVU940
2789:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 3151              		.loc 1 2789 21 is_stmt 0 discriminator 6 view .LVU941
 3152 02b8 9068     		ldr	r0, [r2, #8]
 3153              	.LBE437:
 3154              	.LBE436:
2903:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_TEMPSENSOR) == 0UL))
 3155              		.loc 2 2903 10 discriminator 6 view .LVU942
 3156 02ba 3B4A     		ldr	r2, .L313+28
 3157              	.LVL221:
2903:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_TEMPSENSOR) == 0UL))
 3158              		.loc 2 2903 10 discriminator 6 view .LVU943
 3159 02bc 9142     		cmp	r1, r2
 3160              	.LBB439:
 3161              	.LBB438:
2789:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 3162              		.loc 1 2789 10 discriminator 6 view .LVU944
 3163 02be 00F0E074 		and	r4, r0, #29360128
 3164              	.LVL222:
2789:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 3165              		.loc 1 2789 10 discriminator 6 view .LVU945
ARM GAS  /tmp/ccJLHc1D.s 			page 274


 3166              	.LBE438:
 3167              	.LBE439:
2903:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_TEMPSENSOR) == 0UL))
 3168              		.loc 2 2903 7 is_stmt 1 discriminator 6 view .LVU946
2903:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_TEMPSENSOR) == 0UL))
 3169              		.loc 2 2903 10 is_stmt 0 discriminator 6 view .LVU947
 3170 02c2 02D0     		beq	.L291
2903:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_TEMPSENSOR) == 0UL))
 3171              		.loc 2 2903 62 discriminator 1 view .LVU948
 3172 02c4 394A     		ldr	r2, .L313+32
 3173 02c6 9142     		cmp	r1, r2
 3174 02c8 23D1     		bne	.L292
 3175              	.L291:
2904:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 3176              		.loc 2 2904 11 view .LVU949
 3177 02ca 0602     		lsls	r6, r0, #8
 3178 02cc 21D4     		bmi	.L292
2906:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 3179              		.loc 2 2906 9 is_stmt 1 view .LVU950
2906:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 3180              		.loc 2 2906 12 is_stmt 0 view .LVU951
 3181 02ce B3F1A04F 		cmp	r3, #1342177280
 3182 02d2 1CD0     		beq	.L304
2906:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 3183              		.loc 2 2906 13 discriminator 1 view .LVU952
 3184 02d4 364A     		ldr	r2, .L313+36
 3185 02d6 9342     		cmp	r3, r2
 3186 02d8 7FF43EAF 		bne	.L312
2908:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                          LL_ADC_PATH_INTERNAL_TEMPSENSOR | tmp_config_internal_chan
 3187              		.loc 2 2908 11 view .LVU953
 3188 02dc 314B     		ldr	r3, .L313+24
 3189              	.L293:
 3190              	.LVL223:
 3191              	.LBB440:
 3192              	.LBI440:
2765:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 3193              		.loc 1 2765 22 is_stmt 1 discriminator 6 view .LVU954
 3194              	.LBB441:
2767:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 3195              		.loc 1 2767 3 discriminator 6 view .LVU955
 3196 02de 9A68     		ldr	r2, [r3, #8]
 3197 02e0 22F0E072 		bic	r2, r2, #29360128
 3198 02e4 2243     		orrs	r2, r2, r4
 3199 02e6 42F40002 		orr	r2, r2, #8388608
 3200 02ea 9A60     		str	r2, [r3, #8]
 3201              	.LVL224:
2767:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 3202              		.loc 1 2767 3 is_stmt 0 discriminator 6 view .LVU956
 3203              	.LBE441:
 3204              	.LBE440:
2916:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           while (wait_loop_index != 0UL)
 3205              		.loc 2 2916 11 is_stmt 1 discriminator 6 view .LVU957
2916:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           while (wait_loop_index != 0UL)
 3206              		.loc 2 2916 90 is_stmt 0 discriminator 6 view .LVU958
 3207 02ec 314B     		ldr	r3, .L313+40
 3208 02ee 324A     		ldr	r2, .L313+44
 3209 02f0 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccJLHc1D.s 			page 275


 3210 02f2 B3FBF2F2 		udiv	r2, r3, r2
2916:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           while (wait_loop_index != 0UL)
 3211              		.loc 2 2916 71 discriminator 6 view .LVU959
 3212 02f6 0C23     		movs	r3, #12
 3213 02f8 5343     		muls	r3, r2, r3
 3214              	.L311:
2919:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           }
 3215              		.loc 2 2919 28 view .LVU960
 3216 02fa 0193     		str	r3, [sp, #4]
2917:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           {
 3217              		.loc 2 2917 17 is_stmt 1 view .LVU961
2917:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           {
 3218              		.loc 2 2917 34 is_stmt 0 view .LVU962
 3219 02fc 019B     		ldr	r3, [sp, #4]
2917:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           {
 3220              		.loc 2 2917 17 view .LVU963
 3221 02fe 002B     		cmp	r3, #0
 3222 0300 3FF42AAF 		beq	.L312
2919:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           }
 3223              		.loc 2 2919 13 is_stmt 1 view .LVU964
2919:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           }
 3224              		.loc 2 2919 28 is_stmt 0 view .LVU965
 3225 0304 019B     		ldr	r3, [sp, #4]
 3226 0306 013B     		subs	r3, r3, #1
 3227 0308 F7E7     		b	.L311
 3228              	.LVL225:
 3229              	.L302:
2899:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 3230              		.loc 2 2899 37 view .LVU966
 3231 030a 254A     		ldr	r2, .L313+20
 3232 030c D4E7     		b	.L290
 3233              	.LVL226:
 3234              	.L304:
2908:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                          LL_ADC_PATH_INTERNAL_TEMPSENSOR | tmp_config_internal_chan
 3235              		.loc 2 2908 11 view .LVU967
 3236 030e 244B     		ldr	r3, .L313+20
 3237 0310 E5E7     		b	.L293
 3238              	.L292:
2923:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 3239              		.loc 2 2923 12 is_stmt 1 view .LVU968
2923:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 3240              		.loc 2 2923 15 is_stmt 0 view .LVU969
 3241 0312 2A4A     		ldr	r2, .L313+48
 3242 0314 9142     		cmp	r1, r2
 3243 0316 16D1     		bne	.L297
2923:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 3244              		.loc 2 2923 55 discriminator 1 view .LVU970
 3245 0318 C201     		lsls	r2, r0, #7
 3246 031a 3FF51DAF 		bmi	.L312
2925:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 3247              		.loc 2 2925 9 is_stmt 1 view .LVU971
2927:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                          LL_ADC_PATH_INTERNAL_VBAT | tmp_config_internal_channel);
 3248              		.loc 2 2927 11 view .LVU972
 3249 031e B3F1A04F 		cmp	r3, #1342177280
 3250 0322 0ED0     		beq	.L305
2927:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                          LL_ADC_PATH_INTERNAL_VBAT | tmp_config_internal_channel);
 3251              		.loc 2 2927 11 is_stmt 0 discriminator 2 view .LVU973
ARM GAS  /tmp/ccJLHc1D.s 			page 276


 3252 0324 1D48     		ldr	r0, .L313+16
 3253 0326 1E49     		ldr	r1, .L313+20
 3254 0328 1E4A     		ldr	r2, .L313+24
 3255 032a 8342     		cmp	r3, r0
 3256 032c 0CBF     		ite	eq
 3257 032e 0B46     		moveq	r3, r1
 3258 0330 1346     		movne	r3, r2
 3259              	.L298:
 3260              	.LVL227:
 3261              	.LBB442:
 3262              	.LBI442:
2765:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 3263              		.loc 1 2765 22 is_stmt 1 discriminator 6 view .LVU974
 3264              	.LBB443:
2767:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 3265              		.loc 1 2767 3 discriminator 6 view .LVU975
 3266 0332 9A68     		ldr	r2, [r3, #8]
 3267 0334 22F0E072 		bic	r2, r2, #29360128
 3268 0338 2243     		orrs	r2, r2, r4
 3269 033a 42F08072 		orr	r2, r2, #16777216
 3270 033e 9A60     		str	r2, [r3, #8]
 3271 0340 0AE7     		b	.L312
 3272              	.LVL228:
 3273              	.L305:
2767:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 3274              		.loc 1 2767 3 is_stmt 0 discriminator 6 view .LVU976
 3275              	.LBE443:
 3276              	.LBE442:
2927:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                          LL_ADC_PATH_INTERNAL_VBAT | tmp_config_internal_channel);
 3277              		.loc 2 2927 11 view .LVU977
 3278 0342 174B     		ldr	r3, .L313+20
 3279 0344 F5E7     		b	.L298
 3280              	.L297:
2931:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_VREFINT) == 0UL))
 3281              		.loc 2 2931 12 is_stmt 1 view .LVU978
2931:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_VREFINT) == 0UL))
 3282              		.loc 2 2931 15 is_stmt 0 view .LVU979
 3283 0346 1E4A     		ldr	r2, .L313+52
 3284 0348 9142     		cmp	r1, r2
 3285 034a 7FF405AF 		bne	.L312
2932:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 3286              		.loc 2 2932 16 view .LVU980
 3287 034e 10F48000 		ands	r0, r0, #4194304
 3288 0352 7FF401AF 		bne	.L312
2934:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 3289              		.loc 2 2934 9 is_stmt 1 view .LVU981
2934:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 3290              		.loc 2 2934 12 is_stmt 0 view .LVU982
 3291 0356 114A     		ldr	r2, .L313+16
 3292 0358 9342     		cmp	r3, r2
 3293 035a 3FF4FDAE 		beq	.L312
2936:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                          LL_ADC_PATH_INTERNAL_VREFINT | tmp_config_internal_channel
 3294              		.loc 2 2936 11 is_stmt 1 view .LVU983
 3295 035e 1149     		ldr	r1, .L313+24
 3296 0360 02F50072 		add	r2, r2, #512
 3297 0364 B3F1A04F 		cmp	r3, #1342177280
 3298 0368 0CBF     		ite	eq
ARM GAS  /tmp/ccJLHc1D.s 			page 277


 3299 036a 1346     		moveq	r3, r2
 3300 036c 0B46     		movne	r3, r1
 3301              	.LVL229:
 3302              	.LBB444:
 3303              	.LBI444:
2765:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 3304              		.loc 1 2765 22 view .LVU984
 3305              	.LBB445:
2767:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 3306              		.loc 1 2767 3 view .LVU985
 3307 036e 9A68     		ldr	r2, [r3, #8]
 3308 0370 22F0E072 		bic	r2, r2, #29360128
 3309 0374 2243     		orrs	r2, r2, r4
 3310 0376 42F48002 		orr	r2, r2, #4194304
 3311 037a 9A60     		str	r2, [r3, #8]
2768:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 3312              		.loc 1 2768 1 is_stmt 0 view .LVU986
 3313 037c EDE6     		b	.L289
 3314              	.LVL230:
 3315              	.L257:
2768:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 3316              		.loc 1 2768 1 view .LVU987
 3317              	.LBE445:
 3318              	.LBE444:
2953:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 3319              		.loc 2 2953 5 is_stmt 1 view .LVU988
 3320 037e EA6D     		ldr	r2, [r5, #92]
 3321 0380 42F02002 		orr	r2, r2, #32
 3322 0384 EA65     		str	r2, [r5, #92]
2955:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 3323              		.loc 2 2955 5 view .LVU989
 3324              	.LVL231:
2955:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 3325              		.loc 2 2955 20 is_stmt 0 view .LVU990
 3326 0386 1846     		mov	r0, r3
 3327 0388 E7E6     		b	.L289
 3328              	.L314:
 3329 038a 00BF     		.align	2
 3330              	.L313:
 3331 038c 00F0FF03 		.word	67104768
 3332 0390 FFFF0700 		.word	524287
 3333 0394 00007F40 		.word	1082064896
 3334 0398 00000880 		.word	-2146959360
 3335 039c 00010050 		.word	1342177536
 3336 03a0 00030050 		.word	1342178048
 3337 03a4 00070050 		.word	1342179072
 3338 03a8 000021C3 		.word	-1021247488
 3339 03ac 1000C090 		.word	-1866465264
 3340 03b0 00060050 		.word	1342178816
 3341 03b4 00000000 		.word	SystemCoreClock
 3342 03b8 400D0300 		.word	200000
 3343 03bc 000052C7 		.word	-950927360
 3344 03c0 000084CB 		.word	-880541696
 3345              	.LVL232:
 3346              	.L300:
2790:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 3347              		.loc 2 2790 3 view .LVU991
ARM GAS  /tmp/ccJLHc1D.s 			page 278


 3348 03c4 0220     		movs	r0, #2
 3349              	.LVL233:
2790:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 3350              		.loc 2 2790 3 view .LVU992
 3351 03c6 CBE6     		b	.L256
 3352              		.cfi_endproc
 3353              	.LFE377:
 3355              		.section	.text.HAL_ADC_AnalogWDGConfig,"ax",%progbits
 3356              		.align	1
 3357              		.global	HAL_ADC_AnalogWDGConfig
 3358              		.syntax unified
 3359              		.thumb
 3360              		.thumb_func
 3361              		.fpu fpv4-sp-d16
 3363              	HAL_ADC_AnalogWDGConfig:
 3364              	.LVL234:
 3365              	.LFB378:
2988:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 3366              		.loc 2 2988 1 is_stmt 1 view -0
 3367              		.cfi_startproc
 3368              		@ args = 0, pretend = 0, frame = 0
 3369              		@ frame_needed = 0, uses_anonymous_args = 0
2989:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmpAWDHighThresholdShifted;
 3370              		.loc 2 2989 3 view .LVU994
2990:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmpAWDLowThresholdShifted;
 3371              		.loc 2 2990 3 view .LVU995
2991:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
 3372              		.loc 2 2991 3 view .LVU996
2992:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
 3373              		.loc 2 2992 3 view .LVU997
2993:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 3374              		.loc 2 2993 3 view .LVU998
2996:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_NUMBER(AnalogWDGConfig->WatchdogNumber));
 3375              		.loc 2 2996 3 view .LVU999
2997:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_MODE(AnalogWDGConfig->WatchdogMode));
 3376              		.loc 2 2997 3 view .LVU1000
2998:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_FILTERING_MODE(AnalogWDGConfig->FilteringConfig));
 3377              		.loc 2 2998 3 view .LVU1001
2999:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(AnalogWDGConfig->ITMode));
 3378              		.loc 2 2999 3 view .LVU1002
3000:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 3379              		.loc 2 3000 3 view .LVU1003
3002:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_INJEC)   ||
 3380              		.loc 2 3002 3 view .LVU1004
3006:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 3381              		.loc 2 3006 5 view .LVU1005
3010:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 3382              		.loc 2 3010 3 view .LVU1006
3021:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), AnalogWDGConfig->LowThreshold));
 3383              		.loc 2 3021 5 view .LVU1007
3022:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 3384              		.loc 2 3022 5 view .LVU1008
3026:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 3385              		.loc 2 3026 3 view .LVU1009
3026:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 3386              		.loc 2 3026 3 view .LVU1010
2988:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
ARM GAS  /tmp/ccJLHc1D.s 			page 279


 3387              		.loc 2 2988 1 is_stmt 0 view .LVU1011
 3388 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3389              	.LCFI17:
 3390              		.cfi_def_cfa_offset 24
 3391              		.cfi_offset 3, -24
 3392              		.cfi_offset 4, -20
 3393              		.cfi_offset 5, -16
 3394              		.cfi_offset 6, -12
 3395              		.cfi_offset 7, -8
 3396              		.cfi_offset 14, -4
3026:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 3397              		.loc 2 3026 3 view .LVU1012
 3398 0002 90F85830 		ldrb	r3, [r0, #88]	@ zero_extendqisi2
 3399 0006 012B     		cmp	r3, #1
2988:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 3400              		.loc 2 2988 1 view .LVU1013
 3401 0008 0446     		mov	r4, r0
 3402 000a 0D46     		mov	r5, r1
3026:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 3403              		.loc 2 3026 3 view .LVU1014
 3404 000c 00F00381 		beq	.L348
3026:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 3405              		.loc 2 3026 3 is_stmt 1 discriminator 2 view .LVU1015
 3406 0010 0123     		movs	r3, #1
 3407 0012 80F85830 		strb	r3, [r0, #88]
3026:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 3408              		.loc 2 3026 3 discriminator 2 view .LVU1016
3032:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 3409              		.loc 2 3032 3 discriminator 2 view .LVU1017
3032:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 3410              		.loc 2 3032 44 is_stmt 0 discriminator 2 view .LVU1018
 3411 0016 0068     		ldr	r0, [r0]
 3412              	.LVL235:
3032:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 3413              		.loc 2 3032 44 discriminator 2 view .LVU1019
 3414 0018 FFF7FEFF 		bl	LL_ADC_REG_IsConversionOngoing
 3415              	.LVL236:
 3416 001c 0246     		mov	r2, r0
 3417              	.LVL237:
3033:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if ((tmp_adc_is_conversion_on_going_regular == 0UL)
 3418              		.loc 2 3033 3 is_stmt 1 discriminator 2 view .LVU1020
3033:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if ((tmp_adc_is_conversion_on_going_regular == 0UL)
 3419              		.loc 2 3033 45 is_stmt 0 discriminator 2 view .LVU1021
 3420 001e 2068     		ldr	r0, [r4]
 3421              	.LVL238:
 3422              	.LBB472:
 3423              	.LBI472:
6968:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 3424              		.loc 1 6968 26 is_stmt 1 discriminator 2 view .LVU1022
 3425              	.LBB473:
 3426              		.loc 1 6970 3 discriminator 2 view .LVU1023
 3427              		.loc 1 6970 12 is_stmt 0 discriminator 2 view .LVU1024
 3428 0020 8368     		ldr	r3, [r0, #8]
 3429 0022 03F00803 		and	r3, r3, #8
 3430              		.loc 1 6970 76 discriminator 2 view .LVU1025
 3431 0026 1343     		orrs	r3, r3, r2
 3432 0028 3DD1     		bne	.L317
ARM GAS  /tmp/ccJLHc1D.s 			page 280


 3433              	.LVL239:
 3434              		.loc 1 6970 76 discriminator 2 view .LVU1026
 3435              	.LBE473:
 3436              	.LBE472:
3034:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       && (tmp_adc_is_conversion_on_going_injected == 0UL)
 3437              		.loc 2 3034 3 is_stmt 1 view .LVU1027
3039:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 3438              		.loc 2 3039 5 view .LVU1028
 3439 002a D1E90013 		ldrd	r1, r3, [r1]
 3440              	.LVL240:
3039:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 3441              		.loc 2 3039 8 is_stmt 0 view .LVU1029
 3442 002e 7B4A     		ldr	r2, .L369
 3443              	.LVL241:
3039:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 3444              		.loc 2 3039 8 view .LVU1030
 3445 0030 9142     		cmp	r1, r2
 3446 0032 65D1     		bne	.L318
3044:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 3447              		.loc 2 3044 7 is_stmt 1 view .LVU1031
 3448 0034 B3F1A07F 		cmp	r3, #20971520
 3449 0038 56D0     		beq	.L319
 3450 003a 0BD8     		bhi	.L320
 3451 003c B3F5400F 		cmp	r3, #12582912
 3452 0040 14D0     		beq	.L321
 3453 0042 B3F1807F 		cmp	r3, #16777216
 3454 0046 57D0     		beq	.L322
 3455 0048 B3F5000F 		cmp	r3, #8388608
 3456 004c 52D0     		beq	.L323
 3457              	.L324:
3074:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           break;
 3458              		.loc 2 3074 11 view .LVU1032
 3459 004e 7349     		ldr	r1, .L369
 3460 0050 0022     		movs	r2, #0
 3461 0052 10E0     		b	.L364
 3462              	.L320:
3044:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 3463              		.loc 2 3044 7 is_stmt 0 view .LVU1033
 3464 0054 B3F1C07F 		cmp	r3, #25165824
 3465 0058 50D0     		beq	.L325
 3466 005a B3F1E07F 		cmp	r3, #29360128
 3467 005e F6D1     		bne	.L324
3057:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                           LL_ADC_GROUP_REGULAR_INJECTED));
 3468              		.loc 2 3057 11 is_stmt 1 view .LVU1034
3057:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                           LL_ADC_GROUP_REGULAR_INJECTED));
 3469              		.loc 2 3057 72 is_stmt 0 view .LVU1035
 3470 0060 AA68     		ldr	r2, [r5, #8]
 3471 0062 22F07C72 		bic	r2, r2, #66060288
3057:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                           LL_ADC_GROUP_REGULAR_INJECTED));
 3472              		.loc 2 3057 11 view .LVU1036
 3473 0066 42F0E072 		orr	r2, r2, #29360128
 3474 006a 04E0     		b	.L364
 3475              	.L321:
3047:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                           LL_ADC_GROUP_REGULAR));
 3476              		.loc 2 3047 11 is_stmt 1 view .LVU1037
3047:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                           LL_ADC_GROUP_REGULAR));
 3477              		.loc 2 3047 72 is_stmt 0 view .LVU1038
ARM GAS  /tmp/ccJLHc1D.s 			page 281


 3478 006c AA68     		ldr	r2, [r5, #8]
 3479 006e 22F07C72 		bic	r2, r2, #66060288
3047:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                           LL_ADC_GROUP_REGULAR));
 3480              		.loc 2 3047 11 view .LVU1039
 3481 0072 42F44002 		orr	r2, r2, #12582912
 3482              	.L364:
3074:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           break;
 3483              		.loc 2 3074 11 view .LVU1040
 3484 0076 FFF7FEFF 		bl	LL_ADC_SetAnalogWDMonitChannels
 3485              	.LVL242:
3075:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 3486              		.loc 2 3075 11 is_stmt 1 view .LVU1041
3079:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                  ADC_TR1_AWDFILT,
 3487              		.loc 2 3079 7 view .LVU1042
 3488 007a 2368     		ldr	r3, [r4]
 3489 007c A969     		ldr	r1, [r5, #24]
 3490 007e 1A6A     		ldr	r2, [r3, #32]
 3491 0080 22F4E042 		bic	r2, r2, #28672
 3492 0084 0A43     		orrs	r2, r2, r1
 3493 0086 1A62     		str	r2, [r3, #32]
3084:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 3494              		.loc 2 3084 7 view .LVU1043
 3495 0088 E26D     		ldr	r2, [r4, #92]
 3496 008a 22F48032 		bic	r2, r2, #65536
 3497 008e E265     		str	r2, [r4, #92]
3090:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 3498              		.loc 2 3090 7 view .LVU1044
 3499              	.LVL243:
 3500              	.LBB474:
 3501              	.LBI474:
6971:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6972:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6973:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6974:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group injected command of conversion stop state
6975:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CR       JADSTP         LL_ADC_INJ_IsStopConversionOngoing
6976:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6977:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval 0: no command of conversion stop is on going on ADC group injected.
6978:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6979:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_IsStopConversionOngoing(ADC_TypeDef *ADCx)
6980:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6981:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_JADSTP) == (ADC_CR_JADSTP)) ? 1UL : 0UL);
6982:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6983:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6984:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6985:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion data, range fit for
6986:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         all ADC configurations: all ADC resolutions and
6987:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         all oversampling increased data width (for devices
6988:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         with feature oversampling).
6989:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll JDR1     JDATA          LL_ADC_INJ_ReadConversionData32\n
6990:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JDR2     JDATA          LL_ADC_INJ_ReadConversionData32\n
6991:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JDR3     JDATA          LL_ADC_INJ_ReadConversionData32\n
6992:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JDR4     JDATA          LL_ADC_INJ_ReadConversionData32
6993:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6994:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
6995:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
6996:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
6997:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
ARM GAS  /tmp/ccJLHc1D.s 			page 282


6998:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
6999:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
7000:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7001:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_ReadConversionData32(ADC_TypeDef *ADCx, uint32_t Rank)
7002:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7003:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   register const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->JDR1, ((Rank & ADC_INJ_JDRX_REGOF
7004:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7005:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(*preg,
7006:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                              ADC_JDR1_JDATA)
7007:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                    );
7008:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7009:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7010:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7011:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion data, range fit for
7012:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC resolution 12 bits.
7013:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
7014:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         can increase data width, function for extended range
7015:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_INJ_ReadConversionData32.
7016:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll JDR1     JDATA          LL_ADC_INJ_ReadConversionData12\n
7017:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JDR2     JDATA          LL_ADC_INJ_ReadConversionData12\n
7018:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JDR3     JDATA          LL_ADC_INJ_ReadConversionData12\n
7019:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JDR4     JDATA          LL_ADC_INJ_ReadConversionData12
7020:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7021:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
7022:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
7023:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
7024:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
7025:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
7026:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
7027:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7028:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_INJ_ReadConversionData12(ADC_TypeDef *ADCx, uint32_t Rank)
7029:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7030:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   register const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->JDR1, ((Rank & ADC_INJ_JDRX_REGOF
7031:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7032:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint16_t)(READ_BIT(*preg,
7033:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                              ADC_JDR1_JDATA)
7034:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                    );
7035:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7036:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7037:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7038:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion data, range fit for
7039:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC resolution 10 bits.
7040:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
7041:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         can increase data width, function for extended range
7042:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_INJ_ReadConversionData32.
7043:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll JDR1     JDATA          LL_ADC_INJ_ReadConversionData10\n
7044:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JDR2     JDATA          LL_ADC_INJ_ReadConversionData10\n
7045:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JDR3     JDATA          LL_ADC_INJ_ReadConversionData10\n
7046:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JDR4     JDATA          LL_ADC_INJ_ReadConversionData10
7047:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7048:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
7049:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
7050:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
7051:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
7052:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
7053:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0x3FF
7054:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
ARM GAS  /tmp/ccJLHc1D.s 			page 283


7055:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_INJ_ReadConversionData10(ADC_TypeDef *ADCx, uint32_t Rank)
7056:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7057:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   register const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->JDR1, ((Rank & ADC_INJ_JDRX_REGOF
7058:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7059:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint16_t)(READ_BIT(*preg,
7060:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                              ADC_JDR1_JDATA)
7061:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                    );
7062:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7063:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7064:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7065:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion data, range fit for
7066:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC resolution 8 bits.
7067:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
7068:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         can increase data width, function for extended range
7069:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_INJ_ReadConversionData32.
7070:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll JDR1     JDATA          LL_ADC_INJ_ReadConversionData8\n
7071:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JDR2     JDATA          LL_ADC_INJ_ReadConversionData8\n
7072:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JDR3     JDATA          LL_ADC_INJ_ReadConversionData8\n
7073:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JDR4     JDATA          LL_ADC_INJ_ReadConversionData8
7074:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7075:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
7076:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
7077:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
7078:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
7079:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
7080:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xFF
7081:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7082:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint8_t LL_ADC_INJ_ReadConversionData8(ADC_TypeDef *ADCx, uint32_t Rank)
7083:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7084:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   register const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->JDR1, ((Rank & ADC_INJ_JDRX_REGOF
7085:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7086:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint8_t)(READ_BIT(*preg,
7087:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                             ADC_JDR1_JDATA)
7088:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                   );
7089:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7090:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7091:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7092:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion data, range fit for
7093:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC resolution 6 bits.
7094:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
7095:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         can increase data width, function for extended range
7096:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_INJ_ReadConversionData32.
7097:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll JDR1     JDATA          LL_ADC_INJ_ReadConversionData6\n
7098:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JDR2     JDATA          LL_ADC_INJ_ReadConversionData6\n
7099:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JDR3     JDATA          LL_ADC_INJ_ReadConversionData6\n
7100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JDR4     JDATA          LL_ADC_INJ_ReadConversionData6
7101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
7103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
7104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
7105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
7106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
7107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x3F
7108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint8_t LL_ADC_INJ_ReadConversionData6(ADC_TypeDef *ADCx, uint32_t Rank)
7110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   register const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->JDR1, ((Rank & ADC_INJ_JDRX_REGOF
ARM GAS  /tmp/ccJLHc1D.s 			page 284


7112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint8_t)(READ_BIT(*preg,
7114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                             ADC_JDR1_JDATA)
7115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                   );
7116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
7120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_FLAG_Management ADC flag management
7123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
7124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag ADC ready.
7128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 serie, flag LL_ADC_FLAG_ADRDY is raised when the ADC
7129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
7130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
7131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll ISR      ADRDY          LL_ADC_IsActiveFlag_ADRDY
7132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_ADRDY(ADC_TypeDef *ADCx)
7136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_ADRDY) == (LL_ADC_FLAG_ADRDY)) ? 1UL : 0UL);
7138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag ADC group regular end of unitary conversion.
7142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll ISR      EOC            LL_ADC_IsActiveFlag_EOC
7143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_EOC(ADC_TypeDef *ADCx)
7147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, ADC_ISR_EOC) == (ADC_ISR_EOC)) ? 1UL : 0UL);
7149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag ADC group regular end of sequence conversions.
7153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll ISR      EOS            LL_ADC_IsActiveFlag_EOS
7154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_EOS(ADC_TypeDef *ADCx)
7158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_EOS) == (LL_ADC_FLAG_EOS)) ? 1UL : 0UL);
7160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag ADC group regular overrun.
7164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll ISR      OVR            LL_ADC_IsActiveFlag_OVR
7165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_OVR(ADC_TypeDef *ADCx)
ARM GAS  /tmp/ccJLHc1D.s 			page 285


7169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_OVR) == (LL_ADC_FLAG_OVR)) ? 1UL : 0UL);
7171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag ADC group regular end of sampling phase.
7175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll ISR      EOSMP          LL_ADC_IsActiveFlag_EOSMP
7176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_EOSMP(ADC_TypeDef *ADCx)
7180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_EOSMP) == (LL_ADC_FLAG_EOSMP)) ? 1UL : 0UL);
7182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag ADC group injected end of unitary conversion.
7186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll ISR      JEOC           LL_ADC_IsActiveFlag_JEOC
7187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_JEOC(ADC_TypeDef *ADCx)
7191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_JEOC) == (LL_ADC_FLAG_JEOC)) ? 1UL : 0UL);
7193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag ADC group injected end of sequence conversions.
7197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll ISR      JEOS           LL_ADC_IsActiveFlag_JEOS
7198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_JEOS(ADC_TypeDef *ADCx)
7202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_JEOS) == (LL_ADC_FLAG_JEOS)) ? 1UL : 0UL);
7204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag ADC group injected contexts queue overflow.
7208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll ISR      JQOVF          LL_ADC_IsActiveFlag_JQOVF
7209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_JQOVF(ADC_TypeDef *ADCx)
7213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_JQOVF) == (LL_ADC_FLAG_JQOVF)) ? 1UL : 0UL);
7215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag ADC analog watchdog 1 flag
7219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll ISR      AWD1           LL_ADC_IsActiveFlag_AWD1
7220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_AWD1(ADC_TypeDef *ADCx)
7224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_AWD1) == (LL_ADC_FLAG_AWD1)) ? 1UL : 0UL);
ARM GAS  /tmp/ccJLHc1D.s 			page 286


7226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag ADC analog watchdog 2.
7230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll ISR      AWD2           LL_ADC_IsActiveFlag_AWD2
7231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_AWD2(ADC_TypeDef *ADCx)
7235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_AWD2) == (LL_ADC_FLAG_AWD2)) ? 1UL : 0UL);
7237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag ADC analog watchdog 3.
7241:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll ISR      AWD3           LL_ADC_IsActiveFlag_AWD3
7242:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7244:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_AWD3(ADC_TypeDef *ADCx)
7246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7247:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_AWD3) == (LL_ADC_FLAG_AWD3)) ? 1UL : 0UL);
7248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7249:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7250:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7251:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Clear flag ADC ready.
7252:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 serie, flag LL_ADC_FLAG_ADRDY is raised when the ADC
7253:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
7254:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
7255:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll ISR      ADRDY          LL_ADC_ClearFlag_ADRDY
7256:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7257:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7258:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7259:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_ADRDY(ADC_TypeDef *ADCx)
7260:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7261:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_ADRDY);
7262:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7263:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7265:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Clear flag ADC group regular end of unitary conversion.
7266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll ISR      EOC            LL_ADC_ClearFlag_EOC
7267:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7269:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7270:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_EOC(ADC_TypeDef *ADCx)
7271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7272:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_EOC);
7273:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7274:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7275:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7276:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Clear flag ADC group regular end of sequence conversions.
7277:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll ISR      EOS            LL_ADC_ClearFlag_EOS
7278:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7279:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7280:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7281:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_EOS(ADC_TypeDef *ADCx)
7282:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
ARM GAS  /tmp/ccJLHc1D.s 			page 287


7283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_EOS);
7284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Clear flag ADC group regular overrun.
7288:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll ISR      OVR            LL_ADC_ClearFlag_OVR
7289:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7290:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7291:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7292:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_OVR(ADC_TypeDef *ADCx)
7293:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7294:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_OVR);
7295:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7296:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7297:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7298:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Clear flag ADC group regular end of sampling phase.
7299:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll ISR      EOSMP          LL_ADC_ClearFlag_EOSMP
7300:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7301:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7302:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7303:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_EOSMP(ADC_TypeDef *ADCx)
7304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7305:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_EOSMP);
7306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7307:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7309:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Clear flag ADC group injected end of unitary conversion.
7310:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll ISR      JEOC           LL_ADC_ClearFlag_JEOC
7311:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7312:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7313:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7314:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_JEOC(ADC_TypeDef *ADCx)
7315:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7316:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_JEOC);
7317:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7318:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7319:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7320:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Clear flag ADC group injected end of sequence conversions.
7321:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll ISR      JEOS           LL_ADC_ClearFlag_JEOS
7322:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7323:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7324:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7325:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_JEOS(ADC_TypeDef *ADCx)
7326:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7327:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_JEOS);
7328:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7329:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7331:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Clear flag ADC group injected contexts queue overflow.
7332:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll ISR      JQOVF          LL_ADC_ClearFlag_JQOVF
7333:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7334:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7335:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_JQOVF(ADC_TypeDef *ADCx)
7337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_JQOVF);
7339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
ARM GAS  /tmp/ccJLHc1D.s 			page 288


7340:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7341:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Clear flag ADC analog watchdog 1.
7343:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll ISR      AWD1           LL_ADC_ClearFlag_AWD1
7344:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7345:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7346:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7347:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_AWD1(ADC_TypeDef *ADCx)
 3502              		.loc 1 7347 22 view .LVU1045
 3503              	.LBB475:
7348:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7349:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_AWD1);
 3504              		.loc 1 7349 3 view .LVU1046
 3505 0090 8022     		movs	r2, #128
 3506 0092 1A60     		str	r2, [r3]
 3507              	.LVL244:
 3508              		.loc 1 7349 3 is_stmt 0 view .LVU1047
 3509              	.LBE475:
 3510              	.LBE474:
3093:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 3511              		.loc 2 3093 7 is_stmt 1 view .LVU1048
3093:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 3512              		.loc 2 3093 10 is_stmt 0 view .LVU1049
 3513 0094 2A7B     		ldrb	r2, [r5, #12]	@ zero_extendqisi2
 3514 0096 012A     		cmp	r2, #1
 3515              	.LBB476:
 3516              	.LBB477:
7350:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7351:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7352:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7353:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Clear flag ADC analog watchdog 2.
7354:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll ISR      AWD2           LL_ADC_ClearFlag_AWD2
7355:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7356:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7357:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7358:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_AWD2(ADC_TypeDef *ADCx)
7359:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7360:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_AWD2);
7361:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7362:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7363:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7364:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Clear flag ADC analog watchdog 3.
7365:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll ISR      AWD3           LL_ADC_ClearFlag_AWD3
7366:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7368:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7369:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_AWD3(ADC_TypeDef *ADCx)
7370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7371:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_AWD3);
7372:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7373:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7374:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
7375:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7376:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag multimode ADC ready of the ADC master.
7377:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CSR      ADRDY_MST      LL_ADC_IsActiveFlag_MST_ADRDY
7378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7379:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
ARM GAS  /tmp/ccJLHc1D.s 			page 289


7380:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7381:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7382:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_ADRDY(ADC_Common_TypeDef *ADCxy_COMMON)
7383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7384:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_ADRDY_MST) == (LL_ADC_FLAG_ADRDY_MST)) ? 1UL : 0
7385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7386:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7388:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag multimode ADC ready of the ADC slave.
7389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CSR      ADRDY_SLV      LL_ADC_IsActiveFlag_SLV_ADRDY
7390:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7391:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7392:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7393:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7394:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_ADRDY(ADC_Common_TypeDef *ADCxy_COMMON)
7395:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7396:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_ADRDY_SLV) == (LL_ADC_FLAG_ADRDY_SLV)) ? 1UL : 0
7397:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7398:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7399:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7400:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular end of unitary conversion of the ADC master.
7401:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CSR      EOC_MST        LL_ADC_IsActiveFlag_MST_EOC
7402:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7403:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7404:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7405:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7406:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_EOC(ADC_Common_TypeDef *ADCxy_COMMON)
7407:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7408:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_EOC_SLV) == (LL_ADC_FLAG_EOC_SLV)) ? 1UL : 0UL);
7409:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7410:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7411:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7412:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular end of unitary conversion of the ADC slave.
7413:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CSR      EOC_SLV        LL_ADC_IsActiveFlag_SLV_EOC
7414:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7415:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7416:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7417:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7418:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_EOC(ADC_Common_TypeDef *ADCxy_COMMON)
7419:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7420:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_EOC_SLV) == (LL_ADC_FLAG_EOC_SLV)) ? 1UL : 0UL);
7421:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7422:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7423:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7424:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular end of sequence conversions of the ADC master.
7425:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CSR      EOS_MST        LL_ADC_IsActiveFlag_MST_EOS
7426:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7427:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7428:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7429:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7430:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_EOS(ADC_Common_TypeDef *ADCxy_COMMON)
7431:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7432:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_EOS_MST) == (LL_ADC_FLAG_EOS_MST)) ? 1UL : 0UL);
7433:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7434:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7435:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7436:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular end of sequence conversions of the ADC slave.
ARM GAS  /tmp/ccJLHc1D.s 			page 290


7437:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CSR      EOS_SLV        LL_ADC_IsActiveFlag_SLV_EOS
7438:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7439:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7440:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7441:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7442:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_EOS(ADC_Common_TypeDef *ADCxy_COMMON)
7443:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7444:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_EOS_SLV) == (LL_ADC_FLAG_EOS_SLV)) ? 1UL : 0UL);
7445:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7446:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7447:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7448:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular overrun of the ADC master.
7449:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CSR      OVR_MST        LL_ADC_IsActiveFlag_MST_OVR
7450:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7452:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_OVR(ADC_Common_TypeDef *ADCxy_COMMON)
7455:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_OVR_MST) == (LL_ADC_FLAG_OVR_MST)) ? 1UL : 0UL);
7457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7458:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7459:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7460:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular overrun of the ADC slave.
7461:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CSR      OVR_SLV        LL_ADC_IsActiveFlag_SLV_OVR
7462:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7463:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7464:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7465:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7466:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_OVR(ADC_Common_TypeDef *ADCxy_COMMON)
7467:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7468:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_OVR_SLV) == (LL_ADC_FLAG_OVR_SLV)) ? 1UL : 0UL);
7469:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7470:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7471:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7472:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular end of sampling of the ADC master.
7473:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CSR      EOSMP_MST      LL_ADC_IsActiveFlag_MST_EOSMP
7474:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7475:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7476:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7477:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7478:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_EOSMP(ADC_Common_TypeDef *ADCxy_COMMON)
7479:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7480:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_EOSMP_MST) == (LL_ADC_FLAG_EOSMP_MST)) ? 1UL : 0
7481:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7482:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7483:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular end of sampling of the ADC slave.
7485:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CSR      EOSMP_SLV      LL_ADC_IsActiveFlag_SLV_EOSMP
7486:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7487:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7488:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7489:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7490:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_EOSMP(ADC_Common_TypeDef *ADCxy_COMMON)
7491:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7492:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_EOSMP_SLV) == (LL_ADC_FLAG_EOSMP_SLV)) ? 1UL : 0
7493:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
ARM GAS  /tmp/ccJLHc1D.s 			page 291


7494:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7495:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7496:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group injected end of unitary conversion of the ADC master.
7497:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CSR      JEOC_MST       LL_ADC_IsActiveFlag_MST_JEOC
7498:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7499:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7500:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7502:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_JEOC(ADC_Common_TypeDef *ADCxy_COMMON)
7503:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7504:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_JEOC_MST) == (LL_ADC_FLAG_JEOC_MST)) ? 1UL : 0UL
7505:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7506:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7507:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group injected end of unitary conversion of the ADC slave.
7509:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CSR      JEOC_SLV       LL_ADC_IsActiveFlag_SLV_JEOC
7510:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7511:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7512:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7513:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7514:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_JEOC(ADC_Common_TypeDef *ADCxy_COMMON)
7515:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7516:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_JEOC_SLV) == (LL_ADC_FLAG_JEOC_SLV)) ? 1UL : 0UL
7517:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7518:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7519:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7520:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group injected end of sequence conversions of the ADC master.
7521:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CSR      JEOS_MST       LL_ADC_IsActiveFlag_MST_JEOS
7522:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7523:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7524:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7525:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7526:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_JEOS(ADC_Common_TypeDef *ADCxy_COMMON)
7527:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7528:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_JEOS_MST) == (LL_ADC_FLAG_JEOS_MST)) ? 1UL : 0UL
7529:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7530:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7531:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7532:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group injected end of sequence conversions of the ADC slave.
7533:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CSR      JEOS_SLV       LL_ADC_IsActiveFlag_SLV_JEOS
7534:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7535:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7536:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7537:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7538:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_JEOS(ADC_Common_TypeDef *ADCxy_COMMON)
7539:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7540:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_JEOS_SLV) == (LL_ADC_FLAG_JEOS_SLV)) ? 1UL : 0UL
7541:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7542:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7543:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7544:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group injected context queue overflow of the ADC master.
7545:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CSR      JQOVF_MST      LL_ADC_IsActiveFlag_MST_JQOVF
7546:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7547:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7548:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7549:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7550:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_JQOVF(ADC_Common_TypeDef *ADCxy_COMMON)
ARM GAS  /tmp/ccJLHc1D.s 			page 292


7551:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7552:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_JQOVF_MST) == (LL_ADC_FLAG_JQOVF_MST)) ? 1UL : 0
7553:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7554:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7555:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7556:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group injected context queue overflow of the ADC slave.
7557:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CSR      JQOVF_SLV      LL_ADC_IsActiveFlag_SLV_JQOVF
7558:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7559:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7560:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7561:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7562:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_JQOVF(ADC_Common_TypeDef *ADCxy_COMMON)
7563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7564:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_JQOVF_SLV) == (LL_ADC_FLAG_JQOVF_SLV)) ? 1UL : 0
7565:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7566:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7567:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7568:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag multimode ADC analog watchdog 1 of the ADC master.
7569:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CSR      AWD1_MST       LL_ADC_IsActiveFlag_MST_AWD1
7570:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7571:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7572:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7573:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7574:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_AWD1(ADC_Common_TypeDef *ADCxy_COMMON)
7575:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7576:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_AWD1_MST) == (LL_ADC_FLAG_AWD1_MST)) ? 1UL : 0UL
7577:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7578:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7579:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7580:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag multimode analog watchdog 1 of the ADC slave.
7581:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CSR      AWD1_SLV       LL_ADC_IsActiveFlag_SLV_AWD1
7582:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7583:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7584:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7585:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7586:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_AWD1(ADC_Common_TypeDef *ADCxy_COMMON)
7587:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7588:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_AWD1_SLV) == (LL_ADC_FLAG_AWD1_SLV)) ? 1UL : 0UL
7589:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7590:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7591:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7592:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag multimode ADC analog watchdog 2 of the ADC master.
7593:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CSR      AWD2_MST       LL_ADC_IsActiveFlag_MST_AWD2
7594:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7595:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7596:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7597:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7598:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_AWD2(ADC_Common_TypeDef *ADCxy_COMMON)
7599:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7600:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_AWD2_MST) == (LL_ADC_FLAG_AWD2_MST)) ? 1UL : 0UL
7601:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7602:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7603:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7604:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag multimode ADC analog watchdog 2 of the ADC slave.
7605:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CSR      AWD2_SLV       LL_ADC_IsActiveFlag_SLV_AWD2
7606:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7607:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
ARM GAS  /tmp/ccJLHc1D.s 			page 293


7608:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7609:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7610:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_AWD2(ADC_Common_TypeDef *ADCxy_COMMON)
7611:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7612:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_AWD2_SLV) == (LL_ADC_FLAG_AWD2_SLV)) ? 1UL : 0UL
7613:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7614:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7615:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7616:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag multimode ADC analog watchdog 3 of the ADC master.
7617:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CSR      AWD3_MST       LL_ADC_IsActiveFlag_MST_AWD3
7618:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7619:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7620:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7622:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_AWD3(ADC_Common_TypeDef *ADCxy_COMMON)
7623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7624:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_AWD3_MST) == (LL_ADC_FLAG_AWD3_MST)) ? 1UL : 0UL
7625:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7626:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7627:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7628:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag multimode ADC analog watchdog 3 of the ADC slave.
7629:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CSR      AWD3_SLV       LL_ADC_IsActiveFlag_SLV_AWD3
7630:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7631:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7632:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7633:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_AWD3(ADC_Common_TypeDef *ADCxy_COMMON)
7635:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7636:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_AWD3_SLV) == (LL_ADC_FLAG_AWD3_SLV)) ? 1UL : 0UL
7637:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7638:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
7639:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7640:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7641:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
7642:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7643:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7644:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_IT_Management ADC IT management
7645:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
7646:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7647:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7648:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7649:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Enable ADC ready.
7650:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll IER      ADRDYIE        LL_ADC_EnableIT_ADRDY
7651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7652:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7653:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7654:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_ADRDY(ADC_TypeDef *ADCx)
7655:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7656:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_ADRDY);
7657:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7658:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7659:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7660:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Enable interruption ADC group regular end of unitary conversion.
7661:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll IER      EOCIE          LL_ADC_EnableIT_EOC
7662:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7663:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7664:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
ARM GAS  /tmp/ccJLHc1D.s 			page 294


7665:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_EOC(ADC_TypeDef *ADCx)
7666:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7667:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_EOC);
7668:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7669:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7670:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7671:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Enable interruption ADC group regular end of sequence conversions.
7672:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll IER      EOSIE          LL_ADC_EnableIT_EOS
7673:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7674:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7675:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7676:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_EOS(ADC_TypeDef *ADCx)
7677:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7678:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_EOS);
7679:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7680:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7681:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7682:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Enable ADC group regular interruption overrun.
7683:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll IER      OVRIE          LL_ADC_EnableIT_OVR
7684:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7685:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7686:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7687:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_OVR(ADC_TypeDef *ADCx)
7688:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7689:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_OVR);
7690:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7691:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7692:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7693:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Enable interruption ADC group regular end of sampling.
7694:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll IER      EOSMPIE        LL_ADC_EnableIT_EOSMP
7695:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7696:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7697:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7698:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_EOSMP(ADC_TypeDef *ADCx)
7699:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7700:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_EOSMP);
7701:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7702:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7703:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7704:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Enable interruption ADC group injected end of unitary conversion.
7705:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll IER      JEOCIE         LL_ADC_EnableIT_JEOC
7706:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7707:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7708:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7709:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_JEOC(ADC_TypeDef *ADCx)
7710:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7711:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_JEOC);
7712:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7713:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7714:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7715:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Enable interruption ADC group injected end of sequence conversions.
7716:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll IER      JEOSIE         LL_ADC_EnableIT_JEOS
7717:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7718:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7720:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_JEOS(ADC_TypeDef *ADCx)
7721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
ARM GAS  /tmp/ccJLHc1D.s 			page 295


7722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_JEOS);
7723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7725:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Enable interruption ADC group injected context queue overflow.
7727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll IER      JQOVFIE        LL_ADC_EnableIT_JQOVF
7728:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7729:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7730:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7731:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_JQOVF(ADC_TypeDef *ADCx)
7732:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7733:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_JQOVF);
7734:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7736:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7737:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Enable interruption ADC analog watchdog 1.
7738:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll IER      AWD1IE         LL_ADC_EnableIT_AWD1
7739:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7740:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7741:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7742:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_AWD1(ADC_TypeDef *ADCx)
7743:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7744:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_AWD1);
 3517              		.loc 1 7744 3 view .LVU1050
 3518 0098 5A68     		ldr	r2, [r3, #4]
 3519              	.LBE477:
 3520              	.LBE476:
3095:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 3521              		.loc 2 3095 9 is_stmt 1 view .LVU1051
 3522              	.LVL245:
 3523              	.LBB479:
 3524              	.LBI476:
7742:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 3525              		.loc 1 7742 22 view .LVU1052
 3526              	.LBB478:
 3527              		.loc 1 7744 3 view .LVU1053
 3528 009a 0CBF     		ite	eq
 3529 009c 42F08002 		orreq	r2, r2, #128
 3530              	.LBE478:
 3531              	.LBE479:
3099:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 3532              		.loc 2 3099 9 view .LVU1054
 3533              	.LVL246:
 3534              	.LBB480:
 3535              	.LBI480:
7745:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7746:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7747:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7748:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Enable interruption ADC analog watchdog 2.
7749:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll IER      AWD2IE         LL_ADC_EnableIT_AWD2
7750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7751:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7752:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7753:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_AWD2(ADC_TypeDef *ADCx)
7754:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7755:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_AWD2);
7756:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
ARM GAS  /tmp/ccJLHc1D.s 			page 296


7757:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7758:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7759:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Enable interruption ADC analog watchdog 3.
7760:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll IER      AWD3IE         LL_ADC_EnableIT_AWD3
7761:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7762:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7763:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7764:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_AWD3(ADC_TypeDef *ADCx)
7765:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7766:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_AWD3);
7767:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7768:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7769:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7770:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Disable interruption ADC ready.
7771:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll IER      ADRDYIE        LL_ADC_DisableIT_ADRDY
7772:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7773:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7774:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7775:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_ADRDY(ADC_TypeDef *ADCx)
7776:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7777:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_ADRDY);
7778:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7779:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7780:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7781:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Disable interruption ADC group regular end of unitary conversion.
7782:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll IER      EOCIE          LL_ADC_DisableIT_EOC
7783:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7784:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7785:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7786:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_EOC(ADC_TypeDef *ADCx)
7787:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7788:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_EOC);
7789:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7790:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7791:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7792:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Disable interruption ADC group regular end of sequence conversions.
7793:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll IER      EOSIE          LL_ADC_DisableIT_EOS
7794:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7795:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7796:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7797:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_EOS(ADC_TypeDef *ADCx)
7798:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7799:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_EOS);
7800:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7801:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7802:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7803:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Disable interruption ADC group regular overrun.
7804:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll IER      OVRIE          LL_ADC_DisableIT_OVR
7805:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7806:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7807:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7808:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_OVR(ADC_TypeDef *ADCx)
7809:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7810:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_OVR);
7811:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7812:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7813:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
ARM GAS  /tmp/ccJLHc1D.s 			page 297


7814:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Disable interruption ADC group regular end of sampling.
7815:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll IER      EOSMPIE        LL_ADC_DisableIT_EOSMP
7816:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7817:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7818:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7819:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_EOSMP(ADC_TypeDef *ADCx)
7820:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7821:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_EOSMP);
7822:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7823:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7824:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7825:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Disable interruption ADC group regular end of unitary conversion.
7826:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll IER      JEOCIE         LL_ADC_DisableIT_JEOC
7827:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7828:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7829:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7830:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_JEOC(ADC_TypeDef *ADCx)
7831:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7832:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_JEOC);
7833:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7834:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7835:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7836:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Disable interruption ADC group injected end of sequence conversions.
7837:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll IER      JEOSIE         LL_ADC_DisableIT_JEOS
7838:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7839:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7840:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7841:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_JEOS(ADC_TypeDef *ADCx)
7842:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7843:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_JEOS);
7844:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7845:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7847:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Disable interruption ADC group injected context queue overflow.
7848:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll IER      JQOVFIE        LL_ADC_DisableIT_JQOVF
7849:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7850:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7851:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7852:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_JQOVF(ADC_TypeDef *ADCx)
7853:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7854:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_JQOVF);
7855:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7856:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7857:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7858:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Disable interruption ADC analog watchdog 1.
7859:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll IER      AWD1IE         LL_ADC_DisableIT_AWD1
7860:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7861:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7862:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7863:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_AWD1(ADC_TypeDef *ADCx)
 3536              		.loc 1 7863 22 view .LVU1055
 3537              	.LBB481:
7864:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7865:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_AWD1);
 3538              		.loc 1 7865 3 view .LVU1056
 3539 00a0 22F08002 		bicne	r2, r2, #128
 3540              	.LVL247:
ARM GAS  /tmp/ccJLHc1D.s 			page 298


 3541              	.L368:
 3542              		.loc 1 7865 3 is_stmt 0 view .LVU1057
 3543              	.LBE481:
 3544              	.LBE480:
 3545              	.LBB482:
 3546              	.LBB483:
7866:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7867:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7868:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7869:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Disable interruption ADC analog watchdog 2.
7870:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll IER      AWD2IE         LL_ADC_DisableIT_AWD2
7871:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7872:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7873:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7874:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_AWD2(ADC_TypeDef *ADCx)
7875:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7876:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_AWD2);
7877:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7878:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7879:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7880:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Disable interruption ADC analog watchdog 3.
7881:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll IER      AWD3IE         LL_ADC_DisableIT_AWD3
7882:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7883:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7884:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7885:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_AWD3(ADC_TypeDef *ADCx)
7886:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7887:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_AWD3);
 3547              		.loc 1 7887 3 view .LVU1058
 3548 00a4 5A60     		str	r2, [r3, #4]
 3549              	.LVL248:
 3550              	.L317:
 3551              		.loc 1 7887 3 view .LVU1059
 3552              	.LBE483:
 3553              	.LBE482:
3181:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 3554              		.loc 2 3181 3 is_stmt 1 view .LVU1060
3181:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 3555              		.loc 2 3181 22 is_stmt 0 view .LVU1061
 3556 00a6 2868     		ldr	r0, [r5]
3181:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 3557              		.loc 2 3181 6 view .LVU1062
 3558 00a8 5C4A     		ldr	r2, .L369
 3559 00aa 2368     		ldr	r3, [r4]
 3560 00ac 9042     		cmp	r0, r2
 3561 00ae D5E90465 		ldrd	r6, r5, [r5, #16]
 3562              	.LVL249:
3181:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 3563              		.loc 2 3181 6 view .LVU1063
 3564 00b2 40F08E80 		bne	.L343
3186:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmpAWDLowThresholdShifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowThres
 3565              		.loc 2 3186 5 is_stmt 1 view .LVU1064
3186:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmpAWDLowThresholdShifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowThres
 3566              		.loc 2 3186 34 is_stmt 0 view .LVU1065
 3567 00b6 DF68     		ldr	r7, [r3, #12]
3187:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 3568              		.loc 2 3187 34 view .LVU1066
ARM GAS  /tmp/ccJLHc1D.s 			page 299


 3569 00b8 D968     		ldr	r1, [r3, #12]
3186:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmpAWDLowThresholdShifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowThres
 3570              		.loc 2 3186 34 view .LVU1067
 3571 00ba C7F3C107 		ubfx	r7, r7, #3, #2
3187:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 3572              		.loc 2 3187 34 view .LVU1068
 3573 00be C1F3C101 		ubfx	r1, r1, #3, #2
3186:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmpAWDLowThresholdShifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowThres
 3574              		.loc 2 3186 34 view .LVU1069
 3575 00c2 7F00     		lsls	r7, r7, #1
3187:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 3576              		.loc 2 3187 34 view .LVU1070
 3577 00c4 4900     		lsls	r1, r1, #1
3186:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmpAWDLowThresholdShifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowThres
 3578              		.loc 2 3186 32 view .LVU1071
 3579 00c6 BE40     		lsls	r6, r6, r7
 3580              	.LVL250:
3187:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 3581              		.loc 2 3187 5 is_stmt 1 view .LVU1072
3187:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 3582              		.loc 2 3187 32 is_stmt 0 view .LVU1073
 3583 00c8 8D40     		lsls	r5, r5, r1
 3584              	.LVL251:
 3585              	.L344:
3200:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                   tmpAWDLowThresholdShifted);
 3586              		.loc 2 3200 3 is_stmt 1 view .LVU1074
 3587              	.LBB485:
 3588              	.LBI485:
5859:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                      uint32_t AWDThresholdLowValue)
 3589              		.loc 1 5859 22 view .LVU1075
 3590              	.LBB486:
5867:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 3591              		.loc 1 5867 3 view .LVU1076
5867:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 3592              		.loc 1 5867 34 is_stmt 0 view .LVU1077
 3593 00ca 800C     		lsrs	r0, r0, #18
 3594              	.LVL252:
5867:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 3595              		.loc 1 5867 34 view .LVU1078
 3596 00cc 00F00C00 		and	r0, r0, #12
 3597 00d0 2033     		adds	r3, r3, #32
 3598              	.LVL253:
5869:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_TR1_HT1 | ADC_TR1_LT1,
 3599              		.loc 1 5869 3 is_stmt 1 view .LVU1079
 3600 00d2 C158     		ldr	r1, [r0, r3]
 3601 00d4 01F0F021 		and	r1, r1, #-268374016
 3602 00d8 2943     		orrs	r1, r1, r5
 3603 00da 41EA0641 		orr	r1, r1, r6, lsl #16
 3604 00de C150     		str	r1, [r0, r3]
 3605              	.LVL254:
5869:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_TR1_HT1 | ADC_TR1_LT1,
 3606              		.loc 1 5869 3 is_stmt 0 view .LVU1080
 3607              	.LBE486:
 3608              	.LBE485:
3204:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 3609              		.loc 2 3204 3 is_stmt 1 view .LVU1081
3204:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
ARM GAS  /tmp/ccJLHc1D.s 			page 300


 3610              		.loc 2 3204 3 view .LVU1082
 3611 00e0 0020     		movs	r0, #0
 3612 00e2 84F85800 		strb	r0, [r4, #88]
3204:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 3613              		.loc 2 3204 3 view .LVU1083
3207:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
 3614              		.loc 2 3207 3 view .LVU1084
 3615              	.LVL255:
 3616              	.L316:
3208:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 3617              		.loc 2 3208 1 is_stmt 0 view .LVU1085
 3618 00e6 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3619              	.LVL256:
 3620              	.L319:
3052:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                           LL_ADC_GROUP_INJECTED));
 3621              		.loc 2 3052 11 is_stmt 1 view .LVU1086
3052:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                           LL_ADC_GROUP_INJECTED));
 3622              		.loc 2 3052 72 is_stmt 0 view .LVU1087
 3623 00e8 AA68     		ldr	r2, [r5, #8]
 3624 00ea 22F07C72 		bic	r2, r2, #66060288
3052:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                           LL_ADC_GROUP_INJECTED));
 3625              		.loc 2 3052 11 view .LVU1088
 3626 00ee 42F0A072 		orr	r2, r2, #20971520
 3627 00f2 C0E7     		b	.L364
 3628              	.L323:
3062:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           break;
 3629              		.loc 2 3062 11 is_stmt 1 view .LVU1089
 3630 00f4 4A4A     		ldr	r2, .L369+4
 3631 00f6 BEE7     		b	.L364
 3632              	.L322:
3066:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           break;
 3633              		.loc 2 3066 11 view .LVU1090
 3634 00f8 4A4A     		ldr	r2, .L369+8
 3635 00fa BCE7     		b	.L364
 3636              	.L325:
3070:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           break;
 3637              		.loc 2 3070 11 view .LVU1091
 3638 00fc 4A4A     		ldr	r2, .L369+12
 3639 00fe BAE7     		b	.L364
 3640              	.L318:
3105:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 3641              		.loc 2 3105 7 view .LVU1092
 3642 0100 B3F1A07F 		cmp	r3, #20971520
 3643 0104 17D0     		beq	.L329
 3644 0106 10D8     		bhi	.L330
 3645 0108 B3F5400F 		cmp	r3, #12582912
 3646 010c 13D0     		beq	.L329
 3647 010e B3F1807F 		cmp	r3, #16777216
 3648 0112 02D0     		beq	.L331
 3649 0114 B3F5000F 		cmp	r3, #8388608
 3650 0118 59D1     		bne	.L332
 3651              	.L331:
3125:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           break;
 3652              		.loc 2 3125 11 view .LVU1093
 3653 011a 434A     		ldr	r2, .L369+12
 3654              	.L367:
3129:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           break;
ARM GAS  /tmp/ccJLHc1D.s 			page 301


 3655              		.loc 2 3129 11 is_stmt 0 view .LVU1094
 3656 011c FFF7FEFF 		bl	LL_ADC_SetAnalogWDMonitChannels
 3657              	.LVL257:
3130:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 3658              		.loc 2 3130 11 is_stmt 1 view .LVU1095
3133:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 3659              		.loc 2 3133 7 view .LVU1096
3133:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 3660              		.loc 2 3133 10 is_stmt 0 view .LVU1097
 3661 0120 2A68     		ldr	r2, [r5]
 3662 0122 424B     		ldr	r3, .L369+16
 3663 0124 9A42     		cmp	r2, r3
 3664 0126 3AD1     		bne	.L339
 3665 0128 17E0     		b	.L336
 3666              	.L330:
3105:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 3667              		.loc 2 3105 7 view .LVU1098
 3668 012a B3F1C07F 		cmp	r3, #25165824
 3669 012e F4D0     		beq	.L331
 3670 0130 B3F1E07F 		cmp	r3, #29360128
 3671 0134 4BD1     		bne	.L332
 3672              	.L329:
3112:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           {
 3673              		.loc 2 3112 11 is_stmt 1 view .LVU1099
3112:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           {
 3674              		.loc 2 3112 14 is_stmt 0 view .LVU1100
 3675 0136 3D4A     		ldr	r2, .L369+16
 3676 0138 AB68     		ldr	r3, [r5, #8]
 3677 013a 9142     		cmp	r1, r2
 3678 013c C3F31206 		ubfx	r6, r3, #0, #19
 3679 0140 4FF00102 		mov	r2, #1
 3680 0144 21D1     		bne	.L333
3114:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           }
 3681              		.loc 2 3114 13 is_stmt 1 view .LVU1101
 3682 0146 CEB9     		cbnz	r6, .L334
3114:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           }
 3683              		.loc 2 3114 13 is_stmt 0 discriminator 1 view .LVU1102
 3684 0148 C3F38463 		ubfx	r3, r3, #26, #5
 3685              	.L365:
3114:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           }
 3686              		.loc 2 3114 13 discriminator 2 view .LVU1103
 3687 014c 02FA03F3 		lsl	r3, r2, r3
 3688 0150 D0F8A020 		ldr	r2, [r0, #160]
 3689 0154 1343     		orrs	r3, r3, r2
 3690 0156 C0F8A030 		str	r3, [r0, #160]
3133:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 3691              		.loc 2 3133 7 is_stmt 1 discriminator 2 view .LVU1104
 3692              	.L336:
3136:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 3693              		.loc 2 3136 9 view .LVU1105
 3694 015a E36D     		ldr	r3, [r4, #92]
 3695 015c 23F40033 		bic	r3, r3, #131072
 3696 0160 E365     		str	r3, [r4, #92]
3142:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 3697              		.loc 2 3142 9 view .LVU1106
 3698 0162 2368     		ldr	r3, [r4]
 3699              	.LVL258:
ARM GAS  /tmp/ccJLHc1D.s 			page 302


 3700              	.LBB487:
 3701              	.LBI487:
7358:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 3702              		.loc 1 7358 22 view .LVU1107
 3703              	.LBB488:
7360:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 3704              		.loc 1 7360 3 view .LVU1108
 3705 0164 4FF48072 		mov	r2, #256
 3706 0168 1A60     		str	r2, [r3]
 3707              	.LVL259:
7360:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 3708              		.loc 1 7360 3 is_stmt 0 view .LVU1109
 3709              	.LBE488:
 3710              	.LBE487:
3145:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 3711              		.loc 2 3145 9 is_stmt 1 view .LVU1110
3145:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 3712              		.loc 2 3145 12 is_stmt 0 view .LVU1111
 3713 016a 2A7B     		ldrb	r2, [r5, #12]	@ zero_extendqisi2
 3714 016c 012A     		cmp	r2, #1
 3715              	.LBB489:
 3716              	.LBB490:
7755:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 3717              		.loc 1 7755 3 view .LVU1112
 3718 016e 5A68     		ldr	r2, [r3, #4]
 3719              	.LBE490:
 3720              	.LBE489:
3147:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
 3721              		.loc 2 3147 11 is_stmt 1 view .LVU1113
 3722              	.LVL260:
 3723              	.LBB492:
 3724              	.LBI489:
7753:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 3725              		.loc 1 7753 22 view .LVU1114
 3726              	.LBB491:
7755:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 3727              		.loc 1 7755 3 view .LVU1115
 3728 0170 0CBF     		ite	eq
 3729 0172 42F48072 		orreq	r2, r2, #256
 3730              	.LBE491:
 3731              	.LBE492:
3151:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
 3732              		.loc 2 3151 11 view .LVU1116
 3733              	.LVL261:
 3734              	.LBB493:
 3735              	.LBI493:
7874:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 3736              		.loc 1 7874 22 view .LVU1117
 3737              	.LBB494:
7876:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 3738              		.loc 1 7876 3 view .LVU1118
 3739 0176 22F48072 		bicne	r2, r2, #256
 3740 017a 93E7     		b	.L368
 3741              	.LVL262:
 3742              	.L334:
7876:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 3743              		.loc 1 7876 3 is_stmt 0 view .LVU1119
ARM GAS  /tmp/ccJLHc1D.s 			page 303


 3744              	.LBE494:
 3745              	.LBE493:
 3746              	.LBB495:
 3747              	.LBI495:
 981:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3748              		.loc 3 981 31 is_stmt 1 discriminator 2 view .LVU1120
 3749              	.LBB496:
 983:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 3750              		.loc 3 983 3 discriminator 2 view .LVU1121
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3751              		.loc 3 988 4 discriminator 2 view .LVU1122
 3752              		.syntax unified
 3753              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3754 017c 93FAA3F3 		rbit r3, r3
 3755              	@ 0 "" 2
 3756              	.LVL263:
 3757              		.loc 3 1001 3 discriminator 2 view .LVU1123
 3758              		.loc 3 1001 3 is_stmt 0 discriminator 2 view .LVU1124
 3759              		.thumb
 3760              		.syntax unified
 3761              	.LBE496:
 3762              	.LBE495:
3114:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           }
 3763              		.loc 2 3114 13 discriminator 2 view .LVU1125
 3764 0180 B3FA83F3 		clz	r3, r3
 3765 0184 03F01F03 		and	r3, r3, #31
 3766 0188 E0E7     		b	.L365
 3767              	.L333:
3118:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           }
 3768              		.loc 2 3118 13 is_stmt 1 view .LVU1126
 3769 018a CEB9     		cbnz	r6, .L337
3118:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           }
 3770              		.loc 2 3118 13 is_stmt 0 discriminator 1 view .LVU1127
 3771 018c C3F38463 		ubfx	r3, r3, #26, #5
 3772              	.L366:
3118:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           }
 3773              		.loc 2 3118 13 discriminator 2 view .LVU1128
 3774 0190 02FA03F3 		lsl	r3, r2, r3
 3775 0194 D0F8A420 		ldr	r2, [r0, #164]
 3776 0198 1343     		orrs	r3, r3, r2
 3777 019a C0F8A430 		str	r3, [r0, #164]
3133:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 3778              		.loc 2 3133 7 is_stmt 1 discriminator 2 view .LVU1129
 3779              	.L339:
3158:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 3780              		.loc 2 3158 9 view .LVU1130
 3781 019e E36D     		ldr	r3, [r4, #92]
 3782 01a0 23F48023 		bic	r3, r3, #262144
 3783 01a4 E365     		str	r3, [r4, #92]
3164:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 3784              		.loc 2 3164 9 view .LVU1131
 3785 01a6 2368     		ldr	r3, [r4]
 3786              	.LVL264:
 3787              	.LBB497:
 3788              	.LBI497:
7369:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 3789              		.loc 1 7369 22 view .LVU1132
ARM GAS  /tmp/ccJLHc1D.s 			page 304


 3790              	.LBB498:
7371:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 3791              		.loc 1 7371 3 view .LVU1133
 3792 01a8 4FF40072 		mov	r2, #512
 3793 01ac 1A60     		str	r2, [r3]
 3794              	.LVL265:
7371:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 3795              		.loc 1 7371 3 is_stmt 0 view .LVU1134
 3796              	.LBE498:
 3797              	.LBE497:
3167:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 3798              		.loc 2 3167 9 is_stmt 1 view .LVU1135
3167:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 3799              		.loc 2 3167 12 is_stmt 0 view .LVU1136
 3800 01ae 2A7B     		ldrb	r2, [r5, #12]	@ zero_extendqisi2
 3801 01b0 012A     		cmp	r2, #1
 3802              	.LBB499:
 3803              	.LBB500:
7766:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 3804              		.loc 1 7766 3 view .LVU1137
 3805 01b2 5A68     		ldr	r2, [r3, #4]
 3806              	.LBE500:
 3807              	.LBE499:
3169:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
 3808              		.loc 2 3169 11 is_stmt 1 view .LVU1138
 3809              	.LVL266:
 3810              	.LBB502:
 3811              	.LBI499:
7764:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 3812              		.loc 1 7764 22 view .LVU1139
 3813              	.LBB501:
7766:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 3814              		.loc 1 7766 3 view .LVU1140
 3815 01b4 0CBF     		ite	eq
 3816 01b6 42F40072 		orreq	r2, r2, #512
 3817              	.LBE501:
 3818              	.LBE502:
3173:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
 3819              		.loc 2 3173 11 view .LVU1141
 3820              	.LVL267:
 3821              	.LBB503:
 3822              	.LBI482:
7885:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 3823              		.loc 1 7885 22 view .LVU1142
 3824              	.LBB484:
 3825              		.loc 1 7887 3 view .LVU1143
 3826 01ba 22F40072 		bicne	r2, r2, #512
 3827 01be 71E7     		b	.L368
 3828              	.LVL268:
 3829              	.L337:
 3830              		.loc 1 7887 3 is_stmt 0 view .LVU1144
 3831              	.LBE484:
 3832              	.LBE503:
 3833              	.LBB504:
 3834              	.LBI504:
 981:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3835              		.loc 3 981 31 is_stmt 1 discriminator 2 view .LVU1145
ARM GAS  /tmp/ccJLHc1D.s 			page 305


 3836              	.LBB505:
 983:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 3837              		.loc 3 983 3 discriminator 2 view .LVU1146
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3838              		.loc 3 988 4 discriminator 2 view .LVU1147
 3839              		.syntax unified
 3840              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3841 01c0 93FAA3F3 		rbit r3, r3
 3842              	@ 0 "" 2
 3843              	.LVL269:
 3844              		.loc 3 1001 3 discriminator 2 view .LVU1148
 3845              		.loc 3 1001 3 is_stmt 0 discriminator 2 view .LVU1149
 3846              		.thumb
 3847              		.syntax unified
 3848              	.LBE505:
 3849              	.LBE504:
3118:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           }
 3850              		.loc 2 3118 13 discriminator 2 view .LVU1150
 3851 01c4 B3FA83F3 		clz	r3, r3
 3852 01c8 03F01F03 		and	r3, r3, #31
 3853 01cc E0E7     		b	.L366
 3854              	.L332:
3129:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           break;
 3855              		.loc 2 3129 11 is_stmt 1 view .LVU1151
 3856 01ce 0022     		movs	r2, #0
 3857 01d0 A4E7     		b	.L367
 3858              	.LVL270:
 3859              	.L343:
3195:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmpAWDLowThresholdShifted  = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowThre
 3860              		.loc 2 3195 5 view .LVU1152
3195:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmpAWDLowThresholdShifted  = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowThre
 3861              		.loc 2 3195 34 is_stmt 0 view .LVU1153
 3862 01d2 DA68     		ldr	r2, [r3, #12]
 3863 01d4 02F01802 		and	r2, r2, #24
 3864 01d8 182A     		cmp	r2, #24
 3865 01da 18BF     		it	ne
 3866 01dc D968     		ldrne	r1, [r3, #12]
3196:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 3867              		.loc 2 3196 34 view .LVU1154
 3868 01de DA68     		ldr	r2, [r3, #12]
3195:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmpAWDLowThresholdShifted  = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowThre
 3869              		.loc 2 3195 34 view .LVU1155
 3870 01e0 1EBF     		ittt	ne
 3871 01e2 C1F3C101 		ubfxne	r1, r1, #3, #2
 3872 01e6 C1F10201 		rsbne	r1, r1, #2
 3873 01ea 4900     		lslne	r1, r1, #1
3196:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 3874              		.loc 2 3196 34 view .LVU1156
 3875 01ec 02F01802 		and	r2, r2, #24
3195:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmpAWDLowThresholdShifted  = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowThre
 3876              		.loc 2 3195 34 view .LVU1157
 3877 01f0 1ABF     		itte	ne
 3878 01f2 01F01E01 		andne	r1, r1, #30
 3879 01f6 CE40     		lsrne	r6, r6, r1
 3880 01f8 B600     		lsleq	r6, r6, #2
 3881              	.LVL271:
3196:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
ARM GAS  /tmp/ccJLHc1D.s 			page 306


 3882              		.loc 2 3196 5 is_stmt 1 view .LVU1158
3196:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 3883              		.loc 2 3196 34 is_stmt 0 view .LVU1159
 3884 01fa 182A     		cmp	r2, #24
 3885 01fc 1FBF     		itttt	ne
 3886 01fe DA68     		ldrne	r2, [r3, #12]
 3887 0200 C2F3C102 		ubfxne	r2, r2, #3, #2
 3888 0204 C2F10202 		rsbne	r2, r2, #2
 3889 0208 5200     		lslne	r2, r2, #1
 3890 020a 1ABF     		itte	ne
 3891 020c 02F01E02 		andne	r2, r2, #30
 3892 0210 D540     		lsrne	r5, r5, r2
 3893 0212 AD00     		lsleq	r5, r5, #2
 3894 0214 59E7     		b	.L344
 3895              	.LVL272:
 3896              	.L348:
3026:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 3897              		.loc 2 3026 3 view .LVU1160
 3898 0216 0220     		movs	r0, #2
 3899              	.LVL273:
3026:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 3900              		.loc 2 3026 3 view .LVU1161
 3901 0218 65E7     		b	.L316
 3902              	.L370:
 3903 021a 00BF     		.align	2
 3904              	.L369:
 3905 021c 0000C07D 		.word	2109734912
 3906 0220 FFFF8700 		.word	8912895
 3907 0224 FFFF0701 		.word	17301503
 3908 0228 FFFF8701 		.word	25690111
 3909 022c FFFF1700 		.word	1572863
 3910              		.cfi_endproc
 3911              	.LFE378:
 3913              		.section	.text.HAL_ADC_GetState,"ax",%progbits
 3914              		.align	1
 3915              		.global	HAL_ADC_GetState
 3916              		.syntax unified
 3917              		.thumb
 3918              		.thumb_func
 3919              		.fpu fpv4-sp-d16
 3921              	HAL_ADC_GetState:
 3922              	.LVL274:
 3923              	.LFB379:
3243:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Check the parameters */
 3924              		.loc 2 3243 1 is_stmt 1 view -0
 3925              		.cfi_startproc
 3926              		@ args = 0, pretend = 0, frame = 0
 3927              		@ frame_needed = 0, uses_anonymous_args = 0
 3928              		@ link register save eliminated.
3245:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 3929              		.loc 2 3245 3 view .LVU1163
3248:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
 3930              		.loc 2 3248 3 view .LVU1164
3248:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
 3931              		.loc 2 3248 14 is_stmt 0 view .LVU1165
 3932 0000 C06D     		ldr	r0, [r0, #92]
 3933              	.LVL275:
ARM GAS  /tmp/ccJLHc1D.s 			page 307


3249:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 3934              		.loc 2 3249 1 view .LVU1166
 3935 0002 7047     		bx	lr
 3936              		.cfi_endproc
 3937              	.LFE379:
 3939              		.section	.text.HAL_ADC_GetError,"ax",%progbits
 3940              		.align	1
 3941              		.global	HAL_ADC_GetError
 3942              		.syntax unified
 3943              		.thumb
 3944              		.thumb_func
 3945              		.fpu fpv4-sp-d16
 3947              	HAL_ADC_GetError:
 3948              	.LVL276:
 3949              	.LFB380:
3257:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Check the parameters */
 3950              		.loc 2 3257 1 is_stmt 1 view -0
 3951              		.cfi_startproc
 3952              		@ args = 0, pretend = 0, frame = 0
 3953              		@ frame_needed = 0, uses_anonymous_args = 0
 3954              		@ link register save eliminated.
3259:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 3955              		.loc 2 3259 3 view .LVU1168
3261:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
 3956              		.loc 2 3261 3 view .LVU1169
3261:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
 3957              		.loc 2 3261 14 is_stmt 0 view .LVU1170
 3958 0000 006E     		ldr	r0, [r0, #96]
 3959              	.LVL277:
3262:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 3960              		.loc 2 3262 1 view .LVU1171
 3961 0002 7047     		bx	lr
 3962              		.cfi_endproc
 3963              	.LFE380:
 3965              		.section	.text.ADC_ConversionStop,"ax",%progbits
 3966              		.align	1
 3967              		.global	ADC_ConversionStop
 3968              		.syntax unified
 3969              		.thumb
 3970              		.thumb_func
 3971              		.fpu fpv4-sp-d16
 3973              	ADC_ConversionStop:
 3974              	.LVL278:
 3975              	.LFB381:
3287:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tickstart;
 3976              		.loc 2 3287 1 is_stmt 1 view -0
 3977              		.cfi_startproc
 3978              		@ args = 0, pretend = 0, frame = 0
 3979              		@ frame_needed = 0, uses_anonymous_args = 0
3288:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t Conversion_Timeout_CPU_cycles = 0UL;
 3980              		.loc 2 3288 3 view .LVU1173
3289:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t conversion_group_reassigned = ConversionGroup;
 3981              		.loc 2 3289 3 view .LVU1174
3290:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_ADC_CR_ADSTART_JADSTART;
 3982              		.loc 2 3290 3 view .LVU1175
3291:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
 3983              		.loc 2 3291 3 view .LVU1176
ARM GAS  /tmp/ccJLHc1D.s 			page 308


3292:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
 3984              		.loc 2 3292 3 view .LVU1177
3293:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 3985              		.loc 2 3293 3 view .LVU1178
3296:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_CONVERSION_GROUP(ConversionGroup));
 3986              		.loc 2 3296 3 view .LVU1179
3297:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 3987              		.loc 2 3297 3 view .LVU1180
3301:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 3988              		.loc 2 3301 3 view .LVU1181
3287:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tickstart;
 3989              		.loc 2 3287 1 is_stmt 0 view .LVU1182
 3990 0000 70B5     		push	{r4, r5, r6, lr}
 3991              	.LCFI18:
 3992              		.cfi_def_cfa_offset 16
 3993              		.cfi_offset 4, -16
 3994              		.cfi_offset 5, -12
 3995              		.cfi_offset 6, -8
 3996              		.cfi_offset 14, -4
3287:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tickstart;
 3997              		.loc 2 3287 1 view .LVU1183
 3998 0002 0446     		mov	r4, r0
3301:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 3999              		.loc 2 3301 44 view .LVU1184
 4000 0004 0068     		ldr	r0, [r0]
 4001              	.LVL279:
3301:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 4002              		.loc 2 3301 44 view .LVU1185
 4003 0006 FFF7FEFF 		bl	LL_ADC_REG_IsConversionOngoing
 4004              	.LVL280:
3302:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if ((tmp_adc_is_conversion_on_going_regular != 0UL)
 4005              		.loc 2 3302 3 is_stmt 1 view .LVU1186
3302:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if ((tmp_adc_is_conversion_on_going_regular != 0UL)
 4006              		.loc 2 3302 45 is_stmt 0 view .LVU1187
 4007 000a 2368     		ldr	r3, [r4]
 4008              	.LVL281:
 4009              	.LBB518:
 4010              	.LBI518:
6968:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 4011              		.loc 1 6968 26 is_stmt 1 view .LVU1188
 4012              	.LBB519:
6970:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 4013              		.loc 1 6970 3 view .LVU1189
6970:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 4014              		.loc 1 6970 12 is_stmt 0 view .LVU1190
 4015 000c 9A68     		ldr	r2, [r3, #8]
 4016 000e 02F00802 		and	r2, r2, #8
6970:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 4017              		.loc 1 6970 76 view .LVU1191
 4018 0012 0243     		orrs	r2, r2, r0
 4019 0014 01D1     		bne	.L374
 4020              	.LVL282:
 4021              	.L386:
6970:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 4022              		.loc 1 6970 76 view .LVU1192
 4023              	.LBE519:
 4024              	.LBE518:
ARM GAS  /tmp/ccJLHc1D.s 			page 309


3404:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
 4025              		.loc 2 3404 10 view .LVU1193
 4026 0016 0020     		movs	r0, #0
 4027              	.L375:
3405:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4028              		.loc 2 3405 1 view .LVU1194
 4029 0018 70BD     		pop	{r4, r5, r6, pc}
 4030              	.LVL283:
 4031              	.L374:
3313:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         && (hadc->Init.ContinuousConvMode == ENABLE)
 4032              		.loc 2 3313 5 is_stmt 1 view .LVU1195
3313:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         && (hadc->Init.ContinuousConvMode == ENABLE)
 4033              		.loc 2 3313 25 is_stmt 0 view .LVU1196
 4034 001a DA68     		ldr	r2, [r3, #12]
3313:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         && (hadc->Init.ContinuousConvMode == ENABLE)
 4035              		.loc 2 3313 8 view .LVU1197
 4036 001c 9001     		lsls	r0, r2, #6
 4037              	.LVL284:
3313:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         && (hadc->Init.ContinuousConvMode == ENABLE)
 4038              		.loc 2 3313 8 view .LVU1198
 4039 001e 2BD5     		bpl	.L376
3315:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        )
 4040              		.loc 2 3315 9 view .LVU1199
 4041 0020 A08B     		ldrh	r0, [r4, #28]
 4042 0022 40F20112 		movw	r2, #257
 4043 0026 9042     		cmp	r0, r2
 4044 0028 26D1     		bne	.L376
 4045 002a 264A     		ldr	r2, .L406
 4046              	.LVL285:
 4047              	.L377:
3322:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 4048              		.loc 2 3322 13 is_stmt 1 view .LVU1200
3322:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 4049              		.loc 2 3322 14 is_stmt 0 view .LVU1201
 4050 002c 1968     		ldr	r1, [r3]
3322:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 4051              		.loc 2 3322 13 view .LVU1202
 4052 002e 4906     		lsls	r1, r1, #25
 4053 0030 16D5     		bpl	.L378
3338:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 4054              		.loc 2 3338 7 is_stmt 1 view .LVU1203
 4055 0032 4022     		movs	r2, #64
 4056              	.LVL286:
3338:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 4057              		.loc 2 3338 7 is_stmt 0 view .LVU1204
 4058 0034 1A60     		str	r2, [r3]
 4059              	.LVL287:
3342:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 4060              		.loc 2 3342 5 is_stmt 1 view .LVU1205
3319:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4061              		.loc 2 3319 35 is_stmt 0 view .LVU1206
 4062 0036 0121     		movs	r1, #1
 4063              	.LVL288:
 4064              	.L379:
3345:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 4065              		.loc 2 3345 7 is_stmt 1 view .LVU1207
3345:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
ARM GAS  /tmp/ccJLHc1D.s 			page 310


 4066              		.loc 2 3345 11 is_stmt 0 view .LVU1208
 4067 0038 1846     		mov	r0, r3
 4068 003a FFF7FEFF 		bl	LL_ADC_REG_IsConversionOngoing
 4069              	.LVL289:
3345:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 4070              		.loc 2 3345 10 view .LVU1209
 4071 003e 58B1     		cbz	r0, .L381
3347:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 4072              		.loc 2 3347 9 is_stmt 1 view .LVU1210
3347:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 4073              		.loc 2 3347 13 is_stmt 0 view .LVU1211
 4074 0040 2268     		ldr	r2, [r4]
 4075              	.LVL290:
 4076              	.LBB520:
 4077              	.LBI520:
6632:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 4078              		.loc 1 6632 26 is_stmt 1 view .LVU1212
 4079              	.LBB521:
6634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 4080              		.loc 1 6634 3 view .LVU1213
6634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 4081              		.loc 1 6634 12 is_stmt 0 view .LVU1214
 4082 0042 9368     		ldr	r3, [r2, #8]
6634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 4083              		.loc 1 6634 70 view .LVU1215
 4084 0044 9E07     		lsls	r6, r3, #30
 4085 0046 07D4     		bmi	.L381
 4086              	.LVL291:
6634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 4087              		.loc 1 6634 70 view .LVU1216
 4088              	.LBE521:
 4089              	.LBE520:
3350:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
 4090              		.loc 2 3350 11 is_stmt 1 view .LVU1217
 4091              	.LBB522:
 4092              	.LBI522:
6727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 4093              		.loc 1 6727 22 view .LVU1218
 4094              	.LBB523:
6732:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4095              		.loc 1 6732 3 view .LVU1219
 4096 0048 9368     		ldr	r3, [r2, #8]
 4097 004a 23F00043 		bic	r3, r3, #-2147483648
 4098 004e 23F03F03 		bic	r3, r3, #63
 4099 0052 43F01003 		orr	r3, r3, #16
 4100 0056 9360     		str	r3, [r2, #8]
 4101              	.LVL292:
 4102              	.L381:
6732:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4103              		.loc 1 6732 3 is_stmt 0 view .LVU1220
 4104              	.LBE523:
 4105              	.LBE522:
3356:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 4106              		.loc 2 3356 5 is_stmt 1 view .LVU1221
3356:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 4107              		.loc 2 3356 8 is_stmt 0 view .LVU1222
 4108 0058 0129     		cmp	r1, #1
ARM GAS  /tmp/ccJLHc1D.s 			page 311


 4109 005a 0FD1     		bne	.L380
3380:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
 4110              		.loc 2 3380 37 view .LVU1223
 4111 005c 0425     		movs	r5, #4
 4112 005e 22E0     		b	.L382
 4113              	.LVL293:
 4114              	.L378:
3324:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 4115              		.loc 2 3324 9 is_stmt 1 view .LVU1224
3324:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 4116              		.loc 2 3324 12 is_stmt 0 view .LVU1225
 4117 0060 013A     		subs	r2, r2, #1
 4118              	.LVL294:
3324:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 4119              		.loc 2 3324 12 view .LVU1226
 4120 0062 E3D1     		bne	.L377
 4121              	.LVL295:
 4122              	.L405:
3392:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4123              		.loc 2 3392 9 is_stmt 1 view .LVU1227
 4124 0064 E36D     		ldr	r3, [r4, #92]
 4125 0066 43F01003 		orr	r3, r3, #16
 4126 006a E365     		str	r3, [r4, #92]
3395:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4127              		.loc 2 3395 9 view .LVU1228
 4128 006c 236E     		ldr	r3, [r4, #96]
 4129 006e 43F00103 		orr	r3, r3, #1
 4130 0072 2366     		str	r3, [r4, #96]
3397:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 4131              		.loc 2 3397 9 view .LVU1229
3397:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 4132              		.loc 2 3397 16 is_stmt 0 view .LVU1230
 4133 0074 0120     		movs	r0, #1
 4134 0076 CFE7     		b	.L375
 4135              	.LVL296:
 4136              	.L376:
3342:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 4137              		.loc 2 3342 5 is_stmt 1 view .LVU1231
3342:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 4138              		.loc 2 3342 8 is_stmt 0 view .LVU1232
 4139 0078 0229     		cmp	r1, #2
 4140 007a DDD1     		bne	.L379
 4141              	.LVL297:
 4142              	.L380:
3359:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 4143              		.loc 2 3359 7 is_stmt 1 view .LVU1233
3359:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 4144              		.loc 2 3359 11 is_stmt 0 view .LVU1234
 4145 007c 2268     		ldr	r2, [r4]
 4146              	.LVL298:
 4147              	.LBB524:
 4148              	.LBI524:
6968:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 4149              		.loc 1 6968 26 is_stmt 1 view .LVU1235
 4150              	.LBB525:
6970:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 4151              		.loc 1 6970 3 view .LVU1236
ARM GAS  /tmp/ccJLHc1D.s 			page 312


6970:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 4152              		.loc 1 6970 12 is_stmt 0 view .LVU1237
 4153 007e 9368     		ldr	r3, [r2, #8]
6970:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 4154              		.loc 1 6970 76 view .LVU1238
 4155 0080 1807     		lsls	r0, r3, #28
 4156 0082 0AD5     		bpl	.L383
 4157              	.LVL299:
6970:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 4158              		.loc 1 6970 76 view .LVU1239
 4159              	.LBE525:
 4160              	.LBE524:
3361:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 4161              		.loc 2 3361 9 is_stmt 1 view .LVU1240
 4162              	.LBB526:
 4163              	.LBI526:
6632:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 4164              		.loc 1 6632 26 view .LVU1241
 4165              	.LBB527:
6634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 4166              		.loc 1 6634 3 view .LVU1242
6634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 4167              		.loc 1 6634 12 is_stmt 0 view .LVU1243
 4168 0084 9368     		ldr	r3, [r2, #8]
6634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 4169              		.loc 1 6634 70 view .LVU1244
 4170 0086 9B07     		lsls	r3, r3, #30
 4171 0088 07D4     		bmi	.L383
 4172              	.LVL300:
6634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 4173              		.loc 1 6634 70 view .LVU1245
 4174              	.LBE527:
 4175              	.LBE526:
3364:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
 4176              		.loc 2 3364 11 is_stmt 1 view .LVU1246
 4177              	.LBB528:
 4178              	.LBI528:
6952:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 4179              		.loc 1 6952 22 view .LVU1247
 4180              	.LBB529:
6957:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4181              		.loc 1 6957 3 view .LVU1248
 4182 008a 9368     		ldr	r3, [r2, #8]
 4183 008c 23F00043 		bic	r3, r3, #-2147483648
 4184 0090 23F03F03 		bic	r3, r3, #63
 4185 0094 43F02003 		orr	r3, r3, #32
 4186 0098 9360     		str	r3, [r2, #8]
 4187              	.LVL301:
 4188              	.L383:
6957:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4189              		.loc 1 6957 3 is_stmt 0 view .LVU1249
 4190              	.LBE529:
 4191              	.LBE528:
3370:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 4192              		.loc 2 3370 5 is_stmt 1 view .LVU1250
 4193 009a 0229     		cmp	r1, #2
 4194 009c 10D0     		beq	.L389
ARM GAS  /tmp/ccJLHc1D.s 			page 313


3373:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
 4195              		.loc 2 3373 37 is_stmt 0 view .LVU1251
 4196 009e 0329     		cmp	r1, #3
 4197 00a0 14BF     		ite	ne
 4198 00a2 0425     		movne	r5, #4
 4199 00a4 0C25     		moveq	r5, #12
 4200              	.L382:
 4201              	.LVL302:
3385:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4202              		.loc 2 3385 5 is_stmt 1 view .LVU1252
3385:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4203              		.loc 2 3385 17 is_stmt 0 view .LVU1253
 4204 00a6 FFF7FEFF 		bl	HAL_GetTick
 4205              	.LVL303:
 4206 00aa 0646     		mov	r6, r0
 4207              	.LVL304:
3387:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 4208              		.loc 2 3387 5 is_stmt 1 view .LVU1254
 4209              	.L384:
3387:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 4210              		.loc 2 3387 11 view .LVU1255
3387:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 4211              		.loc 2 3387 17 is_stmt 0 view .LVU1256
 4212 00ac 2368     		ldr	r3, [r4]
3387:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 4213              		.loc 2 3387 27 view .LVU1257
 4214 00ae 9B68     		ldr	r3, [r3, #8]
3387:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 4215              		.loc 2 3387 11 view .LVU1258
 4216 00b0 2B42     		tst	r3, r5
 4217 00b2 B0D0     		beq	.L386
3389:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 4218              		.loc 2 3389 7 is_stmt 1 view .LVU1259
3389:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 4219              		.loc 2 3389 12 is_stmt 0 view .LVU1260
 4220 00b4 FFF7FEFF 		bl	HAL_GetTick
 4221              	.LVL305:
3389:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 4222              		.loc 2 3389 26 view .LVU1261
 4223 00b8 801B     		subs	r0, r0, r6
3389:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 4224              		.loc 2 3389 10 view .LVU1262
 4225 00ba 0528     		cmp	r0, #5
 4226 00bc F6D9     		bls	.L384
 4227 00be D1E7     		b	.L405
 4228              	.LVL306:
 4229              	.L389:
3370:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 4230              		.loc 2 3370 5 view .LVU1263
 4231 00c0 0825     		movs	r5, #8
 4232 00c2 F0E7     		b	.L382
 4233              	.L407:
 4234              		.align	2
 4235              	.L406:
 4236 00c4 010040A3 		.word	-1556086783
 4237              		.cfi_endproc
 4238              	.LFE381:
ARM GAS  /tmp/ccJLHc1D.s 			page 314


 4240              		.section	.text.ADC_Enable,"ax",%progbits
 4241              		.align	1
 4242              		.global	ADC_Enable
 4243              		.syntax unified
 4244              		.thumb
 4245              		.thumb_func
 4246              		.fpu fpv4-sp-d16
 4248              	ADC_Enable:
 4249              	.LVL307:
 4250              	.LFB382:
3417:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tickstart;
 4251              		.loc 2 3417 1 is_stmt 1 view -0
 4252              		.cfi_startproc
 4253              		@ args = 0, pretend = 0, frame = 0
 4254              		@ frame_needed = 0, uses_anonymous_args = 0
3418:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4255              		.loc 2 3418 3 view .LVU1265
3424:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 4256              		.loc 2 3424 3 view .LVU1266
3424:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 4257              		.loc 2 3424 7 is_stmt 0 view .LVU1267
 4258 0000 0268     		ldr	r2, [r0]
 4259              	.LVL308:
 4260              	.LBB544:
 4261              	.LBI544:
6621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 4262              		.loc 1 6621 26 is_stmt 1 view .LVU1268
 4263              	.LBB545:
6623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 4264              		.loc 1 6623 3 view .LVU1269
6623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 4265              		.loc 1 6623 12 is_stmt 0 view .LVU1270
 4266 0002 9368     		ldr	r3, [r2, #8]
 4267              	.LVL309:
6623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 4268              		.loc 1 6623 12 view .LVU1271
 4269              	.LBE545:
 4270              	.LBE544:
3417:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tickstart;
 4271              		.loc 2 3417 1 view .LVU1272
 4272 0004 70B5     		push	{r4, r5, r6, lr}
 4273              	.LCFI19:
 4274              		.cfi_def_cfa_offset 16
 4275              		.cfi_offset 4, -16
 4276              		.cfi_offset 5, -12
 4277              		.cfi_offset 6, -8
 4278              		.cfi_offset 14, -4
3417:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tickstart;
 4279              		.loc 2 3417 1 view .LVU1273
 4280 0006 0446     		mov	r4, r0
3424:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 4281              		.loc 2 3424 6 view .LVU1274
 4282 0008 D807     		lsls	r0, r3, #31
 4283              	.LVL310:
3424:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 4284              		.loc 2 3424 6 view .LVU1275
 4285 000a 01D5     		bpl	.L409
ARM GAS  /tmp/ccJLHc1D.s 			page 315


 4286              	.L415:
3473:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
 4287              		.loc 2 3473 10 view .LVU1276
 4288 000c 0020     		movs	r0, #0
 4289              	.L410:
3474:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4290              		.loc 2 3474 1 view .LVU1277
 4291 000e 70BD     		pop	{r4, r5, r6, pc}
 4292              	.LVL311:
 4293              	.L409:
3427:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 4294              		.loc 2 3427 5 is_stmt 1 view .LVU1278
3427:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 4295              		.loc 2 3427 24 is_stmt 0 view .LVU1279
 4296 0010 9168     		ldr	r1, [r2, #8]
3427:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 4297              		.loc 2 3427 8 view .LVU1280
 4298 0012 144B     		ldr	r3, .L418
 4299 0014 1942     		tst	r1, r3
 4300 0016 09D0     		beq	.L411
 4301              	.L417:
 4302              	.LVL312:
 4303              	.LBB546:
 4304              	.LBI546:
3416:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
 4305              		.loc 2 3416 19 is_stmt 1 view .LVU1281
 4306              	.LBB547:
3462:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4307              		.loc 2 3462 9 view .LVU1282
 4308 0018 E36D     		ldr	r3, [r4, #92]
 4309 001a 43F01003 		orr	r3, r3, #16
 4310 001e E365     		str	r3, [r4, #92]
3465:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4311              		.loc 2 3465 9 view .LVU1283
 4312 0020 236E     		ldr	r3, [r4, #96]
 4313 0022 43F00103 		orr	r3, r3, #1
 4314 0026 2366     		str	r3, [r4, #96]
3467:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 4315              		.loc 2 3467 9 view .LVU1284
 4316              	.LVL313:
3465:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4317              		.loc 2 3465 9 is_stmt 0 view .LVU1285
 4318 0028 0120     		movs	r0, #1
 4319 002a F0E7     		b	.L410
 4320              	.L411:
3465:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4321              		.loc 2 3465 9 view .LVU1286
 4322              	.LBE547:
 4323              	.LBE546:
3439:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4324              		.loc 2 3439 5 is_stmt 1 view .LVU1287
 4325              	.LVL314:
 4326              	.LBB548:
 4327              	.LBI548:
6582:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 4328              		.loc 1 6582 22 view .LVU1288
 4329              	.LBB549:
ARM GAS  /tmp/ccJLHc1D.s 			page 316


6587:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4330              		.loc 1 6587 3 view .LVU1289
 4331 002c 9368     		ldr	r3, [r2, #8]
 4332 002e 0E4D     		ldr	r5, .L418+4
 4333 0030 2B40     		ands	r3, r3, r5
 4334 0032 43F00103 		orr	r3, r3, #1
 4335 0036 9360     		str	r3, [r2, #8]
 4336              	.LVL315:
6587:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4337              		.loc 1 6587 3 is_stmt 0 view .LVU1290
 4338              	.LBE549:
 4339              	.LBE548:
3442:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4340              		.loc 2 3442 5 is_stmt 1 view .LVU1291
3442:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4341              		.loc 2 3442 17 is_stmt 0 view .LVU1292
 4342 0038 FFF7FEFF 		bl	HAL_GetTick
 4343              	.LVL316:
 4344 003c 0646     		mov	r6, r0
 4345              	.LVL317:
3444:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 4346              		.loc 2 3444 5 is_stmt 1 view .LVU1293
 4347              	.L412:
3444:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 4348              		.loc 2 3444 11 view .LVU1294
3444:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 4349              		.loc 2 3444 12 is_stmt 0 view .LVU1295
 4350 003e 2268     		ldr	r2, [r4]
 4351 0040 1368     		ldr	r3, [r2]
3444:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 4352              		.loc 2 3444 11 view .LVU1296
 4353 0042 DB07     		lsls	r3, r3, #31
 4354 0044 E2D4     		bmi	.L415
3454:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 4355              		.loc 2 3454 7 is_stmt 1 view .LVU1297
 4356              	.LVL318:
 4357              	.LBB550:
 4358              	.LBI550:
6621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 4359              		.loc 1 6621 26 view .LVU1298
 4360              	.LBB551:
6623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 4361              		.loc 1 6623 3 view .LVU1299
6623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 4362              		.loc 1 6623 12 is_stmt 0 view .LVU1300
 4363 0046 9368     		ldr	r3, [r2, #8]
 4364              	.LVL319:
6623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 4365              		.loc 1 6623 12 view .LVU1301
 4366              	.LBE551:
 4367              	.LBE550:
3454:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 4368              		.loc 2 3454 10 view .LVU1302
 4369 0048 D907     		lsls	r1, r3, #31
3456:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 4370              		.loc 2 3456 9 is_stmt 1 view .LVU1303
 4371              	.LVL320:
ARM GAS  /tmp/ccJLHc1D.s 			page 317


 4372              	.LBB552:
 4373              	.LBI552:
6582:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 4374              		.loc 1 6582 22 view .LVU1304
 4375              	.LBB553:
6587:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4376              		.loc 1 6587 3 view .LVU1305
 4377 004a 5FBF     		itttt	pl
 4378 004c 9368     		ldrpl	r3, [r2, #8]
 4379 004e 2B40     		andpl	r3, r3, r5
 4380 0050 43F00103 		orrpl	r3, r3, #1
 4381 0054 9360     		strpl	r3, [r2, #8]
 4382              	.LVL321:
6587:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4383              		.loc 1 6587 3 is_stmt 0 view .LVU1306
 4384              	.LBE553:
 4385              	.LBE552:
3459:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 4386              		.loc 2 3459 7 is_stmt 1 view .LVU1307
3459:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 4387              		.loc 2 3459 12 is_stmt 0 view .LVU1308
 4388 0056 FFF7FEFF 		bl	HAL_GetTick
 4389              	.LVL322:
3459:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 4390              		.loc 2 3459 26 view .LVU1309
 4391 005a 801B     		subs	r0, r0, r6
3459:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 4392              		.loc 2 3459 10 view .LVU1310
 4393 005c 0228     		cmp	r0, #2
 4394 005e EED9     		bls	.L412
 4395 0060 DAE7     		b	.L417
 4396              	.L419:
 4397 0062 00BF     		.align	2
 4398              	.L418:
 4399 0064 3F000080 		.word	-2147483585
 4400 0068 C0FFFF7F 		.word	2147483584
 4401              		.cfi_endproc
 4402              	.LFE382:
 4404              		.section	.text.HAL_ADC_Start,"ax",%progbits
 4405              		.align	1
 4406              		.global	HAL_ADC_Start
 4407              		.syntax unified
 4408              		.thumb
 4409              		.thumb_func
 4410              		.fpu fpv4-sp-d16
 4412              	HAL_ADC_Start:
 4413              	.LVL323:
 4414              	.LFB361:
1232:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 4415              		.loc 2 1232 1 is_stmt 1 view -0
 4416              		.cfi_startproc
 4417              		@ args = 0, pretend = 0, frame = 0
 4418              		@ frame_needed = 0, uses_anonymous_args = 0
1233:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
 4419              		.loc 2 1233 3 view .LVU1312
1235:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
 4420              		.loc 2 1235 3 view .LVU1313
ARM GAS  /tmp/ccJLHc1D.s 			page 318


1236:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
 4421              		.loc 2 1236 3 view .LVU1314
1232:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 4422              		.loc 2 1232 1 is_stmt 0 view .LVU1315
 4423 0000 70B5     		push	{r4, r5, r6, lr}
 4424              	.LCFI20:
 4425              		.cfi_def_cfa_offset 16
 4426              		.cfi_offset 4, -16
 4427              		.cfi_offset 5, -12
 4428              		.cfi_offset 6, -8
 4429              		.cfi_offset 14, -4
1232:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 4430              		.loc 2 1232 1 view .LVU1316
 4431 0002 0446     		mov	r4, r0
1236:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
 4432              		.loc 2 1236 55 view .LVU1317
 4433 0004 0068     		ldr	r0, [r0]
 4434              	.LVL324:
1236:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
 4435              		.loc 2 1236 35 view .LVU1318
 4436 0006 B0F1A04F 		cmp	r0, #1342177280
 4437 000a 5AD0     		beq	.L432
1236:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
 4438              		.loc 2 1236 35 discriminator 2 view .LVU1319
 4439 000c 3A49     		ldr	r1, .L444
 4440 000e 3B4B     		ldr	r3, .L444+4
 4441 0010 3B4A     		ldr	r2, .L444+8
 4442 0012 8842     		cmp	r0, r1
 4443 0014 08BF     		it	eq
 4444 0016 1346     		moveq	r3, r2
 4445              	.L421:
 4446              	.LVL325:
 4447              	.LBB558:
 4448              	.LBI558:
6284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 4449              		.loc 1 6284 26 is_stmt 1 discriminator 6 view .LVU1320
 4450              	.LBB559:
6286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 4451              		.loc 1 6286 3 discriminator 6 view .LVU1321
6286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 4452              		.loc 1 6286 21 is_stmt 0 discriminator 6 view .LVU1322
 4453 0018 9E68     		ldr	r6, [r3, #8]
 4454              	.LVL326:
6286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 4455              		.loc 1 6286 21 discriminator 6 view .LVU1323
 4456              	.LBE559:
 4457              	.LBE558:
1240:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4458              		.loc 2 1240 3 is_stmt 1 discriminator 6 view .LVU1324
1243:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 4459              		.loc 2 1243 3 discriminator 6 view .LVU1325
1243:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 4460              		.loc 2 1243 7 is_stmt 0 discriminator 6 view .LVU1326
 4461 001a FFF7FEFF 		bl	LL_ADC_REG_IsConversionOngoing
 4462              	.LVL327:
1243:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 4463              		.loc 2 1243 6 discriminator 6 view .LVU1327
ARM GAS  /tmp/ccJLHc1D.s 			page 319


 4464 001e 0546     		mov	r5, r0
 4465 0020 0028     		cmp	r0, #0
 4466 0022 66D1     		bne	.L435
1246:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4467              		.loc 2 1246 5 is_stmt 1 view .LVU1328
1246:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4468              		.loc 2 1246 5 view .LVU1329
 4469 0024 94F85830 		ldrb	r3, [r4, #88]	@ zero_extendqisi2
 4470 0028 012B     		cmp	r3, #1
 4471 002a 62D0     		beq	.L435
1246:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4472              		.loc 2 1246 5 discriminator 2 view .LVU1330
 4473 002c 0123     		movs	r3, #1
 4474 002e 84F85830 		strb	r3, [r4, #88]
1246:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4475              		.loc 2 1246 5 discriminator 2 view .LVU1331
1249:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4476              		.loc 2 1249 5 discriminator 2 view .LVU1332
1249:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4477              		.loc 2 1249 22 is_stmt 0 discriminator 2 view .LVU1333
 4478 0032 2046     		mov	r0, r4
 4479 0034 FFF7FEFF 		bl	ADC_Enable
 4480              	.LVL328:
1252:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 4481              		.loc 2 1252 5 is_stmt 1 discriminator 2 view .LVU1334
1252:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 4482              		.loc 2 1252 8 is_stmt 0 discriminator 2 view .LVU1335
 4483 0038 0028     		cmp	r0, #0
 4484 003a 57D1     		bne	.L423
1257:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
 4485              		.loc 2 1257 7 view .LVU1336
 4486 003c E36D     		ldr	r3, [r4, #92]
1265:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4487              		.loc 2 1265 12 view .LVU1337
 4488 003e 2E49     		ldr	r1, .L444
1257:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
 4489              		.loc 2 1257 7 view .LVU1338
 4490 0040 23F47063 		bic	r3, r3, #3840
 4491 0044 23F00103 		bic	r3, r3, #1
 4492 0048 43F48073 		orr	r3, r3, #256
 4493 004c E365     		str	r3, [r4, #92]
1265:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4494              		.loc 2 1265 12 view .LVU1339
 4495 004e 2368     		ldr	r3, [r4]
 4496 0050 8B42     		cmp	r3, r1
 4497              	.LBB561:
 4498              	.LBB560:
6286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 4499              		.loc 1 6286 10 view .LVU1340
 4500 0052 06F01F02 		and	r2, r6, #31
 4501              	.LVL329:
6286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 4502              		.loc 1 6286 10 view .LVU1341
 4503              	.LBE560:
 4504              	.LBE561:
1257:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
 4505              		.loc 2 1257 7 is_stmt 1 view .LVU1342
ARM GAS  /tmp/ccJLHc1D.s 			page 320


1265:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4506              		.loc 2 1265 7 view .LVU1343
1265:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4507              		.loc 2 1265 12 is_stmt 0 view .LVU1344
 4508 0056 36D0     		beq	.L436
1265:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4509              		.loc 2 1265 12 discriminator 1 view .LVU1345
 4510 0058 01F58061 		add	r1, r1, #1024
 4511 005c 8B42     		cmp	r3, r1
 4512 005e 35D1     		bne	.L437
1265:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4513              		.loc 2 1265 12 view .LVU1346
 4514 0060 A1F58071 		sub	r1, r1, #256
 4515              	.L424:
1266:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****          )
 4516              		.loc 2 1266 11 view .LVU1347
 4517 0064 1AB9     		cbnz	r2, .L426
 4518              	.L425:
1269:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 4519              		.loc 2 1269 9 is_stmt 1 view .LVU1348
 4520 0066 E56D     		ldr	r5, [r4, #92]
 4521 0068 25F48015 		bic	r5, r5, #1048576
 4522 006c E565     		str	r5, [r4, #92]
 4523              	.L426:
1275:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 4524              		.loc 2 1275 7 view .LVU1349
1275:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 4525              		.loc 2 1275 11 is_stmt 0 view .LVU1350
 4526 006e E56D     		ldr	r5, [r4, #92]
1275:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 4527              		.loc 2 1275 10 view .LVU1351
 4528 0070 15F48055 		ands	r5, r5, #4096
1278:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 4529              		.loc 2 1278 9 is_stmt 1 view .LVU1352
 4530 0074 1CBF     		itt	ne
 4531 0076 256E     		ldrne	r5, [r4, #96]
 4532 0078 25F00605 		bicne	r5, r5, #6
1283:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 4533              		.loc 2 1283 9 view .LVU1353
 4534 007c 2566     		str	r5, [r4, #96]
1288:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4535              		.loc 2 1288 7 view .LVU1354
 4536 007e 1C25     		movs	r5, #28
 4537 0080 1D60     		str	r5, [r3]
1293:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4538              		.loc 2 1293 7 view .LVU1355
1293:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4539              		.loc 2 1293 7 view .LVU1356
1304:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4540              		.loc 2 1304 10 is_stmt 0 view .LVU1357
 4541 0082 8B42     		cmp	r3, r1
1293:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4542              		.loc 2 1293 7 view .LVU1358
 4543 0084 4FF00005 		mov	r5, #0
 4544 0088 84F85850 		strb	r5, [r4, #88]
1293:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4545              		.loc 2 1293 7 is_stmt 1 view .LVU1359
ARM GAS  /tmp/ccJLHc1D.s 			page 321


1304:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4546              		.loc 2 1304 7 view .LVU1360
1304:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4547              		.loc 2 1304 10 is_stmt 0 view .LVU1361
 4548 008c 07D0     		beq	.L429
1305:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
 4549              		.loc 2 1305 11 view .LVU1362
 4550 008e 092A     		cmp	r2, #9
 4551 0090 1ED8     		bhi	.L430
 4552 0092 40F22125 		movw	r5, #545
 4553 0096 25FA02F2 		lsr	r2, r5, r2
 4554              	.LVL330:
1305:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
 4555              		.loc 2 1305 11 view .LVU1363
 4556 009a D507     		lsls	r5, r2, #31
 4557 009c 18D5     		bpl	.L430
 4558              	.L429:
1311:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 4559              		.loc 2 1311 9 is_stmt 1 view .LVU1364
1311:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 4560              		.loc 2 1311 13 is_stmt 0 view .LVU1365
 4561 009e DA68     		ldr	r2, [r3, #12]
1311:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 4562              		.loc 2 1311 12 view .LVU1366
 4563 00a0 9201     		lsls	r2, r2, #6
1313:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
 4564              		.loc 2 1313 11 is_stmt 1 view .LVU1367
 4565 00a2 41BF     		itttt	mi
 4566 00a4 E26D     		ldrmi	r2, [r4, #92]
 4567 00a6 22F44052 		bicmi	r2, r2, #12288
 4568 00aa 42F48052 		orrmi	r2, r2, #4096
 4569 00ae E265     		strmi	r2, [r4, #92]
1317:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 4570              		.loc 2 1317 9 view .LVU1368
 4571              	.LVL331:
 4572              	.LBB562:
 4573              	.LBI562:
6707:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 4574              		.loc 1 6707 22 view .LVU1369
 4575              	.LBB563:
6712:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4576              		.loc 1 6712 3 view .LVU1370
 4577 00b0 9A68     		ldr	r2, [r3, #8]
 4578 00b2 22F00042 		bic	r2, r2, #-2147483648
 4579 00b6 22F03F02 		bic	r2, r2, #63
 4580 00ba 42F00402 		orr	r2, r2, #4
 4581 00be 9A60     		str	r2, [r3, #8]
 4582              	.LVL332:
 4583              	.L422:
6712:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4584              		.loc 1 6712 3 is_stmt 0 view .LVU1371
 4585              	.LBE563:
 4586              	.LBE562:
1355:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4587              		.loc 2 1355 1 view .LVU1372
 4588 00c0 70BD     		pop	{r4, r5, r6, pc}
 4589              	.LVL333:
ARM GAS  /tmp/ccJLHc1D.s 			page 322


 4590              	.L432:
1236:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
 4591              		.loc 2 1236 35 view .LVU1373
 4592 00c2 0F4B     		ldr	r3, .L444+8
 4593 00c4 A8E7     		b	.L421
 4594              	.LVL334:
 4595              	.L436:
1265:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4596              		.loc 2 1265 12 view .LVU1374
 4597 00c6 4FF0A041 		mov	r1, #1342177280
 4598 00ca CBE7     		b	.L424
 4599              	.L437:
 4600 00cc 1946     		mov	r1, r3
 4601 00ce CAE7     		b	.L425
 4602              	.LVL335:
 4603              	.L430:
1322:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* if Master ADC JAUTO bit is set, update Slave State in setting
 4604              		.loc 2 1322 9 is_stmt 1 view .LVU1375
 4605 00d0 E36D     		ldr	r3, [r4, #92]
 4606 00d2 43F48013 		orr	r3, r3, #1048576
 4607 00d6 E365     		str	r3, [r4, #92]
1325:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         if (READ_BIT(tmpADC_Master->CFGR, ADC_CFGR_JAUTO) != 0UL)
 4608              		.loc 2 1325 9 view .LVU1376
 4609              	.LVL336:
1326:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 4610              		.loc 2 1326 9 view .LVU1377
1326:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 4611              		.loc 2 1326 13 is_stmt 0 view .LVU1378
 4612 00d8 CB68     		ldr	r3, [r1, #12]
1326:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 4613              		.loc 2 1326 12 view .LVU1379
 4614 00da 9B01     		lsls	r3, r3, #6
 4615 00dc F0D5     		bpl	.L422
1328:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
 4616              		.loc 2 1328 11 is_stmt 1 view .LVU1380
 4617 00de E36D     		ldr	r3, [r4, #92]
 4618 00e0 23F44053 		bic	r3, r3, #12288
 4619 00e4 43F48053 		orr	r3, r3, #4096
 4620 00e8 E365     		str	r3, [r4, #92]
 4621 00ea E9E7     		b	.L422
 4622              	.LVL337:
 4623              	.L423:
1345:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 4624              		.loc 2 1345 7 discriminator 1 view .LVU1381
1345:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 4625              		.loc 2 1345 7 discriminator 1 view .LVU1382
 4626 00ec 84F85850 		strb	r5, [r4, #88]
 4627 00f0 E6E7     		b	.L422
 4628              	.LVL338:
 4629              	.L435:
1350:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 4630              		.loc 2 1350 20 is_stmt 0 view .LVU1383
 4631 00f2 0220     		movs	r0, #2
 4632 00f4 E4E7     		b	.L422
 4633              	.L445:
 4634 00f6 00BF     		.align	2
 4635              	.L444:
ARM GAS  /tmp/ccJLHc1D.s 			page 323


 4636 00f8 00010050 		.word	1342177536
 4637 00fc 00070050 		.word	1342179072
 4638 0100 00030050 		.word	1342178048
 4639              		.cfi_endproc
 4640              	.LFE361:
 4642              		.section	.text.HAL_ADC_Start_IT,"ax",%progbits
 4643              		.align	1
 4644              		.global	HAL_ADC_Start_IT
 4645              		.syntax unified
 4646              		.thumb
 4647              		.thumb_func
 4648              		.fpu fpv4-sp-d16
 4650              	HAL_ADC_Start_IT:
 4651              	.LVL339:
 4652              	.LFB365:
1745:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 4653              		.loc 2 1745 1 is_stmt 1 view -0
 4654              		.cfi_startproc
 4655              		@ args = 0, pretend = 0, frame = 0
 4656              		@ frame_needed = 0, uses_anonymous_args = 0
1746:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
 4657              		.loc 2 1746 3 view .LVU1385
1748:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
 4658              		.loc 2 1748 3 view .LVU1386
1749:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
 4659              		.loc 2 1749 3 view .LVU1387
1745:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 4660              		.loc 2 1745 1 is_stmt 0 view .LVU1388
 4661 0000 70B5     		push	{r4, r5, r6, lr}
 4662              	.LCFI21:
 4663              		.cfi_def_cfa_offset 16
 4664              		.cfi_offset 4, -16
 4665              		.cfi_offset 5, -12
 4666              		.cfi_offset 6, -8
 4667              		.cfi_offset 14, -4
1745:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 4668              		.loc 2 1745 1 view .LVU1389
 4669 0002 0446     		mov	r4, r0
1749:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
 4670              		.loc 2 1749 55 view .LVU1390
 4671 0004 0068     		ldr	r0, [r0]
 4672              	.LVL340:
1749:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
 4673              		.loc 2 1749 35 view .LVU1391
 4674 0006 B0F1A04F 		cmp	r0, #1342177280
 4675 000a 00F08180 		beq	.L463
1749:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
 4676              		.loc 2 1749 35 discriminator 2 view .LVU1392
 4677 000e 5649     		ldr	r1, .L478
 4678 0010 564B     		ldr	r3, .L478+4
 4679 0012 574A     		ldr	r2, .L478+8
 4680 0014 8842     		cmp	r0, r1
 4681 0016 08BF     		it	eq
 4682 0018 1346     		moveq	r3, r2
 4683              	.L447:
 4684              	.LVL341:
 4685              	.LBB568:
ARM GAS  /tmp/ccJLHc1D.s 			page 324


 4686              	.LBI568:
6284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 4687              		.loc 1 6284 26 is_stmt 1 discriminator 6 view .LVU1393
 4688              	.LBB569:
6286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 4689              		.loc 1 6286 3 discriminator 6 view .LVU1394
6286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 4690              		.loc 1 6286 21 is_stmt 0 discriminator 6 view .LVU1395
 4691 001a 9E68     		ldr	r6, [r3, #8]
 4692              	.LVL342:
6286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 4693              		.loc 1 6286 21 discriminator 6 view .LVU1396
 4694              	.LBE569:
 4695              	.LBE568:
1753:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4696              		.loc 2 1753 3 is_stmt 1 discriminator 6 view .LVU1397
1756:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 4697              		.loc 2 1756 3 discriminator 6 view .LVU1398
1756:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 4698              		.loc 2 1756 7 is_stmt 0 discriminator 6 view .LVU1399
 4699 001c FFF7FEFF 		bl	LL_ADC_REG_IsConversionOngoing
 4700              	.LVL343:
1756:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 4701              		.loc 2 1756 6 discriminator 6 view .LVU1400
 4702 0020 0546     		mov	r5, r0
 4703 0022 0028     		cmp	r0, #0
 4704 0024 40F09D80 		bne	.L466
1759:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4705              		.loc 2 1759 5 is_stmt 1 view .LVU1401
1759:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4706              		.loc 2 1759 5 view .LVU1402
 4707 0028 94F85830 		ldrb	r3, [r4, #88]	@ zero_extendqisi2
 4708 002c 012B     		cmp	r3, #1
 4709 002e 00F09880 		beq	.L466
1759:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4710              		.loc 2 1759 5 discriminator 2 view .LVU1403
 4711 0032 0123     		movs	r3, #1
 4712 0034 84F85830 		strb	r3, [r4, #88]
1759:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4713              		.loc 2 1759 5 discriminator 2 view .LVU1404
1762:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4714              		.loc 2 1762 5 discriminator 2 view .LVU1405
1762:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4715              		.loc 2 1762 22 is_stmt 0 discriminator 2 view .LVU1406
 4716 0038 2046     		mov	r0, r4
 4717 003a FFF7FEFF 		bl	ADC_Enable
 4718              	.LVL344:
1765:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 4719              		.loc 2 1765 5 is_stmt 1 discriminator 2 view .LVU1407
1765:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 4720              		.loc 2 1765 8 is_stmt 0 discriminator 2 view .LVU1408
 4721 003e 0028     		cmp	r0, #0
 4722 0040 40F08C80 		bne	.L449
1770:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
 4723              		.loc 2 1770 7 view .LVU1409
 4724 0044 E36D     		ldr	r3, [r4, #92]
1778:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
ARM GAS  /tmp/ccJLHc1D.s 			page 325


 4725              		.loc 2 1778 12 view .LVU1410
 4726 0046 4849     		ldr	r1, .L478
1770:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
 4727              		.loc 2 1770 7 view .LVU1411
 4728 0048 23F47063 		bic	r3, r3, #3840
 4729 004c 23F00103 		bic	r3, r3, #1
 4730 0050 43F48073 		orr	r3, r3, #256
 4731 0054 E365     		str	r3, [r4, #92]
1778:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4732              		.loc 2 1778 12 view .LVU1412
 4733 0056 2368     		ldr	r3, [r4]
 4734 0058 8B42     		cmp	r3, r1
 4735              	.LBB571:
 4736              	.LBB570:
6286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 4737              		.loc 1 6286 10 view .LVU1413
 4738 005a 06F01F02 		and	r2, r6, #31
 4739              	.LVL345:
6286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 4740              		.loc 1 6286 10 view .LVU1414
 4741              	.LBE570:
 4742              	.LBE571:
1770:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
 4743              		.loc 2 1770 7 is_stmt 1 view .LVU1415
1778:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4744              		.loc 2 1778 7 view .LVU1416
1778:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4745              		.loc 2 1778 12 is_stmt 0 view .LVU1417
 4746 005e 59D0     		beq	.L467
1778:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4747              		.loc 2 1778 12 discriminator 1 view .LVU1418
 4748 0060 01F58061 		add	r1, r1, #1024
 4749 0064 8B42     		cmp	r3, r1
 4750 0066 58D1     		bne	.L468
1778:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4751              		.loc 2 1778 12 view .LVU1419
 4752 0068 A1F58071 		sub	r1, r1, #256
 4753              	.L450:
1779:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****          )
 4754              		.loc 2 1779 11 view .LVU1420
 4755 006c 1AB9     		cbnz	r2, .L452
 4756              	.L451:
1782:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 4757              		.loc 2 1782 9 is_stmt 1 view .LVU1421
 4758 006e E56D     		ldr	r5, [r4, #92]
 4759 0070 25F48015 		bic	r5, r5, #1048576
 4760 0074 E565     		str	r5, [r4, #92]
 4761              	.L452:
1788:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 4762              		.loc 2 1788 7 view .LVU1422
1788:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 4763              		.loc 2 1788 16 is_stmt 0 view .LVU1423
 4764 0076 E56D     		ldr	r5, [r4, #92]
1788:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 4765              		.loc 2 1788 10 view .LVU1424
 4766 0078 15F48055 		ands	r5, r5, #4096
1791:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
ARM GAS  /tmp/ccJLHc1D.s 			page 326


 4767              		.loc 2 1791 9 is_stmt 1 view .LVU1425
 4768 007c 1CBF     		itt	ne
 4769 007e 256E     		ldrne	r5, [r4, #96]
 4770 0080 25F00605 		bicne	r5, r5, #6
1796:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 4771              		.loc 2 1796 9 view .LVU1426
 4772 0084 2566     		str	r5, [r4, #96]
1801:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4773              		.loc 2 1801 7 view .LVU1427
 4774 0086 1C25     		movs	r5, #28
 4775 0088 1D60     		str	r5, [r3]
1806:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4776              		.loc 2 1806 7 view .LVU1428
1806:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4777              		.loc 2 1806 7 view .LVU1429
 4778 008a 0025     		movs	r5, #0
 4779 008c 84F85850 		strb	r5, [r4, #88]
1806:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4780              		.loc 2 1806 7 view .LVU1430
1809:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4781              		.loc 2 1809 7 view .LVU1431
 4782 0090 5D68     		ldr	r5, [r3, #4]
 4783 0092 25F01C05 		bic	r5, r5, #28
 4784 0096 5D60     		str	r5, [r3, #4]
1812:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 4785              		.loc 2 1812 7 view .LVU1432
1812:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 4786              		.loc 2 1812 25 is_stmt 0 view .LVU1433
 4787 0098 A569     		ldr	r5, [r4, #24]
1819:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           break;
 4788              		.loc 2 1819 11 view .LVU1434
 4789 009a 5E68     		ldr	r6, [r3, #4]
1812:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 4790              		.loc 2 1812 7 view .LVU1435
 4791 009c 082D     		cmp	r5, #8
1815:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           break;
 4792              		.loc 2 1815 11 is_stmt 1 view .LVU1436
 4793 009e 0CBF     		ite	eq
 4794 00a0 46F00806 		orreq	r6, r6, #8
1819:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           break;
 4795              		.loc 2 1819 11 view .LVU1437
 4796 00a4 46F00406 		orrne	r6, r6, #4
 4797 00a8 5E60     		str	r6, [r3, #4]
1820:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 4798              		.loc 2 1820 11 view .LVU1438
1827:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 4799              		.loc 2 1827 7 view .LVU1439
1827:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 4800              		.loc 2 1827 10 is_stmt 0 view .LVU1440
 4801 00aa E66B     		ldr	r6, [r4, #60]
 4802 00ac 1EB9     		cbnz	r6, .L457
1829:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 4803              		.loc 2 1829 9 is_stmt 1 view .LVU1441
 4804 00ae 5E68     		ldr	r6, [r3, #4]
 4805 00b0 46F01006 		orr	r6, r6, #16
 4806 00b4 5E60     		str	r6, [r3, #4]
 4807              	.L457:
ARM GAS  /tmp/ccJLHc1D.s 			page 327


1841:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4808              		.loc 2 1841 7 view .LVU1442
1841:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4809              		.loc 2 1841 10 is_stmt 0 view .LVU1443
 4810 00b6 8B42     		cmp	r3, r1
 4811 00b8 07D0     		beq	.L458
1842:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
 4812              		.loc 2 1842 11 view .LVU1444
 4813 00ba 092A     		cmp	r2, #9
 4814 00bc 2FD8     		bhi	.L459
 4815 00be 40F22126 		movw	r6, #545
 4816 00c2 26FA02F2 		lsr	r2, r6, r2
 4817              	.LVL346:
1842:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
 4818              		.loc 2 1842 11 view .LVU1445
 4819 00c6 D607     		lsls	r6, r2, #31
 4820 00c8 29D5     		bpl	.L459
 4821              	.L458:
1848:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 4822              		.loc 2 1848 9 is_stmt 1 view .LVU1446
1848:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 4823              		.loc 2 1848 13 is_stmt 0 view .LVU1447
 4824 00ca DA68     		ldr	r2, [r3, #12]
1848:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 4825              		.loc 2 1848 12 view .LVU1448
 4826 00cc 9101     		lsls	r1, r2, #6
 4827 00ce 16D5     		bpl	.L460
1850:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4828              		.loc 2 1850 11 is_stmt 1 view .LVU1449
 4829 00d0 E26D     		ldr	r2, [r4, #92]
 4830 00d2 22F44052 		bic	r2, r2, #12288
 4831 00d6 42F48052 		orr	r2, r2, #4096
 4832 00da E265     		str	r2, [r4, #92]
1856:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           {
 4833              		.loc 2 1856 11 view .LVU1450
1864:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOC);
 4834              		.loc 2 1864 15 is_stmt 0 view .LVU1451
 4835 00dc 5A68     		ldr	r2, [r3, #4]
1856:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           {
 4836              		.loc 2 1856 11 view .LVU1452
 4837 00de 082D     		cmp	r5, #8
1859:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOS);
 4838              		.loc 2 1859 15 is_stmt 1 view .LVU1453
 4839 00e0 0BBF     		itete	eq
 4840 00e2 22F02002 		biceq	r2, r2, #32
1864:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOC);
 4841              		.loc 2 1864 15 is_stmt 0 view .LVU1454
 4842 00e6 22F04002 		bicne	r2, r2, #64
1859:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOS);
 4843              		.loc 2 1859 15 view .LVU1455
 4844 00ea 5A60     		streq	r2, [r3, #4]
1860:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               break;
 4845              		.loc 2 1860 15 is_stmt 1 view .LVU1456
1864:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOC);
 4846              		.loc 2 1864 15 is_stmt 0 view .LVU1457
 4847 00ec 5A60     		strne	r2, [r3, #4]
1860:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               break;
ARM GAS  /tmp/ccJLHc1D.s 			page 328


 4848              		.loc 2 1860 15 view .LVU1458
 4849 00ee 0BBF     		itete	eq
 4850 00f0 5A68     		ldreq	r2, [r3, #4]
1865:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               break;
 4851              		.loc 2 1865 15 view .LVU1459
 4852 00f2 5A68     		ldrne	r2, [r3, #4]
1860:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               break;
 4853              		.loc 2 1860 15 view .LVU1460
 4854 00f4 42F04002 		orreq	r2, r2, #64
1864:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOC);
 4855              		.loc 2 1864 15 is_stmt 1 view .LVU1461
1865:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               break;
 4856              		.loc 2 1865 15 view .LVU1462
 4857 00f8 42F02002 		orrne	r2, r2, #32
 4858 00fc 5A60     		str	r2, [r3, #4]
1866:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           }
 4859              		.loc 2 1866 15 view .LVU1463
 4860              	.L460:
1871:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 4861              		.loc 2 1871 9 view .LVU1464
 4862              	.LVL347:
 4863              	.LBB572:
 4864              	.LBI572:
6707:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 4865              		.loc 1 6707 22 view .LVU1465
 4866              	.LBB573:
6712:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4867              		.loc 1 6712 3 view .LVU1466
 4868 00fe 9A68     		ldr	r2, [r3, #8]
 4869 0100 22F00042 		bic	r2, r2, #-2147483648
 4870 0104 22F03F02 		bic	r2, r2, #63
 4871 0108 42F00402 		orr	r2, r2, #4
 4872 010c 9A60     		str	r2, [r3, #8]
 4873              	.LVL348:
 4874              	.L448:
6712:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4875              		.loc 1 6712 3 is_stmt 0 view .LVU1467
 4876              	.LBE573:
 4877              	.LBE572:
1942:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4878              		.loc 2 1942 1 view .LVU1468
 4879 010e 70BD     		pop	{r4, r5, r6, pc}
 4880              	.LVL349:
 4881              	.L463:
1749:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
 4882              		.loc 2 1749 35 view .LVU1469
 4883 0110 174B     		ldr	r3, .L478+8
 4884 0112 82E7     		b	.L447
 4885              	.LVL350:
 4886              	.L467:
1778:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4887              		.loc 2 1778 12 view .LVU1470
 4888 0114 4FF0A041 		mov	r1, #1342177280
 4889 0118 A8E7     		b	.L450
 4890              	.L468:
 4891 011a 1946     		mov	r1, r3
 4892 011c A7E7     		b	.L451
ARM GAS  /tmp/ccJLHc1D.s 			page 329


 4893              	.LVL351:
 4894              	.L459:
1876:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* if Master ADC JAUTO bit is set, Slave injected interruptions
 4895              		.loc 2 1876 9 is_stmt 1 view .LVU1471
 4896 011e E26D     		ldr	r2, [r4, #92]
 4897 0120 42F48012 		orr	r2, r2, #1048576
 4898 0124 E265     		str	r2, [r4, #92]
1879:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         if (READ_BIT(tmpADC_Master->CFGR, ADC_CFGR_JAUTO) != 0UL)
 4899              		.loc 2 1879 9 view .LVU1472
 4900              	.LVL352:
1880:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 4901              		.loc 2 1880 9 view .LVU1473
1880:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 4902              		.loc 2 1880 13 is_stmt 0 view .LVU1474
 4903 0126 CA68     		ldr	r2, [r1, #12]
1880:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 4904              		.loc 2 1880 12 view .LVU1475
 4905 0128 9201     		lsls	r2, r2, #6
 4906 012a F0D5     		bpl	.L448
1884:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* Next, set Slave injected interruptions */
 4907              		.loc 2 1884 11 is_stmt 1 view .LVU1476
 4908 012c E26D     		ldr	r2, [r4, #92]
 4909 012e 22F44052 		bic	r2, r2, #12288
 4910 0132 42F48052 		orr	r2, r2, #4096
 4911 0136 E265     		str	r2, [r4, #92]
1886:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           {
 4912              		.loc 2 1886 11 view .LVU1477
1894:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOC);
 4913              		.loc 2 1894 15 is_stmt 0 view .LVU1478
 4914 0138 5A68     		ldr	r2, [r3, #4]
1886:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           {
 4915              		.loc 2 1886 11 view .LVU1479
 4916 013a 082D     		cmp	r5, #8
1889:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOS);
 4917              		.loc 2 1889 15 is_stmt 1 view .LVU1480
 4918 013c 0BBF     		itete	eq
 4919 013e 22F02002 		biceq	r2, r2, #32
1894:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOC);
 4920              		.loc 2 1894 15 is_stmt 0 view .LVU1481
 4921 0142 22F04002 		bicne	r2, r2, #64
1889:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOS);
 4922              		.loc 2 1889 15 view .LVU1482
 4923 0146 5A60     		streq	r2, [r3, #4]
1890:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               break;
 4924              		.loc 2 1890 15 is_stmt 1 view .LVU1483
1894:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOC);
 4925              		.loc 2 1894 15 is_stmt 0 view .LVU1484
 4926 0148 5A60     		strne	r2, [r3, #4]
1890:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               break;
 4927              		.loc 2 1890 15 view .LVU1485
 4928 014a 0BBF     		itete	eq
 4929 014c 5A68     		ldreq	r2, [r3, #4]
1895:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               break;
 4930              		.loc 2 1895 15 view .LVU1486
 4931 014e 5A68     		ldrne	r2, [r3, #4]
1890:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               break;
 4932              		.loc 2 1890 15 view .LVU1487
ARM GAS  /tmp/ccJLHc1D.s 			page 330


 4933 0150 42F04002 		orreq	r2, r2, #64
1894:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOC);
 4934              		.loc 2 1894 15 is_stmt 1 view .LVU1488
1895:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               break;
 4935              		.loc 2 1895 15 view .LVU1489
 4936 0154 42F02002 		orrne	r2, r2, #32
 4937 0158 5A60     		str	r2, [r3, #4]
1896:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           }
 4938              		.loc 2 1896 15 view .LVU1490
 4939 015a D8E7     		b	.L448
 4940              	.LVL353:
 4941              	.L449:
1931:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 4942              		.loc 2 1931 7 view .LVU1491
1931:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 4943              		.loc 2 1931 7 view .LVU1492
 4944 015c 84F85850 		strb	r5, [r4, #88]
 4945 0160 D5E7     		b	.L448
 4946              	.LVL354:
 4947              	.L466:
1937:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 4948              		.loc 2 1937 20 is_stmt 0 view .LVU1493
 4949 0162 0220     		movs	r0, #2
 4950 0164 D3E7     		b	.L448
 4951              	.L479:
 4952 0166 00BF     		.align	2
 4953              	.L478:
 4954 0168 00010050 		.word	1342177536
 4955 016c 00070050 		.word	1342179072
 4956 0170 00030050 		.word	1342178048
 4957              		.cfi_endproc
 4958              	.LFE365:
 4960              		.section	.text.HAL_ADC_Start_DMA,"ax",%progbits
 4961              		.align	1
 4962              		.global	HAL_ADC_Start_DMA
 4963              		.syntax unified
 4964              		.thumb
 4965              		.thumb_func
 4966              		.fpu fpv4-sp-d16
 4968              	HAL_ADC_Start_DMA:
 4969              	.LVL355:
 4970              	.LFB367:
2005:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 4971              		.loc 2 2005 1 is_stmt 1 view -0
 4972              		.cfi_startproc
 4973              		@ args = 0, pretend = 0, frame = 0
 4974              		@ frame_needed = 0, uses_anonymous_args = 0
2006:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
 4975              		.loc 2 2006 3 view .LVU1495
2008:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
 4976              		.loc 2 2008 3 view .LVU1496
2005:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 4977              		.loc 2 2005 1 is_stmt 0 view .LVU1497
 4978 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 4979              	.LCFI22:
 4980              		.cfi_def_cfa_offset 24
 4981              		.cfi_offset 4, -24
ARM GAS  /tmp/ccJLHc1D.s 			page 331


 4982              		.cfi_offset 5, -20
 4983              		.cfi_offset 6, -16
 4984              		.cfi_offset 7, -12
 4985              		.cfi_offset 8, -8
 4986              		.cfi_offset 14, -4
2005:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 4987              		.loc 2 2005 1 view .LVU1498
 4988 0004 0446     		mov	r4, r0
2008:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
 4989              		.loc 2 2008 55 view .LVU1499
 4990 0006 0068     		ldr	r0, [r0]
 4991              	.LVL356:
2008:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
 4992              		.loc 2 2008 35 view .LVU1500
 4993 0008 B0F1A04F 		cmp	r0, #1342177280
2005:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 4994              		.loc 2 2005 1 view .LVU1501
 4995 000c 0E46     		mov	r6, r1
 4996 000e 1746     		mov	r7, r2
2008:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
 4997              		.loc 2 2008 35 view .LVU1502
 4998 0010 67D0     		beq	.L490
2008:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
 4999              		.loc 2 2008 35 discriminator 2 view .LVU1503
 5000 0012 3A49     		ldr	r1, .L494
 5001              	.LVL357:
2008:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
 5002              		.loc 2 2008 35 discriminator 2 view .LVU1504
 5003 0014 3A4B     		ldr	r3, .L494+4
 5004 0016 3B4A     		ldr	r2, .L494+8
 5005              	.LVL358:
2008:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
 5006              		.loc 2 2008 35 discriminator 2 view .LVU1505
 5007 0018 8842     		cmp	r0, r1
 5008 001a 08BF     		it	eq
 5009 001c 1346     		moveq	r3, r2
 5010              	.L481:
 5011              	.LVL359:
 5012              	.LBB578:
 5013              	.LBI578:
6284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 5014              		.loc 1 6284 26 is_stmt 1 discriminator 6 view .LVU1506
 5015              	.LBB579:
6286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 5016              		.loc 1 6286 3 discriminator 6 view .LVU1507
6286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 5017              		.loc 1 6286 21 is_stmt 0 discriminator 6 view .LVU1508
 5018 001e 9B68     		ldr	r3, [r3, #8]
 5019              	.LVL360:
6286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 5020              		.loc 1 6286 21 discriminator 6 view .LVU1509
 5021              	.LBE579:
 5022              	.LBE578:
2012:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5023              		.loc 2 2012 3 is_stmt 1 discriminator 6 view .LVU1510
2015:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 5024              		.loc 2 2015 3 discriminator 6 view .LVU1511
ARM GAS  /tmp/ccJLHc1D.s 			page 332


2015:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 5025              		.loc 2 2015 7 is_stmt 0 discriminator 6 view .LVU1512
 5026 0020 FFF7FEFF 		bl	LL_ADC_REG_IsConversionOngoing
 5027              	.LVL361:
2015:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 5028              		.loc 2 2015 6 discriminator 6 view .LVU1513
 5029 0024 0028     		cmp	r0, #0
 5030 0026 66D1     		bne	.L493
2018:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5031              		.loc 2 2018 5 is_stmt 1 view .LVU1514
2018:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5032              		.loc 2 2018 5 view .LVU1515
 5033 0028 94F85820 		ldrb	r2, [r4, #88]	@ zero_extendqisi2
 5034 002c 012A     		cmp	r2, #1
 5035 002e 62D0     		beq	.L493
 5036              	.LBB581:
 5037              	.LBB580:
6286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 5038              		.loc 1 6286 10 is_stmt 0 discriminator 2 view .LVU1516
 5039 0030 03F01F08 		and	r8, r3, #31
 5040              	.LBE580:
 5041              	.LBE581:
2018:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5042              		.loc 2 2018 5 is_stmt 1 discriminator 2 view .LVU1517
2023:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
 5043              		.loc 2 2023 8 is_stmt 0 discriminator 2 view .LVU1518
 5044 0034 B8F1090F 		cmp	r8, #9
2018:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5045              		.loc 2 2018 5 discriminator 2 view .LVU1519
 5046 0038 4FF00103 		mov	r3, #1
 5047              	.LVL362:
2018:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5048              		.loc 2 2018 5 discriminator 2 view .LVU1520
 5049 003c 84F85830 		strb	r3, [r4, #88]
2018:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5050              		.loc 2 2018 5 is_stmt 1 discriminator 2 view .LVU1521
2023:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
 5051              		.loc 2 2023 5 discriminator 2 view .LVU1522
2023:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
 5052              		.loc 2 2023 8 is_stmt 0 discriminator 2 view .LVU1523
 5053 0040 54D8     		bhi	.L483
 5054 0042 40F22120 		movw	r0, #545
 5055 0046 20FA08F0 		lsr	r0, r0, r8
 5056 004a C043     		mvns	r0, r0
 5057 004c 10EA0305 		ands	r5, r0, r3
 5058 0050 4CD1     		bne	.L483
2030:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5059              		.loc 2 2030 7 is_stmt 1 view .LVU1524
2030:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5060              		.loc 2 2030 24 is_stmt 0 view .LVU1525
 5061 0052 2046     		mov	r0, r4
 5062 0054 FFF7FEFF 		bl	ADC_Enable
 5063              	.LVL363:
2033:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 5064              		.loc 2 2033 7 is_stmt 1 view .LVU1526
2033:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 5065              		.loc 2 2033 10 is_stmt 0 view .LVU1527
ARM GAS  /tmp/ccJLHc1D.s 			page 333


 5066 0058 0028     		cmp	r0, #0
 5067 005a 44D1     		bne	.L484
2038:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                           HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL
 5068              		.loc 2 2038 9 is_stmt 1 view .LVU1528
 5069 005c E36D     		ldr	r3, [r4, #92]
2046:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 5070              		.loc 2 2046 14 is_stmt 0 view .LVU1529
 5071 005e 2168     		ldr	r1, [r4]
2038:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                           HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL
 5072              		.loc 2 2038 9 view .LVU1530
 5073 0060 23F47063 		bic	r3, r3, #3840
 5074 0064 23F00103 		bic	r3, r3, #1
 5075 0068 43F48073 		orr	r3, r3, #256
 5076 006c E365     		str	r3, [r4, #92]
2046:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 5077              		.loc 2 2046 9 is_stmt 1 view .LVU1531
2046:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 5078              		.loc 2 2046 14 is_stmt 0 view .LVU1532
 5079 006e 234B     		ldr	r3, .L494
 5080 0070 9942     		cmp	r1, r3
 5081 0072 03D0     		beq	.L485
2046:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 5082              		.loc 2 2046 12 discriminator 8 view .LVU1533
 5083 0074 03F58063 		add	r3, r3, #1024
 5084 0078 9942     		cmp	r1, r3
 5085 007a 02D1     		bne	.L486
 5086              	.L485:
2047:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****            )
 5087              		.loc 2 2047 13 view .LVU1534
 5088 007c B8F1000F 		cmp	r8, #0
 5089 0080 03D1     		bne	.L487
 5090              	.L486:
2050:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
 5091              		.loc 2 2050 11 is_stmt 1 view .LVU1535
 5092 0082 E36D     		ldr	r3, [r4, #92]
 5093 0084 23F48013 		bic	r3, r3, #1048576
 5094 0088 E365     		str	r3, [r4, #92]
 5095              	.L487:
2055:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 5096              		.loc 2 2055 9 view .LVU1536
2055:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 5097              		.loc 2 2055 18 is_stmt 0 view .LVU1537
 5098 008a E36D     		ldr	r3, [r4, #92]
2067:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5099              		.loc 2 2067 13 view .LVU1538
 5100 008c 606D     		ldr	r0, [r4, #84]
 5101              	.LVL364:
2055:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 5102              		.loc 2 2055 12 view .LVU1539
 5103 008e 13F48053 		ands	r3, r3, #4096
2058:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
 5104              		.loc 2 2058 11 is_stmt 1 view .LVU1540
 5105 0092 1CBF     		itt	ne
 5106 0094 236E     		ldrne	r3, [r4, #96]
 5107 0096 23F00603 		bicne	r3, r3, #6
2063:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
 5108              		.loc 2 2063 11 view .LVU1541
ARM GAS  /tmp/ccJLHc1D.s 			page 334


 5109 009a 2366     		str	r3, [r4, #96]
2067:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5110              		.loc 2 2067 9 view .LVU1542
2067:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5111              		.loc 2 2067 44 is_stmt 0 view .LVU1543
 5112 009c 1A4B     		ldr	r3, .L494+12
 5113 009e C362     		str	r3, [r0, #44]
2070:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5114              		.loc 2 2070 9 is_stmt 1 view .LVU1544
2070:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5115              		.loc 2 2070 48 is_stmt 0 view .LVU1545
 5116 00a0 1A4B     		ldr	r3, .L494+16
 5117 00a2 0363     		str	r3, [r0, #48]
2073:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5118              		.loc 2 2073 9 is_stmt 1 view .LVU1546
2073:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5119              		.loc 2 2073 45 is_stmt 0 view .LVU1547
 5120 00a4 1A4B     		ldr	r3, .L494+20
 5121 00a6 4363     		str	r3, [r0, #52]
2082:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5122              		.loc 2 2082 9 is_stmt 1 view .LVU1548
 5123 00a8 1C23     		movs	r3, #28
 5124 00aa 0B60     		str	r3, [r1]
2087:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5125              		.loc 2 2087 9 view .LVU1549
2087:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5126              		.loc 2 2087 9 view .LVU1550
 5127 00ac 0023     		movs	r3, #0
 5128 00ae 84F85830 		strb	r3, [r4, #88]
2087:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5129              		.loc 2 2087 9 view .LVU1551
2092:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5130              		.loc 2 2092 9 view .LVU1552
 5131 00b2 4B68     		ldr	r3, [r1, #4]
 5132 00b4 43F01003 		orr	r3, r3, #16
 5133 00b8 4B60     		str	r3, [r1, #4]
2095:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5134              		.loc 2 2095 9 view .LVU1553
 5135 00ba CB68     		ldr	r3, [r1, #12]
 5136 00bc 43F00103 		orr	r3, r3, #1
 5137 00c0 CB60     		str	r3, [r1, #12]
2098:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5138              		.loc 2 2098 9 view .LVU1554
2098:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5139              		.loc 2 2098 26 is_stmt 0 view .LVU1555
 5140 00c2 3246     		mov	r2, r6
 5141 00c4 3B46     		mov	r3, r7
 5142 00c6 4031     		adds	r1, r1, #64
 5143 00c8 FFF7FEFF 		bl	HAL_DMA_Start_IT
 5144              	.LVL365:
2105:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 5145              		.loc 2 2105 9 is_stmt 1 view .LVU1556
 5146 00cc 2268     		ldr	r2, [r4]
 5147              	.LVL366:
 5148              	.LBB582:
 5149              	.LBI582:
6707:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
ARM GAS  /tmp/ccJLHc1D.s 			page 335


 5150              		.loc 1 6707 22 view .LVU1557
 5151              	.LBB583:
6712:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 5152              		.loc 1 6712 3 view .LVU1558
 5153 00ce 9368     		ldr	r3, [r2, #8]
 5154 00d0 23F00043 		bic	r3, r3, #-2147483648
 5155 00d4 23F03F03 		bic	r3, r3, #63
 5156 00d8 43F00403 		orr	r3, r3, #4
 5157 00dc 9360     		str	r3, [r2, #8]
 5158              	.LVL367:
 5159              	.L482:
6712:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 5160              		.loc 1 6712 3 is_stmt 0 view .LVU1559
 5161              	.LBE583:
 5162              	.LBE582:
2130:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5163              		.loc 2 2130 1 view .LVU1560
 5164 00de BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 5165              	.LVL368:
 5166              	.L490:
2008:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
 5167              		.loc 2 2008 35 view .LVU1561
 5168 00e2 084B     		ldr	r3, .L494+8
 5169 00e4 9BE7     		b	.L481
 5170              	.LVL369:
 5171              	.L484:
2110:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 5172              		.loc 2 2110 9 is_stmt 1 view .LVU1562
2110:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 5173              		.loc 2 2110 9 view .LVU1563
 5174 00e6 84F85850 		strb	r5, [r4, #88]
 5175 00ea F8E7     		b	.L482
 5176              	.LVL370:
 5177              	.L483:
2117:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Process unlocked */
 5178              		.loc 2 2117 7 discriminator 1 view .LVU1564
2119:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 5179              		.loc 2 2119 7 discriminator 1 view .LVU1565
2119:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 5180              		.loc 2 2119 7 discriminator 1 view .LVU1566
 5181 00ec 0023     		movs	r3, #0
 5182 00ee 84F85830 		strb	r3, [r4, #88]
2117:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Process unlocked */
 5183              		.loc 2 2117 22 is_stmt 0 discriminator 1 view .LVU1567
 5184 00f2 0120     		movs	r0, #1
 5185 00f4 F3E7     		b	.L482
 5186              	.LVL371:
 5187              	.L493:
2125:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 5188              		.loc 2 2125 20 view .LVU1568
 5189 00f6 0220     		movs	r0, #2
 5190 00f8 F1E7     		b	.L482
 5191              	.L495:
 5192 00fa 00BF     		.align	2
 5193              	.L494:
 5194 00fc 00010050 		.word	1342177536
 5195 0100 00070050 		.word	1342179072
ARM GAS  /tmp/ccJLHc1D.s 			page 336


 5196 0104 00030050 		.word	1342178048
 5197 0108 00000000 		.word	ADC_DMAConvCplt
 5198 010c 00000000 		.word	ADC_DMAHalfConvCplt
 5199 0110 00000000 		.word	ADC_DMAError
 5200              		.cfi_endproc
 5201              	.LFE367:
 5203              		.section	.text.ADC_Disable,"ax",%progbits
 5204              		.align	1
 5205              		.global	ADC_Disable
 5206              		.syntax unified
 5207              		.thumb
 5208              		.thumb_func
 5209              		.fpu fpv4-sp-d16
 5211              	ADC_Disable:
 5212              	.LVL372:
 5213              	.LFB383:
3484:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tickstart;
 5214              		.loc 2 3484 1 is_stmt 1 view -0
 5215              		.cfi_startproc
 5216              		@ args = 0, pretend = 0, frame = 0
 5217              		@ frame_needed = 0, uses_anonymous_args = 0
3485:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   const uint32_t tmp_adc_is_disable_on_going = LL_ADC_IsDisableOngoing(hadc->Instance);
 5218              		.loc 2 3485 3 view .LVU1570
3486:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5219              		.loc 2 3486 3 view .LVU1571
3486:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5220              		.loc 2 3486 48 is_stmt 0 view .LVU1572
 5221 0000 0268     		ldr	r2, [r0]
 5222              	.LVL373:
 5223              	.LBB590:
 5224              	.LBI590:
6632:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 5225              		.loc 1 6632 26 is_stmt 1 view .LVU1573
 5226              	.LBB591:
6634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 5227              		.loc 1 6634 3 view .LVU1574
 5228              	.LBE591:
 5229              	.LBE590:
3484:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tickstart;
 5230              		.loc 2 3484 1 is_stmt 0 view .LVU1575
 5231 0002 38B5     		push	{r3, r4, r5, lr}
 5232              	.LCFI23:
 5233              		.cfi_def_cfa_offset 16
 5234              		.cfi_offset 3, -16
 5235              		.cfi_offset 4, -12
 5236              		.cfi_offset 5, -8
 5237              		.cfi_offset 14, -4
 5238              	.LBB593:
 5239              	.LBB592:
6634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 5240              		.loc 1 6634 12 view .LVU1576
 5241 0004 9368     		ldr	r3, [r2, #8]
 5242              	.LVL374:
6634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 5243              		.loc 1 6634 12 view .LVU1577
 5244              	.LBE592:
 5245              	.LBE593:
ARM GAS  /tmp/ccJLHc1D.s 			page 337


3491:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       && (tmp_adc_is_disable_on_going == 0UL)
 5246              		.loc 2 3491 3 is_stmt 1 view .LVU1578
 5247              	.LBB594:
 5248              	.LBI594:
6621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 5249              		.loc 1 6621 26 view .LVU1579
 5250              	.LBB595:
6623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 5251              		.loc 1 6623 3 view .LVU1580
6623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 5252              		.loc 1 6623 12 is_stmt 0 view .LVU1581
 5253 0006 9168     		ldr	r1, [r2, #8]
 5254              	.LVL375:
6623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 5255              		.loc 1 6623 12 view .LVU1582
 5256              	.LBE595:
 5257              	.LBE594:
3484:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tickstart;
 5258              		.loc 2 3484 1 view .LVU1583
 5259 0008 0446     		mov	r4, r0
3491:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       && (tmp_adc_is_disable_on_going == 0UL)
 5260              		.loc 2 3491 6 view .LVU1584
 5261 000a C807     		lsls	r0, r1, #31
 5262              	.LVL376:
3491:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       && (tmp_adc_is_disable_on_going == 0UL)
 5263              		.loc 2 3491 6 view .LVU1585
 5264 000c 01D4     		bmi	.L497
 5265              	.LVL377:
 5266              	.L499:
3533:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
 5267              		.loc 2 3533 10 view .LVU1586
 5268 000e 0020     		movs	r0, #0
 5269              	.L498:
3534:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5270              		.loc 2 3534 1 view .LVU1587
 5271 0010 38BD     		pop	{r3, r4, r5, pc}
 5272              	.LVL378:
 5273              	.L497:
3492:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      )
 5274              		.loc 2 3492 7 view .LVU1588
 5275 0012 9907     		lsls	r1, r3, #30
 5276 0014 FBD4     		bmi	.L499
3496:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 5277              		.loc 2 3496 5 is_stmt 1 view .LVU1589
3496:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 5278              		.loc 2 3496 24 is_stmt 0 view .LVU1590
 5279 0016 9368     		ldr	r3, [r2, #8]
 5280              	.LVL379:
3496:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 5281              		.loc 2 3496 29 view .LVU1591
 5282 0018 03F00D03 		and	r3, r3, #13
3496:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 5283              		.loc 2 3496 8 view .LVU1592
 5284 001c 012B     		cmp	r3, #1
 5285 001e 15D1     		bne	.L504
3499:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOSMP | ADC_FLAG_RDY));
 5286              		.loc 2 3499 7 is_stmt 1 view .LVU1593
ARM GAS  /tmp/ccJLHc1D.s 			page 338


 5287              	.LVL380:
 5288              	.LBB596:
 5289              	.LBI596:
6602:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 5290              		.loc 1 6602 22 view .LVU1594
 5291              	.LBB597:
6607:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 5292              		.loc 1 6607 3 view .LVU1595
 5293 0020 9368     		ldr	r3, [r2, #8]
 5294 0022 23F00043 		bic	r3, r3, #-2147483648
 5295 0026 23F03F03 		bic	r3, r3, #63
 5296 002a 43F00203 		orr	r3, r3, #2
 5297 002e 9360     		str	r3, [r2, #8]
 5298              	.LVL381:
6607:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 5299              		.loc 1 6607 3 is_stmt 0 view .LVU1596
 5300              	.LBE597:
 5301              	.LBE596:
3500:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 5302              		.loc 2 3500 7 is_stmt 1 view .LVU1597
 5303 0030 0323     		movs	r3, #3
 5304 0032 1360     		str	r3, [r2]
3515:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5305              		.loc 2 3515 5 view .LVU1598
3515:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5306              		.loc 2 3515 17 is_stmt 0 view .LVU1599
 5307 0034 FFF7FEFF 		bl	HAL_GetTick
 5308              	.LVL382:
 5309 0038 0546     		mov	r5, r0
 5310              	.LVL383:
3517:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 5311              		.loc 2 3517 5 is_stmt 1 view .LVU1600
 5312              	.L501:
3517:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 5313              		.loc 2 3517 11 view .LVU1601
3517:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 5314              		.loc 2 3517 17 is_stmt 0 view .LVU1602
 5315 003a 2368     		ldr	r3, [r4]
3517:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 5316              		.loc 2 3517 27 view .LVU1603
 5317 003c 9B68     		ldr	r3, [r3, #8]
3517:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 5318              		.loc 2 3517 11 view .LVU1604
 5319 003e DB07     		lsls	r3, r3, #31
 5320 0040 E5D5     		bpl	.L499
3519:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 5321              		.loc 2 3519 7 is_stmt 1 view .LVU1605
3519:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 5322              		.loc 2 3519 12 is_stmt 0 view .LVU1606
 5323 0042 FFF7FEFF 		bl	HAL_GetTick
 5324              	.LVL384:
3519:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 5325              		.loc 2 3519 26 view .LVU1607
 5326 0046 401B     		subs	r0, r0, r5
3519:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 5327              		.loc 2 3519 10 view .LVU1608
 5328 0048 0228     		cmp	r0, #2
ARM GAS  /tmp/ccJLHc1D.s 			page 339


 5329 004a F6D9     		bls	.L501
 5330              	.LVL385:
 5331              	.L504:
3522:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5332              		.loc 2 3522 9 is_stmt 1 view .LVU1609
 5333 004c E36D     		ldr	r3, [r4, #92]
 5334 004e 43F01003 		orr	r3, r3, #16
 5335 0052 E365     		str	r3, [r4, #92]
3525:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5336              		.loc 2 3525 9 view .LVU1610
 5337 0054 236E     		ldr	r3, [r4, #96]
 5338 0056 43F00103 		orr	r3, r3, #1
 5339 005a 2366     		str	r3, [r4, #96]
3527:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 5340              		.loc 2 3527 9 view .LVU1611
3527:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 5341              		.loc 2 3527 16 is_stmt 0 view .LVU1612
 5342 005c 0120     		movs	r0, #1
 5343 005e D7E7     		b	.L498
 5344              		.cfi_endproc
 5345              	.LFE383:
 5347              		.section	.text.HAL_ADC_DeInit,"ax",%progbits
 5348              		.align	1
 5349              		.global	HAL_ADC_DeInit
 5350              		.syntax unified
 5351              		.thumb
 5352              		.thumb_func
 5353              		.fpu fpv4-sp-d16
 5355              	HAL_ADC_DeInit:
 5356              	.LVL386:
 5357              	.LFB358:
 724:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 5358              		.loc 2 724 1 is_stmt 1 view -0
 5359              		.cfi_startproc
 5360              		@ args = 0, pretend = 0, frame = 0
 5361              		@ frame_needed = 0, uses_anonymous_args = 0
 725:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5362              		.loc 2 725 3 view .LVU1614
 728:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 5363              		.loc 2 728 3 view .LVU1615
 724:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 5364              		.loc 2 724 1 is_stmt 0 view .LVU1616
 5365 0000 70B5     		push	{r4, r5, r6, lr}
 5366              	.LCFI24:
 5367              		.cfi_def_cfa_offset 16
 5368              		.cfi_offset 4, -16
 5369              		.cfi_offset 5, -12
 5370              		.cfi_offset 6, -8
 5371              		.cfi_offset 14, -4
 728:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 5372              		.loc 2 728 6 view .LVU1617
 5373 0002 0446     		mov	r4, r0
 5374 0004 0028     		cmp	r0, #0
 5375 0006 00F0C380 		beq	.L514
 734:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5376              		.loc 2 734 3 is_stmt 1 view .LVU1618
 737:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
ARM GAS  /tmp/ccJLHc1D.s 			page 340


 5377              		.loc 2 737 3 view .LVU1619
 5378 000a C36D     		ldr	r3, [r0, #92]
 5379 000c 43F00203 		orr	r3, r3, #2
 5380 0010 C365     		str	r3, [r0, #92]
 740:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5381              		.loc 2 740 3 view .LVU1620
 740:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5382              		.loc 2 740 20 is_stmt 0 view .LVU1621
 5383 0012 0321     		movs	r1, #3
 5384 0014 FFF7FEFF 		bl	ADC_ConversionStop
 5385              	.LVL387:
 748:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5386              		.loc 2 748 3 is_stmt 1 view .LVU1622
 5387 0018 2268     		ldr	r2, [r4]
 5388 001a D368     		ldr	r3, [r2, #12]
 5389 001c 43F40013 		orr	r3, r3, #2097152
 5390 0020 D360     		str	r3, [r2, #12]
 751:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 5391              		.loc 2 751 3 view .LVU1623
 751:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 5392              		.loc 2 751 6 is_stmt 0 view .LVU1624
 5393 0022 0546     		mov	r5, r0
 5394 0024 30B9     		cbnz	r0, .L507
 754:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5395              		.loc 2 754 5 is_stmt 1 view .LVU1625
 754:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5396              		.loc 2 754 22 is_stmt 0 view .LVU1626
 5397 0026 2046     		mov	r0, r4
 5398              	.LVL388:
 754:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5399              		.loc 2 754 22 view .LVU1627
 5400 0028 FFF7FEFF 		bl	ADC_Disable
 5401              	.LVL389:
 757:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 5402              		.loc 2 757 5 is_stmt 1 view .LVU1628
 757:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 5403              		.loc 2 757 8 is_stmt 0 view .LVU1629
 5404 002c 0546     		mov	r5, r0
 5405 002e 08B9     		cbnz	r0, .L507
 760:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 5406              		.loc 2 760 7 is_stmt 1 view .LVU1630
 760:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 5407              		.loc 2 760 19 is_stmt 0 view .LVU1631
 5408 0030 0123     		movs	r3, #1
 5409 0032 E365     		str	r3, [r4, #92]
 5410              	.L507:
 5411              	.LVL390:
 772:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                               ADC_IT_JQOVF | ADC_IT_OVR  |
 5412              		.loc 2 772 3 is_stmt 1 view .LVU1632
 5413 0034 2368     		ldr	r3, [r4]
 5414 0036 5748     		ldr	r0, .L523
 5415 0038 5968     		ldr	r1, [r3, #4]
 779:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                               ADC_FLAG_JQOVF | ADC_FLAG_OVR  |
 5416              		.loc 2 779 3 is_stmt 0 view .LVU1633
 5417 003a 40F2FF72 		movw	r2, #2047
 772:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                               ADC_IT_JQOVF | ADC_IT_OVR  |
 5418              		.loc 2 772 3 view .LVU1634
ARM GAS  /tmp/ccJLHc1D.s 			page 341


 5419 003e 0140     		ands	r1, r1, r0
 5420 0040 5960     		str	r1, [r3, #4]
 779:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                               ADC_FLAG_JQOVF | ADC_FLAG_OVR  |
 5421              		.loc 2 779 3 is_stmt 1 view .LVU1635
 5422 0042 1A60     		str	r2, [r3]
 790:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   SET_BIT(hadc->Instance->CR, ADC_CR_DEEPPWD);
 5423              		.loc 2 790 3 view .LVU1636
 5424 0044 9968     		ldr	r1, [r3, #8]
 5425 0046 21F0A041 		bic	r1, r1, #1342177280
 5426 004a 9960     		str	r1, [r3, #8]
 791:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5427              		.loc 2 791 3 view .LVU1637
 5428 004c 9968     		ldr	r1, [r3, #8]
 5429 004e 41F00051 		orr	r1, r1, #536870912
 5430 0052 9960     		str	r1, [r3, #8]
 794:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   SET_BIT(hadc->Instance->CFGR, ADC_CFGR_JQDIS);
 5431              		.loc 2 794 3 view .LVU1638
 5432 0054 D968     		ldr	r1, [r3, #12]
 5433 0056 21F0FF41 		bic	r1, r1, #2139095040
 5434 005a 21F4FF01 		bic	r1, r1, #8355840
 5435 005e 21F4FF41 		bic	r1, r1, #32640
 5436 0062 21F07B01 		bic	r1, r1, #123
 5437 0066 D960     		str	r1, [r3, #12]
 795:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5438              		.loc 2 795 3 view .LVU1639
 5439 0068 D968     		ldr	r1, [r3, #12]
 5440 006a 41F00041 		orr	r1, r1, #-2147483648
 5441 006e D960     		str	r1, [r3, #12]
 798:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             ADC_CFGR2_OVSR  | ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSE);
 5442              		.loc 2 798 3 view .LVU1640
 5443 0070 1A69     		ldr	r2, [r3, #16]
 5444 0072 0240     		ands	r2, r2, r0
 5445 0074 1A61     		str	r2, [r3, #16]
 802:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5446              		.loc 2 802 3 view .LVU1641
 5447 0076 5A69     		ldr	r2, [r3, #20]
 823:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             ADC_SQR2_SQ6 | ADC_SQR2_SQ5);
 5448              		.loc 2 823 3 is_stmt 0 view .LVU1642
 5449 0078 4748     		ldr	r0, .L523+4
 802:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5450              		.loc 2 802 3 view .LVU1643
 5451 007a 02F08042 		and	r2, r2, #1073741824
 5452 007e 5A61     		str	r2, [r3, #20]
 805:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             ADC_SMPR2_SMP15 | ADC_SMPR2_SMP14 | ADC_SMPR2_SMP13 |
 5453              		.loc 2 805 3 is_stmt 1 view .LVU1644
 5454 0080 9A69     		ldr	r2, [r3, #24]
 5455 0082 02F07842 		and	r2, r2, #-134217728
 5456 0086 9A61     		str	r2, [r3, #24]
 810:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5457              		.loc 2 810 3 view .LVU1645
 5458 0088 1A6A     		ldr	r2, [r3, #32]
 5459 008a 02F0F022 		and	r2, r2, #-268374016
 5460 008e 1A62     		str	r2, [r3, #32]
 813:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5461              		.loc 2 813 3 view .LVU1646
 5462 0090 5A6A     		ldr	r2, [r3, #36]
 5463 0092 02F0FF22 		and	r2, r2, #-16711936
ARM GAS  /tmp/ccJLHc1D.s 			page 342


 5464 0096 5A62     		str	r2, [r3, #36]
 816:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5465              		.loc 2 816 3 view .LVU1647
 5466 0098 9A6A     		ldr	r2, [r3, #40]
 5467 009a 02F0FF22 		and	r2, r2, #-16711936
 5468 009e 9A62     		str	r2, [r3, #40]
 819:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             ADC_SQR1_SQ1 | ADC_SQR1_L);
 5469              		.loc 2 819 3 view .LVU1648
 5470 00a0 196B     		ldr	r1, [r3, #48]
 5471 00a2 3E4A     		ldr	r2, .L523+8
 5472 00a4 0A40     		ands	r2, r2, r1
 5473 00a6 1A63     		str	r2, [r3, #48]
 823:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             ADC_SQR2_SQ6 | ADC_SQR2_SQ5);
 5474              		.loc 2 823 3 view .LVU1649
 5475 00a8 596B     		ldr	r1, [r3, #52]
 5476 00aa 0140     		ands	r1, r1, r0
 5477 00ac 5963     		str	r1, [r3, #52]
 827:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             ADC_SQR3_SQ11 | ADC_SQR3_SQ10);
 5478              		.loc 2 827 3 view .LVU1650
 5479 00ae 9A6B     		ldr	r2, [r3, #56]
 5480 00b0 0240     		ands	r2, r2, r0
 5481 00b2 9A63     		str	r2, [r3, #56]
 831:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5482              		.loc 2 831 3 view .LVU1651
 5483 00b4 DA6B     		ldr	r2, [r3, #60]
 5484 00b6 22F4FB62 		bic	r2, r2, #2008
 5485 00ba 22F00702 		bic	r2, r2, #7
 5486 00be DA63     		str	r2, [r3, #60]
 839:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Reset register OFR2 */
 5487              		.loc 2 839 3 view .LVU1652
 5488 00c0 196E     		ldr	r1, [r3, #96]
 5489 00c2 374A     		ldr	r2, .L523+12
 5490 00c4 1140     		ands	r1, r1, r2
 5491 00c6 1966     		str	r1, [r3, #96]
 841:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Reset register OFR3 */
 5492              		.loc 2 841 3 view .LVU1653
 5493 00c8 596E     		ldr	r1, [r3, #100]
 5494 00ca 1140     		ands	r1, r1, r2
 5495 00cc 5966     		str	r1, [r3, #100]
 843:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Reset register OFR4 */
 5496              		.loc 2 843 3 view .LVU1654
 5497 00ce 996E     		ldr	r1, [r3, #104]
 5498 00d0 1140     		ands	r1, r1, r2
 5499 00d2 9966     		str	r1, [r3, #104]
 845:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5500              		.loc 2 845 3 view .LVU1655
 5501 00d4 D96E     		ldr	r1, [r3, #108]
 5502 00d6 0A40     		ands	r2, r2, r1
 5503 00d8 DA66     		str	r2, [r3, #108]
 851:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5504              		.loc 2 851 3 view .LVU1656
 5505 00da D3F8A020 		ldr	r2, [r3, #160]
 5506 00de 3149     		ldr	r1, .L523+16
 5507 00e0 0A40     		ands	r2, r2, r1
 5508 00e2 C3F8A020 		str	r2, [r3, #160]
 854:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5509              		.loc 2 854 3 view .LVU1657
ARM GAS  /tmp/ccJLHc1D.s 			page 343


 5510 00e6 D3F8A420 		ldr	r2, [r3, #164]
 5511 00ea 0A40     		ands	r2, r2, r1
 5512 00ec C3F8A420 		str	r2, [r3, #164]
 857:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5513              		.loc 2 857 3 view .LVU1658
 5514 00f0 D3F8B020 		ldr	r2, [r3, #176]
 5515 00f4 0A40     		ands	r2, r2, r1
 5516 00f6 C3F8B020 		str	r2, [r3, #176]
 860:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5517              		.loc 2 860 3 view .LVU1659
 5518 00fa D3F8B420 		ldr	r2, [r3, #180]
 5519 00fe 2A49     		ldr	r1, .L523+20
 5520 0100 22F07F12 		bic	r2, r2, #8323199
 867:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 5521              		.loc 2 867 89 is_stmt 0 view .LVU1660
 5522 0104 B3F1A04F 		cmp	r3, #1342177280
 860:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5523              		.loc 2 860 3 view .LVU1661
 5524 0108 C3F8B420 		str	r2, [r3, #180]
 867:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 5525              		.loc 2 867 3 is_stmt 1 view .LVU1662
 867:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 5526              		.loc 2 867 89 is_stmt 0 view .LVU1663
 5527 010c 01D0     		beq	.L508
 867:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 5528              		.loc 2 867 7 discriminator 2 view .LVU1664
 5529 010e 8B42     		cmp	r3, r1
 5530 0110 23D1     		bne	.L509
 5531              	.L508:
 5532              	.LVL391:
 5533              	.LBB598:
 5534              	.LBI598:
6621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 5535              		.loc 1 6621 26 is_stmt 1 view .LVU1665
 5536              	.LBB599:
6623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 5537              		.loc 1 6623 3 view .LVU1666
6623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 5538              		.loc 1 6623 12 is_stmt 0 view .LVU1667
 5539 0112 4FF0A042 		mov	r2, #1342177280
 5540 0116 9068     		ldr	r0, [r2, #8]
 5541              	.LVL392:
6623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 5542              		.loc 1 6623 12 view .LVU1668
 5543              	.LBE599:
 5544              	.LBE598:
 5545              	.LBB600:
 5546              	.LBI600:
6621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 5547              		.loc 1 6621 26 is_stmt 1 view .LVU1669
 5548              	.LBB601:
6623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 5549              		.loc 1 6623 3 view .LVU1670
6623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 5550              		.loc 1 6623 12 is_stmt 0 view .LVU1671
 5551 0118 8A68     		ldr	r2, [r1, #8]
 5552              	.LVL393:
ARM GAS  /tmp/ccJLHc1D.s 			page 344


6623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 5553              		.loc 1 6623 12 view .LVU1672
 5554              	.LBE601:
 5555              	.LBE600:
 867:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 5556              		.loc 2 867 89 view .LVU1673
 5557 011a 0243     		orrs	r2, r2, r0
 867:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 5558              		.loc 2 867 6 view .LVU1674
 5559 011c D007     		lsls	r0, r2, #31
 5560 011e 27D4     		bmi	.L511
 876:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 5561              		.loc 2 876 5 is_stmt 1 view .LVU1675
 5562 0120 B3F1A04F 		cmp	r3, #1342177280
 5563 0124 214A     		ldr	r2, .L523+24
 5564 0126 03D0     		beq	.L512
 876:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 5565              		.loc 2 876 5 is_stmt 0 discriminator 2 view .LVU1676
 5566 0128 2148     		ldr	r0, .L523+28
 5567 012a 8B42     		cmp	r3, r1
 5568 012c 18BF     		it	ne
 5569 012e 0246     		movne	r2, r0
 5570              	.L512:
 876:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 5571              		.loc 2 876 5 discriminator 6 view .LVU1677
 5572 0130 B3F1A04F 		cmp	r3, #1342177280
 5573 0134 9168     		ldr	r1, [r2, #8]
 5574 0136 29D0     		beq	.L518
 876:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 5575              		.loc 2 876 5 discriminator 8 view .LVU1678
 5576 0138 1B4E     		ldr	r6, .L523+20
 5577 013a 1C4A     		ldr	r2, .L523+24
 5578 013c 1C48     		ldr	r0, .L523+28
 5579 013e B342     		cmp	r3, r6
 5580 0140 0CBF     		ite	eq
 5581 0142 1346     		moveq	r3, r2
 5582 0144 0346     		movne	r3, r0
 5583              	.L513:
 876:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 5584              		.loc 2 876 5 discriminator 12 view .LVU1679
 5585 0146 21F0FF71 		bic	r1, r1, #33423360
 5586 014a 21F4F731 		bic	r1, r1, #126464
 5587 014e 21F48F71 		bic	r1, r1, #286
 5588 0152 21F00101 		bic	r1, r1, #1
 5589 0156 9960     		str	r1, [r3, #8]
 5590 0158 0AE0     		b	.L511
 5591              	.L509:
 5592              	.LVL394:
 5593              	.LBB602:
 5594              	.LBI602:
6621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 5595              		.loc 1 6621 26 is_stmt 1 view .LVU1680
 5596              	.LBB603:
6623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 5597              		.loc 1 6623 3 view .LVU1681
6623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 5598              		.loc 1 6623 12 is_stmt 0 view .LVU1682
ARM GAS  /tmp/ccJLHc1D.s 			page 345


 5599 015a 164A     		ldr	r2, .L523+32
 5600              	.LBE603:
 5601              	.LBE602:
 5602              	.LBB605:
 5603              	.LBB606:
 5604 015c 1649     		ldr	r1, .L523+36
 5605              	.LBE606:
 5606              	.LBE605:
 5607              	.LBB608:
 5608              	.LBB604:
 5609 015e 9068     		ldr	r0, [r2, #8]
 5610              	.LVL395:
6623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 5611              		.loc 1 6623 12 view .LVU1683
 5612              	.LBE604:
 5613              	.LBE608:
 5614              	.LBB609:
 5615              	.LBI609:
6621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 5616              		.loc 1 6621 26 is_stmt 1 view .LVU1684
 5617              	.LBB610:
6623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 5618              		.loc 1 6623 3 view .LVU1685
6623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 5619              		.loc 1 6623 12 is_stmt 0 view .LVU1686
 5620 0160 02F58072 		add	r2, r2, #256
 5621 0164 9268     		ldr	r2, [r2, #8]
 5622              	.LVL396:
6623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 5623              		.loc 1 6623 12 view .LVU1687
 5624              	.LBE610:
 5625              	.LBE609:
 5626              	.LBB611:
 5627              	.LBI605:
6621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 5628              		.loc 1 6621 26 is_stmt 1 view .LVU1688
 5629              	.LBB607:
6623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 5630              		.loc 1 6623 3 view .LVU1689
6623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 5631              		.loc 1 6623 12 is_stmt 0 view .LVU1690
 5632 0166 8968     		ldr	r1, [r1, #8]
 5633              	.LVL397:
6623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 5634              		.loc 1 6623 12 view .LVU1691
 5635              	.LBE607:
 5636              	.LBE611:
 867:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 5637              		.loc 2 867 89 view .LVU1692
 5638 0168 0243     		orrs	r2, r2, r0
 5639 016a 0A43     		orrs	r2, r2, r1
 867:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 5640              		.loc 2 867 6 view .LVU1693
 5641 016c D207     		lsls	r2, r2, #31
 5642 016e 0BD5     		bpl	.L515
 5643              	.L511:
 900:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
ARM GAS  /tmp/ccJLHc1D.s 			page 346


 5644              		.loc 2 900 3 is_stmt 1 view .LVU1694
 5645 0170 2046     		mov	r0, r4
 5646 0172 FFF7FEFF 		bl	HAL_ADC_MspDeInit
 5647              	.LVL398:
 904:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5648              		.loc 2 904 3 view .LVU1695
 5649 0176 0023     		movs	r3, #0
 908:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5650              		.loc 2 908 38 is_stmt 0 view .LVU1696
 5651 0178 C4E91933 		strd	r3, r3, [r4, #100]
 904:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5652              		.loc 2 904 3 view .LVU1697
 5653 017c 2366     		str	r3, [r4, #96]
 907:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   hadc->InjectionConfig.ChannelCount = 0;
 5654              		.loc 2 907 3 is_stmt 1 view .LVU1698
 911:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5655              		.loc 2 911 3 view .LVU1699
 914:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5656              		.loc 2 914 3 is_stmt 0 view .LVU1700
 5657 017e 84F85830 		strb	r3, [r4, #88]
 911:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5658              		.loc 2 911 15 view .LVU1701
 5659 0182 E365     		str	r3, [r4, #92]
 914:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5660              		.loc 2 914 3 is_stmt 1 view .LVU1702
 914:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5661              		.loc 2 914 3 view .LVU1703
 914:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5662              		.loc 2 914 3 view .LVU1704
 917:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
 5663              		.loc 2 917 3 view .LVU1705
 5664              	.LVL399:
 5665              	.L506:
 918:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5666              		.loc 2 918 1 is_stmt 0 view .LVU1706
 5667 0184 2846     		mov	r0, r5
 5668 0186 70BD     		pop	{r4, r5, r6, pc}
 5669              	.LVL400:
 5670              	.L515:
 876:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 5671              		.loc 2 876 5 view .LVU1707
 5672 0188 094A     		ldr	r2, .L523+28
 5673 018a D1E7     		b	.L512
 5674              	.L518:
 5675 018c 074B     		ldr	r3, .L523+24
 5676 018e DAE7     		b	.L513
 5677              	.LVL401:
 5678              	.L514:
 730:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 5679              		.loc 2 730 12 view .LVU1708
 5680 0190 0125     		movs	r5, #1
 5681 0192 F7E7     		b	.L506
 5682              	.L524:
 5683              		.align	2
 5684              	.L523:
 5685 0194 00F8FFFF 		.word	-2048
 5686 0198 200882E0 		.word	-528349152
ARM GAS  /tmp/ccJLHc1D.s 			page 347


 5687 019c 300882E0 		.word	-528349136
 5688 01a0 00F0FF03 		.word	67104768
 5689 01a4 0000F8FF 		.word	-524288
 5690 01a8 00010050 		.word	1342177536
 5691 01ac 00030050 		.word	1342178048
 5692 01b0 00070050 		.word	1342179072
 5693 01b4 00040050 		.word	1342178304
 5694 01b8 00060050 		.word	1342178816
 5695              		.cfi_endproc
 5696              	.LFE358:
 5698              		.section	.text.HAL_ADC_Stop,"ax",%progbits
 5699              		.align	1
 5700              		.global	HAL_ADC_Stop
 5701              		.syntax unified
 5702              		.thumb
 5703              		.thumb_func
 5704              		.fpu fpv4-sp-d16
 5706              	HAL_ADC_Stop:
 5707              	.LVL402:
 5708              	.LFB362:
1367:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 5709              		.loc 2 1367 1 is_stmt 1 view -0
 5710              		.cfi_startproc
 5711              		@ args = 0, pretend = 0, frame = 0
 5712              		@ frame_needed = 0, uses_anonymous_args = 0
1368:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5713              		.loc 2 1368 3 view .LVU1710
1371:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5714              		.loc 2 1371 3 view .LVU1711
1374:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5715              		.loc 2 1374 3 view .LVU1712
1374:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5716              		.loc 2 1374 3 view .LVU1713
1367:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 5717              		.loc 2 1367 1 is_stmt 0 view .LVU1714
 5718 0000 10B5     		push	{r4, lr}
 5719              	.LCFI25:
 5720              		.cfi_def_cfa_offset 8
 5721              		.cfi_offset 4, -8
 5722              		.cfi_offset 14, -4
1374:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5723              		.loc 2 1374 3 view .LVU1715
 5724 0002 90F85830 		ldrb	r3, [r0, #88]	@ zero_extendqisi2
 5725 0006 012B     		cmp	r3, #1
1367:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 5726              		.loc 2 1367 1 view .LVU1716
 5727 0008 0446     		mov	r4, r0
1374:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5728              		.loc 2 1374 3 view .LVU1717
 5729 000a 16D0     		beq	.L528
1374:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5730              		.loc 2 1374 3 is_stmt 1 discriminator 2 view .LVU1718
 5731 000c 0123     		movs	r3, #1
 5732 000e 80F85830 		strb	r3, [r0, #88]
1374:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5733              		.loc 2 1374 3 discriminator 2 view .LVU1719
1377:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
ARM GAS  /tmp/ccJLHc1D.s 			page 348


 5734              		.loc 2 1377 3 discriminator 2 view .LVU1720
1377:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5735              		.loc 2 1377 20 is_stmt 0 discriminator 2 view .LVU1721
 5736 0012 0321     		movs	r1, #3
 5737 0014 FFF7FEFF 		bl	ADC_ConversionStop
 5738              	.LVL403:
1380:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 5739              		.loc 2 1380 3 is_stmt 1 discriminator 2 view .LVU1722
1380:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 5740              		.loc 2 1380 6 is_stmt 0 discriminator 2 view .LVU1723
 5741 0018 58B9     		cbnz	r0, .L527
1383:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5742              		.loc 2 1383 5 is_stmt 1 view .LVU1724
1383:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5743              		.loc 2 1383 22 is_stmt 0 view .LVU1725
 5744 001a 2046     		mov	r0, r4
 5745              	.LVL404:
1383:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5746              		.loc 2 1383 22 view .LVU1726
 5747 001c FFF7FEFF 		bl	ADC_Disable
 5748              	.LVL405:
1386:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 5749              		.loc 2 1386 5 is_stmt 1 view .LVU1727
1386:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 5750              		.loc 2 1386 8 is_stmt 0 view .LVU1728
 5751 0020 38B9     		cbnz	r0, .L527
1389:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 5752              		.loc 2 1389 7 is_stmt 1 view .LVU1729
 5753 0022 E36D     		ldr	r3, [r4, #92]
 5754 0024 23F48853 		bic	r3, r3, #4352
 5755 0028 23F00103 		bic	r3, r3, #1
 5756 002c 43F00103 		orr	r3, r3, #1
 5757 0030 E365     		str	r3, [r4, #92]
 5758              	.L527:
1396:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5759              		.loc 2 1396 3 view .LVU1730
1396:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5760              		.loc 2 1396 3 view .LVU1731
 5761 0032 0023     		movs	r3, #0
 5762 0034 84F85830 		strb	r3, [r4, #88]
1396:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5763              		.loc 2 1396 3 view .LVU1732
1399:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
 5764              		.loc 2 1399 3 view .LVU1733
 5765              	.LVL406:
 5766              	.L526:
1400:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5767              		.loc 2 1400 1 is_stmt 0 view .LVU1734
 5768 0038 10BD     		pop	{r4, pc}
 5769              	.LVL407:
 5770              	.L528:
1374:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5771              		.loc 2 1374 3 view .LVU1735
 5772 003a 0220     		movs	r0, #2
 5773              	.LVL408:
1374:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5774              		.loc 2 1374 3 view .LVU1736
ARM GAS  /tmp/ccJLHc1D.s 			page 349


 5775 003c FCE7     		b	.L526
 5776              		.cfi_endproc
 5777              	.LFE362:
 5779              		.section	.text.HAL_ADC_Stop_IT,"ax",%progbits
 5780              		.align	1
 5781              		.global	HAL_ADC_Stop_IT
 5782              		.syntax unified
 5783              		.thumb
 5784              		.thumb_func
 5785              		.fpu fpv4-sp-d16
 5787              	HAL_ADC_Stop_IT:
 5788              	.LVL409:
 5789              	.LFB366:
1952:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 5790              		.loc 2 1952 1 is_stmt 1 view -0
 5791              		.cfi_startproc
 5792              		@ args = 0, pretend = 0, frame = 0
 5793              		@ frame_needed = 0, uses_anonymous_args = 0
1953:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5794              		.loc 2 1953 3 view .LVU1738
1956:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5795              		.loc 2 1956 3 view .LVU1739
1959:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5796              		.loc 2 1959 3 view .LVU1740
1959:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5797              		.loc 2 1959 3 view .LVU1741
1952:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 5798              		.loc 2 1952 1 is_stmt 0 view .LVU1742
 5799 0000 10B5     		push	{r4, lr}
 5800              	.LCFI26:
 5801              		.cfi_def_cfa_offset 8
 5802              		.cfi_offset 4, -8
 5803              		.cfi_offset 14, -4
1959:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5804              		.loc 2 1959 3 view .LVU1743
 5805 0002 90F85830 		ldrb	r3, [r0, #88]	@ zero_extendqisi2
 5806 0006 012B     		cmp	r3, #1
1952:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 5807              		.loc 2 1952 1 view .LVU1744
 5808 0008 0446     		mov	r4, r0
1959:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5809              		.loc 2 1959 3 view .LVU1745
 5810 000a 1BD0     		beq	.L532
1959:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5811              		.loc 2 1959 3 is_stmt 1 discriminator 2 view .LVU1746
 5812 000c 0123     		movs	r3, #1
 5813 000e 80F85830 		strb	r3, [r0, #88]
1959:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5814              		.loc 2 1959 3 discriminator 2 view .LVU1747
1962:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5815              		.loc 2 1962 3 discriminator 2 view .LVU1748
1962:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5816              		.loc 2 1962 20 is_stmt 0 discriminator 2 view .LVU1749
 5817 0012 0321     		movs	r1, #3
 5818 0014 FFF7FEFF 		bl	ADC_ConversionStop
 5819              	.LVL410:
1965:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
ARM GAS  /tmp/ccJLHc1D.s 			page 350


 5820              		.loc 2 1965 3 is_stmt 1 discriminator 2 view .LVU1750
1965:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 5821              		.loc 2 1965 6 is_stmt 0 discriminator 2 view .LVU1751
 5822 0018 80B9     		cbnz	r0, .L531
1969:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5823              		.loc 2 1969 5 is_stmt 1 view .LVU1752
 5824 001a 2268     		ldr	r2, [r4]
 5825 001c 5368     		ldr	r3, [r2, #4]
 5826 001e 23F01C03 		bic	r3, r3, #28
 5827 0022 5360     		str	r3, [r2, #4]
1972:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5828              		.loc 2 1972 5 view .LVU1753
1972:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5829              		.loc 2 1972 22 is_stmt 0 view .LVU1754
 5830 0024 2046     		mov	r0, r4
 5831              	.LVL411:
1972:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5832              		.loc 2 1972 22 view .LVU1755
 5833 0026 FFF7FEFF 		bl	ADC_Disable
 5834              	.LVL412:
1975:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 5835              		.loc 2 1975 5 is_stmt 1 view .LVU1756
1975:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 5836              		.loc 2 1975 8 is_stmt 0 view .LVU1757
 5837 002a 38B9     		cbnz	r0, .L531
1978:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 5838              		.loc 2 1978 7 is_stmt 1 view .LVU1758
 5839 002c E36D     		ldr	r3, [r4, #92]
 5840 002e 23F48853 		bic	r3, r3, #4352
 5841 0032 23F00103 		bic	r3, r3, #1
 5842 0036 43F00103 		orr	r3, r3, #1
 5843 003a E365     		str	r3, [r4, #92]
 5844              	.L531:
1985:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5845              		.loc 2 1985 3 view .LVU1759
1985:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5846              		.loc 2 1985 3 view .LVU1760
 5847 003c 0023     		movs	r3, #0
 5848 003e 84F85830 		strb	r3, [r4, #88]
1985:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5849              		.loc 2 1985 3 view .LVU1761
1988:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
 5850              		.loc 2 1988 3 view .LVU1762
 5851              	.LVL413:
 5852              	.L530:
1989:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5853              		.loc 2 1989 1 is_stmt 0 view .LVU1763
 5854 0042 10BD     		pop	{r4, pc}
 5855              	.LVL414:
 5856              	.L532:
1959:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5857              		.loc 2 1959 3 view .LVU1764
 5858 0044 0220     		movs	r0, #2
 5859              	.LVL415:
1959:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5860              		.loc 2 1959 3 view .LVU1765
 5861 0046 FCE7     		b	.L530
ARM GAS  /tmp/ccJLHc1D.s 			page 351


 5862              		.cfi_endproc
 5863              	.LFE366:
 5865              		.section	.text.HAL_ADC_Stop_DMA,"ax",%progbits
 5866              		.align	1
 5867              		.global	HAL_ADC_Stop_DMA
 5868              		.syntax unified
 5869              		.thumb
 5870              		.thumb_func
 5871              		.fpu fpv4-sp-d16
 5873              	HAL_ADC_Stop_DMA:
 5874              	.LVL416:
 5875              	.LFB368:
2146:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 5876              		.loc 2 2146 1 is_stmt 1 view -0
 5877              		.cfi_startproc
 5878              		@ args = 0, pretend = 0, frame = 0
 5879              		@ frame_needed = 0, uses_anonymous_args = 0
2147:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5880              		.loc 2 2147 3 view .LVU1767
2150:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5881              		.loc 2 2150 3 view .LVU1768
2153:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5882              		.loc 2 2153 3 view .LVU1769
2153:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5883              		.loc 2 2153 3 view .LVU1770
2146:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 5884              		.loc 2 2146 1 is_stmt 0 view .LVU1771
 5885 0000 38B5     		push	{r3, r4, r5, lr}
 5886              	.LCFI27:
 5887              		.cfi_def_cfa_offset 16
 5888              		.cfi_offset 3, -16
 5889              		.cfi_offset 4, -12
 5890              		.cfi_offset 5, -8
 5891              		.cfi_offset 14, -4
2153:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5892              		.loc 2 2153 3 view .LVU1772
 5893 0002 90F85830 		ldrb	r3, [r0, #88]	@ zero_extendqisi2
 5894 0006 012B     		cmp	r3, #1
2146:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 5895              		.loc 2 2146 1 view .LVU1773
 5896 0008 0546     		mov	r5, r0
2153:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5897              		.loc 2 2153 3 view .LVU1774
 5898 000a 35D0     		beq	.L539
2153:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5899              		.loc 2 2153 3 is_stmt 1 discriminator 2 view .LVU1775
 5900 000c 0123     		movs	r3, #1
 5901 000e 80F85830 		strb	r3, [r0, #88]
2153:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5902              		.loc 2 2153 3 discriminator 2 view .LVU1776
2156:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5903              		.loc 2 2156 3 discriminator 2 view .LVU1777
2156:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5904              		.loc 2 2156 20 is_stmt 0 discriminator 2 view .LVU1778
 5905 0012 0321     		movs	r1, #3
 5906 0014 FFF7FEFF 		bl	ADC_ConversionStop
 5907              	.LVL417:
ARM GAS  /tmp/ccJLHc1D.s 			page 352


2159:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 5908              		.loc 2 2159 3 is_stmt 1 discriminator 2 view .LVU1779
2159:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 5909              		.loc 2 2159 6 is_stmt 0 discriminator 2 view .LVU1780
 5910 0018 0446     		mov	r4, r0
 5911 001a E0B9     		cbnz	r0, .L535
2162:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5912              		.loc 2 2162 5 is_stmt 1 view .LVU1781
 5913 001c 2A68     		ldr	r2, [r5]
2166:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 5914              		.loc 2 2166 13 is_stmt 0 view .LVU1782
 5915 001e 686D     		ldr	r0, [r5, #84]
 5916              	.LVL418:
2162:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5917              		.loc 2 2162 5 view .LVU1783
 5918 0020 D368     		ldr	r3, [r2, #12]
 5919 0022 23F00103 		bic	r3, r3, #1
 5920 0026 D360     		str	r3, [r2, #12]
2166:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 5921              		.loc 2 2166 5 is_stmt 1 view .LVU1784
2166:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 5922              		.loc 2 2166 25 is_stmt 0 view .LVU1785
 5923 0028 90F82530 		ldrb	r3, [r0, #37]	@ zero_extendqisi2
2166:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 5924              		.loc 2 2166 8 view .LVU1786
 5925 002c 022B     		cmp	r3, #2
 5926 002e 07D1     		bne	.L536
2168:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5927              		.loc 2 2168 7 is_stmt 1 view .LVU1787
2168:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5928              		.loc 2 2168 24 is_stmt 0 view .LVU1788
 5929 0030 FFF7FEFF 		bl	HAL_DMA_Abort
 5930              	.LVL419:
2171:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 5931              		.loc 2 2171 7 is_stmt 1 view .LVU1789
2171:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 5932              		.loc 2 2171 10 is_stmt 0 view .LVU1790
 5933 0034 0446     		mov	r4, r0
 5934 0036 18B1     		cbz	r0, .L536
2174:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 5935              		.loc 2 2174 9 is_stmt 1 view .LVU1791
 5936 0038 EB6D     		ldr	r3, [r5, #92]
 5937 003a 43F04003 		orr	r3, r3, #64
 5938 003e EB65     		str	r3, [r5, #92]
 5939              	.LVL420:
 5940              	.L536:
2179:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5941              		.loc 2 2179 5 view .LVU1792
 5942 0040 2A68     		ldr	r2, [r5]
 5943 0042 5368     		ldr	r3, [r2, #4]
 5944 0044 23F01003 		bic	r3, r3, #16
 5945 0048 5360     		str	r3, [r2, #4]
2184:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 5946              		.loc 2 2184 5 view .LVU1793
2186:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 5947              		.loc 2 2186 24 is_stmt 0 view .LVU1794
 5948 004a 2846     		mov	r0, r5
ARM GAS  /tmp/ccJLHc1D.s 			page 353


2184:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 5949              		.loc 2 2184 8 view .LVU1795
 5950 004c 44B9     		cbnz	r4, .L537
 5951              	.LVL421:
2186:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 5952              		.loc 2 2186 7 is_stmt 1 view .LVU1796
2186:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 5953              		.loc 2 2186 24 is_stmt 0 view .LVU1797
 5954 004e FFF7FEFF 		bl	ADC_Disable
 5955              	.LVL422:
2194:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 5956              		.loc 2 2194 5 is_stmt 1 view .LVU1798
2194:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 5957              		.loc 2 2194 8 is_stmt 0 view .LVU1799
 5958 0052 0446     		mov	r4, r0
 5959 0054 38B1     		cbz	r0, .L538
 5960              	.LVL423:
 5961              	.L535:
2205:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5962              		.loc 2 2205 3 is_stmt 1 view .LVU1800
2205:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5963              		.loc 2 2205 3 view .LVU1801
 5964 0056 0023     		movs	r3, #0
 5965 0058 85F85830 		strb	r3, [r5, #88]
2205:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5966              		.loc 2 2205 3 view .LVU1802
2208:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
 5967              		.loc 2 2208 3 view .LVU1803
 5968              	.LVL424:
 5969              	.L534:
2209:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5970              		.loc 2 2209 1 is_stmt 0 view .LVU1804
 5971 005c 2046     		mov	r0, r4
 5972 005e 38BD     		pop	{r3, r4, r5, pc}
 5973              	.LVL425:
 5974              	.L537:
2190:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 5975              		.loc 2 2190 7 is_stmt 1 view .LVU1805
2190:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 5976              		.loc 2 2190 13 is_stmt 0 view .LVU1806
 5977 0060 FFF7FEFF 		bl	ADC_Disable
 5978              	.LVL426:
2194:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 5979              		.loc 2 2194 5 is_stmt 1 view .LVU1807
 5980 0064 F7E7     		b	.L535
 5981              	.LVL427:
 5982              	.L538:
2197:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 5983              		.loc 2 2197 7 view .LVU1808
 5984 0066 EB6D     		ldr	r3, [r5, #92]
 5985 0068 23F48853 		bic	r3, r3, #4352
 5986 006c 23F00103 		bic	r3, r3, #1
 5987 0070 43F00103 		orr	r3, r3, #1
 5988 0074 EB65     		str	r3, [r5, #92]
 5989 0076 EEE7     		b	.L535
 5990              	.LVL428:
 5991              	.L539:
ARM GAS  /tmp/ccJLHc1D.s 			page 354


2153:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5992              		.loc 2 2153 3 is_stmt 0 view .LVU1809
 5993 0078 0224     		movs	r4, #2
 5994 007a EFE7     		b	.L534
 5995              		.cfi_endproc
 5996              	.LFE368:
 5998              		.text
 5999              	.Letext0:
 6000              		.file 4 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 6001              		.file 5 "Drivers/CMSIS/Include/core_cm4.h"
 6002              		.file 6 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/system_stm32g4xx.h"
 6003              		.file 7 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g474xx.h"
 6004              		.file 8 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g4xx.h"
 6005              		.file 9 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_def.h"
 6006              		.file 10 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_dma.h"
 6007              		.file 11 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_adc.h"
 6008              		.file 12 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_flash.h"
 6009              		.file 13 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal.h"
 6010              		.file 14 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_adc_ex.h"
ARM GAS  /tmp/ccJLHc1D.s 			page 355


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32g4xx_hal_adc.c
     /tmp/ccJLHc1D.s:18     .text.LL_ADC_SetChannelSamplingTime:0000000000000000 $t
     /tmp/ccJLHc1D.s:25     .text.LL_ADC_SetChannelSamplingTime:0000000000000000 LL_ADC_SetChannelSamplingTime
     /tmp/ccJLHc1D.s:64     .text.LL_ADC_SetAnalogWDMonitChannels:0000000000000000 $t
     /tmp/ccJLHc1D.s:70     .text.LL_ADC_SetAnalogWDMonitChannels:0000000000000000 LL_ADC_SetAnalogWDMonitChannels
     /tmp/ccJLHc1D.s:109    .text.LL_ADC_REG_IsConversionOngoing:0000000000000000 $t
     /tmp/ccJLHc1D.s:115    .text.LL_ADC_REG_IsConversionOngoing:0000000000000000 LL_ADC_REG_IsConversionOngoing
     /tmp/ccJLHc1D.s:134    .text.HAL_ADC_MspInit:0000000000000000 $t
     /tmp/ccJLHc1D.s:141    .text.HAL_ADC_MspInit:0000000000000000 HAL_ADC_MspInit
     /tmp/ccJLHc1D.s:157    .text.HAL_ADC_Init:0000000000000000 $t
     /tmp/ccJLHc1D.s:164    .text.HAL_ADC_Init:0000000000000000 HAL_ADC_Init
     /tmp/ccJLHc1D.s:719    .text.HAL_ADC_Init:0000000000000204 $d
     /tmp/ccJLHc1D.s:732    .text.HAL_ADC_MspDeInit:0000000000000000 $t
     /tmp/ccJLHc1D.s:739    .text.HAL_ADC_MspDeInit:0000000000000000 HAL_ADC_MspDeInit
     /tmp/ccJLHc1D.s:750    .text.HAL_ADC_PollForConversion:0000000000000000 $t
     /tmp/ccJLHc1D.s:757    .text.HAL_ADC_PollForConversion:0000000000000000 HAL_ADC_PollForConversion
     /tmp/ccJLHc1D.s:1059   .text.HAL_ADC_PollForConversion:0000000000000118 $d
     /tmp/ccJLHc1D.s:1067   .text.HAL_ADC_PollForEvent:0000000000000000 $t
     /tmp/ccJLHc1D.s:1074   .text.HAL_ADC_PollForEvent:0000000000000000 HAL_ADC_PollForEvent
     /tmp/ccJLHc1D.s:1228   .text.HAL_ADC_GetValue:0000000000000000 $t
     /tmp/ccJLHc1D.s:1235   .text.HAL_ADC_GetValue:0000000000000000 HAL_ADC_GetValue
     /tmp/ccJLHc1D.s:1256   .text.HAL_ADC_StartSampling:0000000000000000 $t
     /tmp/ccJLHc1D.s:1263   .text.HAL_ADC_StartSampling:0000000000000000 HAL_ADC_StartSampling
     /tmp/ccJLHc1D.s:1287   .text.HAL_ADC_StopSampling:0000000000000000 $t
     /tmp/ccJLHc1D.s:1294   .text.HAL_ADC_StopSampling:0000000000000000 HAL_ADC_StopSampling
     /tmp/ccJLHc1D.s:1318   .text.HAL_ADC_ConvCpltCallback:0000000000000000 $t
     /tmp/ccJLHc1D.s:1325   .text.HAL_ADC_ConvCpltCallback:0000000000000000 HAL_ADC_ConvCpltCallback
     /tmp/ccJLHc1D.s:1336   .text.HAL_ADC_ConvHalfCpltCallback:0000000000000000 $t
     /tmp/ccJLHc1D.s:1343   .text.HAL_ADC_ConvHalfCpltCallback:0000000000000000 HAL_ADC_ConvHalfCpltCallback
     /tmp/ccJLHc1D.s:1354   .text.ADC_DMAHalfConvCplt:0000000000000000 $t
     /tmp/ccJLHc1D.s:1361   .text.ADC_DMAHalfConvCplt:0000000000000000 ADC_DMAHalfConvCplt
     /tmp/ccJLHc1D.s:1388   .text.HAL_ADC_LevelOutOfWindowCallback:0000000000000000 $t
     /tmp/ccJLHc1D.s:1395   .text.HAL_ADC_LevelOutOfWindowCallback:0000000000000000 HAL_ADC_LevelOutOfWindowCallback
     /tmp/ccJLHc1D.s:1406   .text.HAL_ADC_ErrorCallback:0000000000000000 $t
     /tmp/ccJLHc1D.s:1413   .text.HAL_ADC_ErrorCallback:0000000000000000 HAL_ADC_ErrorCallback
     /tmp/ccJLHc1D.s:1424   .text.HAL_ADC_IRQHandler:0000000000000000 $t
     /tmp/ccJLHc1D.s:1431   .text.HAL_ADC_IRQHandler:0000000000000000 HAL_ADC_IRQHandler
     /tmp/ccJLHc1D.s:2044   .text.HAL_ADC_IRQHandler:0000000000000284 $d
     /tmp/ccJLHc1D.s:2053   .text.ADC_DMAConvCplt:0000000000000000 $t
     /tmp/ccJLHc1D.s:2060   .text.ADC_DMAConvCplt:0000000000000000 ADC_DMAConvCplt
     /tmp/ccJLHc1D.s:2188   .text.ADC_DMAError:0000000000000000 $t
     /tmp/ccJLHc1D.s:2195   .text.ADC_DMAError:0000000000000000 ADC_DMAError
     /tmp/ccJLHc1D.s:2230   .text.HAL_ADC_ConfigChannel:0000000000000000 $t
     /tmp/ccJLHc1D.s:2237   .text.HAL_ADC_ConfigChannel:0000000000000000 HAL_ADC_ConfigChannel
     /tmp/ccJLHc1D.s:3331   .text.HAL_ADC_ConfigChannel:000000000000038c $d
     /tmp/ccJLHc1D.s:3348   .text.HAL_ADC_ConfigChannel:00000000000003c4 $t
     /tmp/ccJLHc1D.s:3356   .text.HAL_ADC_AnalogWDGConfig:0000000000000000 $t
     /tmp/ccJLHc1D.s:3363   .text.HAL_ADC_AnalogWDGConfig:0000000000000000 HAL_ADC_AnalogWDGConfig
     /tmp/ccJLHc1D.s:3905   .text.HAL_ADC_AnalogWDGConfig:000000000000021c $d
     /tmp/ccJLHc1D.s:3914   .text.HAL_ADC_GetState:0000000000000000 $t
     /tmp/ccJLHc1D.s:3921   .text.HAL_ADC_GetState:0000000000000000 HAL_ADC_GetState
     /tmp/ccJLHc1D.s:3940   .text.HAL_ADC_GetError:0000000000000000 $t
     /tmp/ccJLHc1D.s:3947   .text.HAL_ADC_GetError:0000000000000000 HAL_ADC_GetError
     /tmp/ccJLHc1D.s:3966   .text.ADC_ConversionStop:0000000000000000 $t
     /tmp/ccJLHc1D.s:3973   .text.ADC_ConversionStop:0000000000000000 ADC_ConversionStop
     /tmp/ccJLHc1D.s:4236   .text.ADC_ConversionStop:00000000000000c4 $d
ARM GAS  /tmp/ccJLHc1D.s 			page 356


     /tmp/ccJLHc1D.s:4241   .text.ADC_Enable:0000000000000000 $t
     /tmp/ccJLHc1D.s:4248   .text.ADC_Enable:0000000000000000 ADC_Enable
     /tmp/ccJLHc1D.s:4399   .text.ADC_Enable:0000000000000064 $d
     /tmp/ccJLHc1D.s:4405   .text.HAL_ADC_Start:0000000000000000 $t
     /tmp/ccJLHc1D.s:4412   .text.HAL_ADC_Start:0000000000000000 HAL_ADC_Start
     /tmp/ccJLHc1D.s:4636   .text.HAL_ADC_Start:00000000000000f8 $d
     /tmp/ccJLHc1D.s:4643   .text.HAL_ADC_Start_IT:0000000000000000 $t
     /tmp/ccJLHc1D.s:4650   .text.HAL_ADC_Start_IT:0000000000000000 HAL_ADC_Start_IT
     /tmp/ccJLHc1D.s:4954   .text.HAL_ADC_Start_IT:0000000000000168 $d
     /tmp/ccJLHc1D.s:4961   .text.HAL_ADC_Start_DMA:0000000000000000 $t
     /tmp/ccJLHc1D.s:4968   .text.HAL_ADC_Start_DMA:0000000000000000 HAL_ADC_Start_DMA
     /tmp/ccJLHc1D.s:5194   .text.HAL_ADC_Start_DMA:00000000000000fc $d
     /tmp/ccJLHc1D.s:5204   .text.ADC_Disable:0000000000000000 $t
     /tmp/ccJLHc1D.s:5211   .text.ADC_Disable:0000000000000000 ADC_Disable
     /tmp/ccJLHc1D.s:5348   .text.HAL_ADC_DeInit:0000000000000000 $t
     /tmp/ccJLHc1D.s:5355   .text.HAL_ADC_DeInit:0000000000000000 HAL_ADC_DeInit
     /tmp/ccJLHc1D.s:5685   .text.HAL_ADC_DeInit:0000000000000194 $d
     /tmp/ccJLHc1D.s:5699   .text.HAL_ADC_Stop:0000000000000000 $t
     /tmp/ccJLHc1D.s:5706   .text.HAL_ADC_Stop:0000000000000000 HAL_ADC_Stop
     /tmp/ccJLHc1D.s:5780   .text.HAL_ADC_Stop_IT:0000000000000000 $t
     /tmp/ccJLHc1D.s:5787   .text.HAL_ADC_Stop_IT:0000000000000000 HAL_ADC_Stop_IT
     /tmp/ccJLHc1D.s:5866   .text.HAL_ADC_Stop_DMA:0000000000000000 $t
     /tmp/ccJLHc1D.s:5873   .text.HAL_ADC_Stop_DMA:0000000000000000 HAL_ADC_Stop_DMA

UNDEFINED SYMBOLS
SystemCoreClock
HAL_GetTick
HAL_ADCEx_EndOfSamplingCallback
HAL_ADCEx_InjectedConvCpltCallback
HAL_ADCEx_LevelOutOfWindow2Callback
HAL_ADCEx_LevelOutOfWindow3Callback
HAL_ADCEx_InjectedQueueOverflowCallback
HAL_DMA_Start_IT
HAL_DMA_Abort
