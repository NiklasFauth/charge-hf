ARM GAS  /tmp/cc49UZSv.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32g4xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NMI_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	NMI_Handler
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	NMI_Handler:
  27              	.LFB1052:
  28              		.file 1 "Src/stm32g4xx_it.c"
   1:Src/stm32g4xx_it.c **** /* USER CODE BEGIN Header */
   2:Src/stm32g4xx_it.c **** /**
   3:Src/stm32g4xx_it.c ****   ******************************************************************************
   4:Src/stm32g4xx_it.c ****   * @file    stm32g4xx_it.c
   5:Src/stm32g4xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Src/stm32g4xx_it.c ****   ******************************************************************************
   7:Src/stm32g4xx_it.c ****   * @attention
   8:Src/stm32g4xx_it.c ****   *
   9:Src/stm32g4xx_it.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Src/stm32g4xx_it.c ****   * All rights reserved.</center></h2>
  11:Src/stm32g4xx_it.c ****   *
  12:Src/stm32g4xx_it.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/stm32g4xx_it.c ****   * the "License"; You may not use this file except in compliance with the
  14:Src/stm32g4xx_it.c ****   * License. You may obtain a copy of the License at:
  15:Src/stm32g4xx_it.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/stm32g4xx_it.c ****   *
  17:Src/stm32g4xx_it.c ****   ******************************************************************************
  18:Src/stm32g4xx_it.c ****   */
  19:Src/stm32g4xx_it.c **** /* USER CODE END Header */
  20:Src/stm32g4xx_it.c **** 
  21:Src/stm32g4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:Src/stm32g4xx_it.c **** #include "main.h"
  23:Src/stm32g4xx_it.c **** #include "stm32g4xx_it.h"
  24:Src/stm32g4xx_it.c **** /* Private includes ----------------------------------------------------------*/
  25:Src/stm32g4xx_it.c **** /* USER CODE BEGIN Includes */
  26:Src/stm32g4xx_it.c **** /* USER CODE END Includes */
  27:Src/stm32g4xx_it.c **** 
  28:Src/stm32g4xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  29:Src/stm32g4xx_it.c **** /* USER CODE BEGIN TD */
  30:Src/stm32g4xx_it.c **** 
ARM GAS  /tmp/cc49UZSv.s 			page 2


  31:Src/stm32g4xx_it.c **** /* USER CODE END TD */
  32:Src/stm32g4xx_it.c **** 
  33:Src/stm32g4xx_it.c **** /* Private define ------------------------------------------------------------*/
  34:Src/stm32g4xx_it.c **** /* USER CODE BEGIN PD */
  35:Src/stm32g4xx_it.c **** 
  36:Src/stm32g4xx_it.c **** /* USER CODE END PD */
  37:Src/stm32g4xx_it.c **** 
  38:Src/stm32g4xx_it.c **** /* Private macro -------------------------------------------------------------*/
  39:Src/stm32g4xx_it.c **** /* USER CODE BEGIN PM */
  40:Src/stm32g4xx_it.c **** 
  41:Src/stm32g4xx_it.c **** /* USER CODE END PM */
  42:Src/stm32g4xx_it.c **** 
  43:Src/stm32g4xx_it.c **** /* Private variables ---------------------------------------------------------*/
  44:Src/stm32g4xx_it.c **** /* USER CODE BEGIN PV */
  45:Src/stm32g4xx_it.c **** 
  46:Src/stm32g4xx_it.c **** /* USER CODE END PV */
  47:Src/stm32g4xx_it.c **** 
  48:Src/stm32g4xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  49:Src/stm32g4xx_it.c **** /* USER CODE BEGIN PFP */
  50:Src/stm32g4xx_it.c **** 
  51:Src/stm32g4xx_it.c **** /* USER CODE END PFP */
  52:Src/stm32g4xx_it.c **** 
  53:Src/stm32g4xx_it.c **** /* Private user code ---------------------------------------------------------*/
  54:Src/stm32g4xx_it.c **** /* USER CODE BEGIN 0 */
  55:Src/stm32g4xx_it.c **** 
  56:Src/stm32g4xx_it.c **** /* USER CODE END 0 */
  57:Src/stm32g4xx_it.c **** 
  58:Src/stm32g4xx_it.c **** /* External variables --------------------------------------------------------*/
  59:Src/stm32g4xx_it.c **** extern DMA_HandleTypeDef hdma_adc2;
  60:Src/stm32g4xx_it.c **** extern HRTIM_HandleTypeDef hhrtim1;
  61:Src/stm32g4xx_it.c **** /* USER CODE BEGIN EV */
  62:Src/stm32g4xx_it.c **** extern PCD_HandleTypeDef hpcd_USB_FS;
  63:Src/stm32g4xx_it.c **** /* USER CODE END EV */
  64:Src/stm32g4xx_it.c **** 
  65:Src/stm32g4xx_it.c **** /******************************************************************************/
  66:Src/stm32g4xx_it.c **** /*           Cortex-M4 Processor Interruption and Exception Handlers          */ 
  67:Src/stm32g4xx_it.c **** /******************************************************************************/
  68:Src/stm32g4xx_it.c **** /**
  69:Src/stm32g4xx_it.c ****   * @brief This function handles Non maskable interrupt.
  70:Src/stm32g4xx_it.c ****   */
  71:Src/stm32g4xx_it.c **** void NMI_Handler(void)
  72:Src/stm32g4xx_it.c **** {
  29              		.loc 1 72 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  73:Src/stm32g4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  74:Src/stm32g4xx_it.c **** 
  75:Src/stm32g4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  76:Src/stm32g4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  77:Src/stm32g4xx_it.c **** 
  78:Src/stm32g4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  79:Src/stm32g4xx_it.c **** }
  34              		.loc 1 79 1 view .LVU1
  35 0000 7047     		bx	lr
  36              		.cfi_endproc
ARM GAS  /tmp/cc49UZSv.s 			page 3


  37              	.LFE1052:
  39              		.section	.text.HardFault_Handler,"ax",%progbits
  40              		.align	1
  41              		.global	HardFault_Handler
  42              		.syntax unified
  43              		.thumb
  44              		.thumb_func
  45              		.fpu fpv4-sp-d16
  47              	HardFault_Handler:
  48              	.LFB1053:
  80:Src/stm32g4xx_it.c **** 
  81:Src/stm32g4xx_it.c **** /**
  82:Src/stm32g4xx_it.c ****   * @brief This function handles Hard fault interrupt.
  83:Src/stm32g4xx_it.c ****   */
  84:Src/stm32g4xx_it.c **** void HardFault_Handler(void)
  85:Src/stm32g4xx_it.c **** {
  49              		.loc 1 85 1 view -0
  50              		.cfi_startproc
  51              		@ Volatile: function does not return.
  52              		@ args = 0, pretend = 0, frame = 0
  53              		@ frame_needed = 0, uses_anonymous_args = 0
  54              		@ link register save eliminated.
  55              	.L3:
  86:Src/stm32g4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  87:Src/stm32g4xx_it.c **** 
  88:Src/stm32g4xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  89:Src/stm32g4xx_it.c ****   while (1)
  56              		.loc 1 89 3 discriminator 1 view .LVU3
  90:Src/stm32g4xx_it.c ****   {
  91:Src/stm32g4xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  92:Src/stm32g4xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  93:Src/stm32g4xx_it.c ****   }
  57              		.loc 1 93 3 discriminator 1 view .LVU4
  89:Src/stm32g4xx_it.c ****   {
  58              		.loc 1 89 9 discriminator 1 view .LVU5
  59 0000 FEE7     		b	.L3
  60              		.cfi_endproc
  61              	.LFE1053:
  63              		.section	.text.MemManage_Handler,"ax",%progbits
  64              		.align	1
  65              		.global	MemManage_Handler
  66              		.syntax unified
  67              		.thumb
  68              		.thumb_func
  69              		.fpu fpv4-sp-d16
  71              	MemManage_Handler:
  72              	.LFB1054:
  94:Src/stm32g4xx_it.c **** }
  95:Src/stm32g4xx_it.c **** 
  96:Src/stm32g4xx_it.c **** /**
  97:Src/stm32g4xx_it.c ****   * @brief This function handles Memory management fault.
  98:Src/stm32g4xx_it.c ****   */
  99:Src/stm32g4xx_it.c **** void MemManage_Handler(void)
 100:Src/stm32g4xx_it.c **** {
  73              		.loc 1 100 1 view -0
  74              		.cfi_startproc
  75              		@ Volatile: function does not return.
ARM GAS  /tmp/cc49UZSv.s 			page 4


  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78              		@ link register save eliminated.
  79              	.L5:
 101:Src/stm32g4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 102:Src/stm32g4xx_it.c **** 
 103:Src/stm32g4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 104:Src/stm32g4xx_it.c ****   while (1)
  80              		.loc 1 104 3 discriminator 1 view .LVU7
 105:Src/stm32g4xx_it.c ****   {
 106:Src/stm32g4xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 107:Src/stm32g4xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 108:Src/stm32g4xx_it.c ****   }
  81              		.loc 1 108 3 discriminator 1 view .LVU8
 104:Src/stm32g4xx_it.c ****   {
  82              		.loc 1 104 9 discriminator 1 view .LVU9
  83 0000 FEE7     		b	.L5
  84              		.cfi_endproc
  85              	.LFE1054:
  87              		.section	.text.BusFault_Handler,"ax",%progbits
  88              		.align	1
  89              		.global	BusFault_Handler
  90              		.syntax unified
  91              		.thumb
  92              		.thumb_func
  93              		.fpu fpv4-sp-d16
  95              	BusFault_Handler:
  96              	.LFB1055:
 109:Src/stm32g4xx_it.c **** }
 110:Src/stm32g4xx_it.c **** 
 111:Src/stm32g4xx_it.c **** /**
 112:Src/stm32g4xx_it.c ****   * @brief This function handles Prefetch fault, memory access fault.
 113:Src/stm32g4xx_it.c ****   */
 114:Src/stm32g4xx_it.c **** void BusFault_Handler(void)
 115:Src/stm32g4xx_it.c **** {
  97              		.loc 1 115 1 view -0
  98              		.cfi_startproc
  99              		@ Volatile: function does not return.
 100              		@ args = 0, pretend = 0, frame = 0
 101              		@ frame_needed = 0, uses_anonymous_args = 0
 102              		@ link register save eliminated.
 103              	.L7:
 116:Src/stm32g4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 117:Src/stm32g4xx_it.c **** 
 118:Src/stm32g4xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 119:Src/stm32g4xx_it.c ****   while (1)
 104              		.loc 1 119 3 discriminator 1 view .LVU11
 120:Src/stm32g4xx_it.c ****   {
 121:Src/stm32g4xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 122:Src/stm32g4xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 123:Src/stm32g4xx_it.c ****   }
 105              		.loc 1 123 3 discriminator 1 view .LVU12
 119:Src/stm32g4xx_it.c ****   {
 106              		.loc 1 119 9 discriminator 1 view .LVU13
 107 0000 FEE7     		b	.L7
 108              		.cfi_endproc
 109              	.LFE1055:
ARM GAS  /tmp/cc49UZSv.s 			page 5


 111              		.section	.text.UsageFault_Handler,"ax",%progbits
 112              		.align	1
 113              		.global	UsageFault_Handler
 114              		.syntax unified
 115              		.thumb
 116              		.thumb_func
 117              		.fpu fpv4-sp-d16
 119              	UsageFault_Handler:
 120              	.LFB1056:
 124:Src/stm32g4xx_it.c **** }
 125:Src/stm32g4xx_it.c **** 
 126:Src/stm32g4xx_it.c **** /**
 127:Src/stm32g4xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 128:Src/stm32g4xx_it.c ****   */
 129:Src/stm32g4xx_it.c **** void UsageFault_Handler(void)
 130:Src/stm32g4xx_it.c **** {
 121              		.loc 1 130 1 view -0
 122              		.cfi_startproc
 123              		@ Volatile: function does not return.
 124              		@ args = 0, pretend = 0, frame = 0
 125              		@ frame_needed = 0, uses_anonymous_args = 0
 126              		@ link register save eliminated.
 127              	.L9:
 131:Src/stm32g4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 132:Src/stm32g4xx_it.c **** 
 133:Src/stm32g4xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 134:Src/stm32g4xx_it.c ****   while (1)
 128              		.loc 1 134 3 discriminator 1 view .LVU15
 135:Src/stm32g4xx_it.c ****   {
 136:Src/stm32g4xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 137:Src/stm32g4xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 138:Src/stm32g4xx_it.c ****   }
 129              		.loc 1 138 3 discriminator 1 view .LVU16
 134:Src/stm32g4xx_it.c ****   {
 130              		.loc 1 134 9 discriminator 1 view .LVU17
 131 0000 FEE7     		b	.L9
 132              		.cfi_endproc
 133              	.LFE1056:
 135              		.section	.text.SVC_Handler,"ax",%progbits
 136              		.align	1
 137              		.global	SVC_Handler
 138              		.syntax unified
 139              		.thumb
 140              		.thumb_func
 141              		.fpu fpv4-sp-d16
 143              	SVC_Handler:
 144              	.LFB1065:
 145              		.cfi_startproc
 146              		@ args = 0, pretend = 0, frame = 0
 147              		@ frame_needed = 0, uses_anonymous_args = 0
 148              		@ link register save eliminated.
 149 0000 7047     		bx	lr
 150              		.cfi_endproc
 151              	.LFE1065:
 153              		.section	.text.DebugMon_Handler,"ax",%progbits
 154              		.align	1
 155              		.global	DebugMon_Handler
ARM GAS  /tmp/cc49UZSv.s 			page 6


 156              		.syntax unified
 157              		.thumb
 158              		.thumb_func
 159              		.fpu fpv4-sp-d16
 161              	DebugMon_Handler:
 162              	.LFB1067:
 163              		.cfi_startproc
 164              		@ args = 0, pretend = 0, frame = 0
 165              		@ frame_needed = 0, uses_anonymous_args = 0
 166              		@ link register save eliminated.
 167 0000 7047     		bx	lr
 168              		.cfi_endproc
 169              	.LFE1067:
 171              		.section	.text.PendSV_Handler,"ax",%progbits
 172              		.align	1
 173              		.global	PendSV_Handler
 174              		.syntax unified
 175              		.thumb
 176              		.thumb_func
 177              		.fpu fpv4-sp-d16
 179              	PendSV_Handler:
 180              	.LFB1069:
 181              		.cfi_startproc
 182              		@ args = 0, pretend = 0, frame = 0
 183              		@ frame_needed = 0, uses_anonymous_args = 0
 184              		@ link register save eliminated.
 185 0000 7047     		bx	lr
 186              		.cfi_endproc
 187              	.LFE1069:
 189              		.section	.text.SysTick_Handler,"ax",%progbits
 190              		.align	1
 191              		.global	SysTick_Handler
 192              		.syntax unified
 193              		.thumb
 194              		.thumb_func
 195              		.fpu fpv4-sp-d16
 197              	SysTick_Handler:
 198              	.LFB1060:
 139:Src/stm32g4xx_it.c **** }
 140:Src/stm32g4xx_it.c **** 
 141:Src/stm32g4xx_it.c **** /**
 142:Src/stm32g4xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 143:Src/stm32g4xx_it.c ****   */
 144:Src/stm32g4xx_it.c **** void SVC_Handler(void)
 145:Src/stm32g4xx_it.c **** {
 146:Src/stm32g4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 147:Src/stm32g4xx_it.c **** 
 148:Src/stm32g4xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 149:Src/stm32g4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 150:Src/stm32g4xx_it.c **** 
 151:Src/stm32g4xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 152:Src/stm32g4xx_it.c **** }
 153:Src/stm32g4xx_it.c **** 
 154:Src/stm32g4xx_it.c **** /**
 155:Src/stm32g4xx_it.c ****   * @brief This function handles Debug monitor.
 156:Src/stm32g4xx_it.c ****   */
 157:Src/stm32g4xx_it.c **** void DebugMon_Handler(void)
ARM GAS  /tmp/cc49UZSv.s 			page 7


 158:Src/stm32g4xx_it.c **** {
 159:Src/stm32g4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 160:Src/stm32g4xx_it.c **** 
 161:Src/stm32g4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 162:Src/stm32g4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 163:Src/stm32g4xx_it.c **** 
 164:Src/stm32g4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 165:Src/stm32g4xx_it.c **** }
 166:Src/stm32g4xx_it.c **** 
 167:Src/stm32g4xx_it.c **** /**
 168:Src/stm32g4xx_it.c ****   * @brief This function handles Pendable request for system service.
 169:Src/stm32g4xx_it.c ****   */
 170:Src/stm32g4xx_it.c **** void PendSV_Handler(void)
 171:Src/stm32g4xx_it.c **** {
 172:Src/stm32g4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 173:Src/stm32g4xx_it.c **** 
 174:Src/stm32g4xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 175:Src/stm32g4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 176:Src/stm32g4xx_it.c **** 
 177:Src/stm32g4xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 178:Src/stm32g4xx_it.c **** }
 179:Src/stm32g4xx_it.c **** 
 180:Src/stm32g4xx_it.c **** /**
 181:Src/stm32g4xx_it.c ****   * @brief This function handles System tick timer.
 182:Src/stm32g4xx_it.c ****   */
 183:Src/stm32g4xx_it.c **** void SysTick_Handler(void)
 184:Src/stm32g4xx_it.c **** {
 199              		.loc 1 184 1 view -0
 200              		.cfi_startproc
 201              		@ args = 0, pretend = 0, frame = 0
 202              		@ frame_needed = 0, uses_anonymous_args = 0
 203              		@ link register save eliminated.
 185:Src/stm32g4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 186:Src/stm32g4xx_it.c **** 
 187:Src/stm32g4xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 188:Src/stm32g4xx_it.c ****   HAL_IncTick();
 204              		.loc 1 188 3 view .LVU19
 205 0000 FFF7FEBF 		b	HAL_IncTick
 206              	.LVL0:
 207              		.cfi_endproc
 208              	.LFE1060:
 210              		.section	.text.DMA1_Channel1_IRQHandler,"ax",%progbits
 211              		.align	1
 212              		.global	DMA1_Channel1_IRQHandler
 213              		.syntax unified
 214              		.thumb
 215              		.thumb_func
 216              		.fpu fpv4-sp-d16
 218              	DMA1_Channel1_IRQHandler:
 219              	.LFB1061:
 189:Src/stm32g4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 190:Src/stm32g4xx_it.c **** 
 191:Src/stm32g4xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 192:Src/stm32g4xx_it.c **** }
 193:Src/stm32g4xx_it.c **** 
 194:Src/stm32g4xx_it.c **** /******************************************************************************/
 195:Src/stm32g4xx_it.c **** /* STM32G4xx Peripheral Interrupt Handlers                                    */
ARM GAS  /tmp/cc49UZSv.s 			page 8


 196:Src/stm32g4xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 197:Src/stm32g4xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 198:Src/stm32g4xx_it.c **** /* please refer to the startup file (startup_stm32g4xx.s).                    */
 199:Src/stm32g4xx_it.c **** /******************************************************************************/
 200:Src/stm32g4xx_it.c **** 
 201:Src/stm32g4xx_it.c **** /**
 202:Src/stm32g4xx_it.c ****   * @brief This function handles DMA1 channel1 global interrupt.
 203:Src/stm32g4xx_it.c ****   */
 204:Src/stm32g4xx_it.c **** void DMA1_Channel1_IRQHandler(void)
 205:Src/stm32g4xx_it.c **** {
 220              		.loc 1 205 1 view -0
 221              		.cfi_startproc
 222              		@ args = 0, pretend = 0, frame = 0
 223              		@ frame_needed = 0, uses_anonymous_args = 0
 224              		@ link register save eliminated.
 206:Src/stm32g4xx_it.c ****   /* USER CODE BEGIN DMA1_Channel1_IRQn 0 */
 207:Src/stm32g4xx_it.c **** 
 208:Src/stm32g4xx_it.c ****   /* USER CODE END DMA1_Channel1_IRQn 0 */
 209:Src/stm32g4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_adc2);
 225              		.loc 1 209 3 view .LVU21
 226 0000 0148     		ldr	r0, .L15
 227 0002 FFF7FEBF 		b	HAL_DMA_IRQHandler
 228              	.LVL1:
 229              	.L16:
 230 0006 00BF     		.align	2
 231              	.L15:
 232 0008 00000000 		.word	hdma_adc2
 233              		.cfi_endproc
 234              	.LFE1061:
 236              		.section	.text.HRTIM1_TIMD_IRQHandler,"ax",%progbits
 237              		.align	1
 238              		.global	HRTIM1_TIMD_IRQHandler
 239              		.syntax unified
 240              		.thumb
 241              		.thumb_func
 242              		.fpu fpv4-sp-d16
 244              	HRTIM1_TIMD_IRQHandler:
 245              	.LFB1062:
 210:Src/stm32g4xx_it.c ****   /* USER CODE BEGIN DMA1_Channel1_IRQn 1 */
 211:Src/stm32g4xx_it.c **** 
 212:Src/stm32g4xx_it.c ****   /* USER CODE END DMA1_Channel1_IRQn 1 */
 213:Src/stm32g4xx_it.c **** }
 214:Src/stm32g4xx_it.c **** 
 215:Src/stm32g4xx_it.c **** /**
 216:Src/stm32g4xx_it.c ****   * @brief This function handles HRTIM timer D global interrupt.
 217:Src/stm32g4xx_it.c ****   */
 218:Src/stm32g4xx_it.c **** void HRTIM1_TIMD_IRQHandler(void)
 219:Src/stm32g4xx_it.c **** {
 246              		.loc 1 219 1 view -0
 247              		.cfi_startproc
 248              		@ args = 0, pretend = 0, frame = 0
 249              		@ frame_needed = 0, uses_anonymous_args = 0
 250              		@ link register save eliminated.
 220:Src/stm32g4xx_it.c ****   /* USER CODE BEGIN HRTIM1_TIMD_IRQn 0 */
 221:Src/stm32g4xx_it.c **** 
 222:Src/stm32g4xx_it.c ****   /* USER CODE END HRTIM1_TIMD_IRQn 0 */
 223:Src/stm32g4xx_it.c ****   HAL_HRTIM_IRQHandler(&hhrtim1,HRTIM_TIMERINDEX_TIMER_D);
ARM GAS  /tmp/cc49UZSv.s 			page 9


 251              		.loc 1 223 3 view .LVU23
 252 0000 0148     		ldr	r0, .L18
 253 0002 0321     		movs	r1, #3
 254 0004 FFF7FEBF 		b	HAL_HRTIM_IRQHandler
 255              	.LVL2:
 256              	.L19:
 257              		.align	2
 258              	.L18:
 259 0008 00000000 		.word	hhrtim1
 260              		.cfi_endproc
 261              	.LFE1062:
 263              		.section	.text.USB_LP_IRQHandler,"ax",%progbits
 264              		.align	1
 265              		.global	USB_LP_IRQHandler
 266              		.syntax unified
 267              		.thumb
 268              		.thumb_func
 269              		.fpu fpv4-sp-d16
 271              	USB_LP_IRQHandler:
 272              	.LFB1063:
 224:Src/stm32g4xx_it.c ****   /* USER CODE BEGIN HRTIM1_TIMD_IRQn 1 */
 225:Src/stm32g4xx_it.c **** 
 226:Src/stm32g4xx_it.c ****   /* USER CODE END HRTIM1_TIMD_IRQn 1 */
 227:Src/stm32g4xx_it.c **** }
 228:Src/stm32g4xx_it.c **** 
 229:Src/stm32g4xx_it.c **** /* USER CODE BEGIN 1 */
 230:Src/stm32g4xx_it.c **** /******************************************************************************/
 231:Src/stm32g4xx_it.c **** /* STM32G4xx Peripheral Interrupt Handlers                                    */
 232:Src/stm32g4xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 233:Src/stm32g4xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 234:Src/stm32g4xx_it.c **** /* please refer to the startup file (startup_stm32g4xx.s).                    */
 235:Src/stm32g4xx_it.c **** /******************************************************************************/
 236:Src/stm32g4xx_it.c **** /**
 237:Src/stm32g4xx_it.c ****   * @brief This function handles USB low priority interrupt remap.
 238:Src/stm32g4xx_it.c ****   */
 239:Src/stm32g4xx_it.c **** void USB_LP_IRQHandler(void)
 240:Src/stm32g4xx_it.c **** {
 273              		.loc 1 240 1 view -0
 274              		.cfi_startproc
 275              		@ args = 0, pretend = 0, frame = 0
 276              		@ frame_needed = 0, uses_anonymous_args = 0
 277              		@ link register save eliminated.
 241:Src/stm32g4xx_it.c ****   /* USER CODE BEGIN USB_LP_IRQn 0 */
 242:Src/stm32g4xx_it.c **** 
 243:Src/stm32g4xx_it.c ****   /* USER CODE END USB_LP_IRQn 0 */
 244:Src/stm32g4xx_it.c ****   HAL_PCD_IRQHandler(&hpcd_USB_FS);
 278              		.loc 1 244 3 view .LVU25
 279 0000 0148     		ldr	r0, .L21
 280 0002 FFF7FEBF 		b	HAL_PCD_IRQHandler
 281              	.LVL3:
 282              	.L22:
 283 0006 00BF     		.align	2
 284              	.L21:
 285 0008 00000000 		.word	hpcd_USB_FS
 286              		.cfi_endproc
 287              	.LFE1063:
 289              		.text
ARM GAS  /tmp/cc49UZSv.s 			page 10


 290              	.Letext0:
 291              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 292              		.file 3 "Drivers/CMSIS/Include/core_cm4.h"
 293              		.file 4 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/system_stm32g4xx.h"
 294              		.file 5 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g474xx.h"
 295              		.file 6 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 296              		.file 7 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_def.h"
 297              		.file 8 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_dma.h"
 298              		.file 9 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_flash.h"
 299              		.file 10 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_hrtim.h"
 300              		.file 11 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usb.h"
 301              		.file 12 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_pcd.h"
 302              		.file 13 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal.h"
 303              		.file 14 "/usr/include/newlib/sys/_types.h"
 304              		.file 15 "/usr/include/newlib/sys/reent.h"
 305              		.file 16 "/usr/include/newlib/sys/lock.h"
 306              		.file 17 "/usr/include/newlib/stdlib.h"
 307              		.file 18 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_def.h"
 308              		.file 19 "Middlewares/ST/STM32_USB_Device_Library/Class/CDC/Inc/usbd_cdc.h"
 309              		.file 20 "USB_Device/App/usbd_cdc_if.h"
 310              		.file 21 "libscpi/inc/scpi/types.h"
 311              		.file 22 "libscpi/inc/scpi/parser.h"
 312              		.file 23 "libscpi/inc/scpi/units.h"
 313              		.file 24 "Inc/scpi-def.h"
 314              		.file 25 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h"
ARM GAS  /tmp/cc49UZSv.s 			page 11


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32g4xx_it.c
     /tmp/cc49UZSv.s:18     .text.NMI_Handler:0000000000000000 $t
     /tmp/cc49UZSv.s:26     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/cc49UZSv.s:40     .text.HardFault_Handler:0000000000000000 $t
     /tmp/cc49UZSv.s:47     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/cc49UZSv.s:64     .text.MemManage_Handler:0000000000000000 $t
     /tmp/cc49UZSv.s:71     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/cc49UZSv.s:88     .text.BusFault_Handler:0000000000000000 $t
     /tmp/cc49UZSv.s:95     .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/cc49UZSv.s:112    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/cc49UZSv.s:119    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/cc49UZSv.s:136    .text.SVC_Handler:0000000000000000 $t
     /tmp/cc49UZSv.s:143    .text.SVC_Handler:0000000000000000 SVC_Handler
     /tmp/cc49UZSv.s:154    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/cc49UZSv.s:161    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/cc49UZSv.s:172    .text.PendSV_Handler:0000000000000000 $t
     /tmp/cc49UZSv.s:179    .text.PendSV_Handler:0000000000000000 PendSV_Handler
     /tmp/cc49UZSv.s:190    .text.SysTick_Handler:0000000000000000 $t
     /tmp/cc49UZSv.s:197    .text.SysTick_Handler:0000000000000000 SysTick_Handler
     /tmp/cc49UZSv.s:211    .text.DMA1_Channel1_IRQHandler:0000000000000000 $t
     /tmp/cc49UZSv.s:218    .text.DMA1_Channel1_IRQHandler:0000000000000000 DMA1_Channel1_IRQHandler
     /tmp/cc49UZSv.s:232    .text.DMA1_Channel1_IRQHandler:0000000000000008 $d
     /tmp/cc49UZSv.s:237    .text.HRTIM1_TIMD_IRQHandler:0000000000000000 $t
     /tmp/cc49UZSv.s:244    .text.HRTIM1_TIMD_IRQHandler:0000000000000000 HRTIM1_TIMD_IRQHandler
     /tmp/cc49UZSv.s:259    .text.HRTIM1_TIMD_IRQHandler:0000000000000008 $d
     /tmp/cc49UZSv.s:264    .text.USB_LP_IRQHandler:0000000000000000 $t
     /tmp/cc49UZSv.s:271    .text.USB_LP_IRQHandler:0000000000000000 USB_LP_IRQHandler
     /tmp/cc49UZSv.s:285    .text.USB_LP_IRQHandler:0000000000000008 $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_DMA_IRQHandler
hdma_adc2
HAL_HRTIM_IRQHandler
hhrtim1
HAL_PCD_IRQHandler
hpcd_USB_FS
